{"id":"c635a2e9c2bdb5cba9868862dea9e297","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n    function decimals() external view returns (uint8);\n\n    function description() external view returns (string memory);\n\n    function version() external view returns (uint256);\n\n    function getRoundData(\n        uint80 _roundId\n    )\n        external\n        view\n        returns (\n            uint80 roundId,\n            uint256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            uint256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"@openzeppelin/contracts/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    using SafeMath for uint256;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n\n        _approve(account, _msgSender(), decreasedAllowance);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"contracts/AUSD.sol":{"content":"// SPDX-License-Identifier: MIT LICENSE\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\r\n\r\n\r\ncontract AUSD is IERC20, ERC20Burnable, Ownable, AccessControl {\r\n\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for ERC20;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\");\r\n\r\n    constructor () ERC20(\"AUSD Stable\", \"AUSD\") {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n        _setupRole(MANAGER_ROLE, _msgSender());\r\n    }\r\n\r\n    function mint(uint256 amount) external {\r\n        require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        _mint(msg.sender, amount);\r\n    }\r\n}\r\n\r\n"},"contracts/AUSDGovernance.sol":{"content":"// SPDX-License-Identifier: MIT LICENSE\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\nimport \"./AUSD.sol\";\r\n\r\ncontract AUSDGovernance is Ownable, ReentrancyGuard, AccessControl {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct SupChange {\r\n        string method;\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n        uint256 blocknum;\r\n    }\r\n\r\n    struct ReserveList {\r\n        IERC20 colToken;\r\n    }\r\n\r\n    mapping(uint256 => ReserveList) public rsvList;\r\n    mapping(uint256 => SupChange) public _supplyChanges;\r\n\r\n    AUSD private ausd;\r\n    AggregatorV3Interface private priceOracle;\r\n    address private reserveContract;\r\n    uint256 public ausdsupply;\r\n    address public datafeed;\r\n    uint256 public supplyChangeCount;\r\n    uint256 public stableColatPrice = 1e18;\r\n    uint256 public stableColatAmount;\r\n    uint256 private constant COL_PRICE_TO_WEI = 1e10;\r\n    uint256 private constant WEI_VALUE = 1e18;\r\n    uint256 public unstableColatAmount;\r\n    uint256 public unstableColPrice;\r\n    uint256 public reserveCount;\r\n\r\n    bytes32 public constant GOVERN_ROLE = keccak256(\"GOVERN_ROLE\");\r\n\r\n    event RepegAction(uint256 time, uint256 amount);\r\n    event Withdraw(uint256 time, uint256 amount);\r\n\r\n    constructor(AUSD _ausd) {\r\n        ausd = _ausd;\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n        _setupRole(GOVERN_ROLE, _msgSender());\r\n    }\r\n\r\n    function setDataFeedAddress(address contractaddress) external {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        datafeed = contractaddress;\r\n        priceOracle = AggregatorV3Interface(datafeed);\r\n    }\r\n\r\n    function addColateralToken(IERC20 colcontract) external nonReentrant {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        rsvList[reserveCount].colToken = colcontract;\r\n        reserveCount++;\r\n    }\r\n\r\n    function fetchColPrice() external nonReentrant {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        (, uint256 price, , , ) = priceOracle.latestRoundData();\r\n        uint256 value = (price).mul(COL_PRICE_TO_WEI);\r\n        unstableColPrice = value;\r\n    }\r\n\r\n    function setReserveContract(address reserve) external nonReentrant {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        reserveContract = reserve;\r\n    }\r\n\r\n    function colateralReBalancing() internal returns (bool) {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        uint256 stableBalance = rsvList[0].colToken.balanceOf(reserveContract);\r\n        uint256 unstableBalance = rsvList[1].colToken.balanceOf(\r\n            reserveContract\r\n        );\r\n        if (stableBalance != stableColatAmount) {\r\n            stableColatAmount = stableBalance;\r\n        }\r\n        if (unstableBalance != stableColatAmount) {\r\n            unstableColatAmount = unstableBalance;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setAUSDSupply(uint256 totalSupply) external {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        ausdsupply = totalSupply;\r\n    }\r\n\r\n    function validatePeg() external nonReentrant {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        bool result = colateralReBalancing();\r\n        if (result = true) {\r\n            uint256 rawcolvalue = (stableColatAmount.mul(WEI_VALUE)).add(\r\n                unstableColatAmount.mul(unstableColPrice)\r\n            );\r\n            uint256 colvalue = rawcolvalue.div(WEI_VALUE);\r\n            if (colvalue < ausdsupply) {\r\n                uint256 supplyChange = ausdsupply.sub(colvalue);\r\n                ausd.burn(supplyChange);\r\n                _supplyChanges[supplyChangeCount].method = \"Burn\";\r\n                _supplyChanges[supplyChangeCount].amount = supplyChange;\r\n            }\r\n            if (colvalue > ausdsupply) {\r\n                uint256 supplyChange = colvalue.sub(ausdsupply);\r\n                ausd.mint(supplyChange);\r\n                _supplyChanges[supplyChangeCount].method = \"Mint\";\r\n                _supplyChanges[supplyChangeCount].amount = supplyChange;\r\n            }\r\n            ausdsupply = colvalue;\r\n            _supplyChanges[supplyChangeCount].blocknum = block.number;\r\n            _supplyChanges[supplyChangeCount].timestamp = block.timestamp;\r\n            supplyChangeCount++;\r\n            emit RepegAction(block.timestamp, colvalue);\r\n        }\r\n    }\r\n\r\n    function withdraw(uint256 _amount) external nonReentrant {\r\n        require(hasRole(GOVERN_ROLE, _msgSender()), \"Not allowed\");\r\n        ausd.transfer(address(msg.sender), _amount);\r\n        emit Withdraw(block.timestamp, _amount);\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> @openzeppelin/contracts/token/ERC20/ERC20.sol:55:5:\n   |\n55 |     constructor (string memory name_, string memory symbol_) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2095,"file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","start":1950},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"120:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"157:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"165:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"191:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"191:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"190:7:0"},"scope":45,"src":"148:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"213:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"224:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"250:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"250:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"249:15:0"},"scope":45,"src":"204:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"280:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"287:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"313:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"312:9:0"},"scope":45,"src":"271:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"337:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"366:8:0","nodeType":"VariableDeclaration","scope":31,"src":"359:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"359:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"349:31:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"448:7:0","nodeType":"VariableDeclaration","scope":31,"src":"441:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"477:6:0","nodeType":"VariableDeclaration","scope":31,"src":"469:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"505:9:0","nodeType":"VariableDeclaration","scope":31,"src":"497:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"536:9:0","nodeType":"VariableDeclaration","scope":31,"src":"528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"566:15:0","nodeType":"VariableDeclaration","scope":31,"src":"559:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"427:164:0"},"scope":45,"src":"328:264:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"607:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"622:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"692:7:0","nodeType":"VariableDeclaration","scope":44,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"685:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"721:6:0","nodeType":"VariableDeclaration","scope":44,"src":"713:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"749:9:0","nodeType":"VariableDeclaration","scope":44,"src":"741:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"780:9:0","nodeType":"VariableDeclaration","scope":44,"src":"772:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"810:15:0","nodeType":"VariableDeclaration","scope":44,"src":"803:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"803:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"671:164:0"},"scope":45,"src":"598:238:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"110:728:0","usedErrors":[],"usedEvents":[]}],"src":"32:807:0"},"id":0},"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[331],"Address":[1951],"Context":[1974],"EnumerableSet":[2489]},"id":332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/EnumerableSet.sol","file":"../utils/EnumerableSet.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":332,"sourceUnit":2490,"src":"58:36:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":49,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":332,"sourceUnit":1952,"src":"95:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":332,"sourceUnit":1975,"src":"126:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":52,"name":"Context","nameLocations":["1470:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"1470:7:1"},"id":53,"nodeType":"InheritanceSpecifier","src":"1470:7:1"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"158:1276:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":331,"linearizedBaseContracts":[331,1974],"name":"AccessControl","nameLocation":"1453:13:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":57,"libraryName":{"id":54,"name":"EnumerableSet","nameLocations":["1490:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":2489,"src":"1490:13:1"},"nodeType":"UsingForDirective","src":"1484:49:1","typeName":{"id":56,"nodeType":"UserDefinedTypeName","pathNode":{"id":55,"name":"EnumerableSet.AddressSet","nameLocations":["1508:13:1","1522:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"1508:24:1"},"referencedDeclaration":2262,"src":"1508:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":60,"libraryName":{"id":58,"name":"Address","nameLocations":["1544:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"1544:7:1"},"nodeType":"UsingForDirective","src":"1538:26:1","typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"canonicalName":"AccessControl.RoleData","id":66,"members":[{"constant":false,"id":63,"mutability":"mutable","name":"members","nameLocation":"1621:7:1","nodeType":"VariableDeclaration","scope":66,"src":"1596:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"EnumerableSet.AddressSet","nameLocations":["1596:13:1","1610:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"1596:24:1"},"referencedDeclaration":2262,"src":"1596:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"adminRole","nameLocation":"1646:9:1","nodeType":"VariableDeclaration","scope":66,"src":"1638:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1577:8:1","nodeType":"StructDefinition","scope":331,"src":"1570:92:1","visibility":"public"},{"constant":false,"id":71,"mutability":"mutable","name":"_roles","nameLocation":"1706:6:1","nodeType":"VariableDeclaration","scope":331,"src":"1668:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":70,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":67,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1677:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1668:29:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":69,"nodeType":"UserDefinedTypeName","pathNode":{"id":68,"name":"RoleData","nameLocations":["1688:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"1688:8:1"},"referencedDeclaration":66,"src":"1688:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":74,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"1743:18:1","nodeType":"VariableDeclaration","scope":331,"src":"1719:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1719:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1764:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"anonymous":false,"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1775:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":83,"name":"RoleAdminChanged","nameLocation":"2078:16:1","nodeType":"EventDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"2111:4:1","nodeType":"VariableDeclaration","scope":83,"src":"2095:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"2133:17:1","nodeType":"VariableDeclaration","scope":83,"src":"2117:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2117:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"2168:12:1","nodeType":"VariableDeclaration","scope":83,"src":"2152:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2152:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2094:87:1"},"src":"2072:110:1"},{"anonymous":false,"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2188:198:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":92,"name":"RoleGranted","nameLocation":"2397:11:1","nodeType":"EventDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"2425:4:1","nodeType":"VariableDeclaration","scope":92,"src":"2409:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":85,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2409:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2447:7:1","nodeType":"VariableDeclaration","scope":92,"src":"2431:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2472:6:1","nodeType":"VariableDeclaration","scope":92,"src":"2456:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2408:71:1"},"src":"2391:89:1"},{"anonymous":false,"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2486:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":101,"name":"RoleRevoked","nameLocation":"2772:11:1","nodeType":"EventDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"2800:4:1","nodeType":"VariableDeclaration","scope":101,"src":"2784:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2784:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2822:7:1","nodeType":"VariableDeclaration","scope":101,"src":"2806:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"2806:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":99,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2847:6:1","nodeType":"VariableDeclaration","scope":101,"src":"2831:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2783:71:1"},"src":"2766:89:1"},{"body":{"id":119,"nodeType":"Block","src":"3017:62:1","statements":[{"expression":{"arguments":[{"id":116,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"3064:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":111,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3034:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":113,"indexExpression":{"id":112,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"3041:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3034:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3047:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3034:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3055:8:1","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"3034:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2262_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2262_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3034:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":110,"id":118,"nodeType":"Return","src":"3027:45:1"}]},"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"2861:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":120,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2951:7:1","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"role","nameLocation":"2967:4:1","nodeType":"VariableDeclaration","scope":120,"src":"2959:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2959:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"account","nameLocation":"2981:7:1","nodeType":"VariableDeclaration","scope":120,"src":"2973:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"2973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2958:31:1"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":120,"src":"3011:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":108,"name":"bool","nodeType":"ElementaryTypeName","src":"3011:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3010:6:1"},"scope":331,"src":"2942:137:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":135,"nodeType":"Block","src":"3319:53:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":128,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3336:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":130,"indexExpression":{"id":129,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3343:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3336:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3349:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3336:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3357:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"3336:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2262_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2262_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":127,"id":134,"nodeType":"Return","src":"3329:36:1"}]},"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"3085:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":136,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"3256:18:1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"role","nameLocation":"3283:4:1","nodeType":"VariableDeclaration","scope":136,"src":"3275:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3275:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3274:14:1"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":136,"src":"3310:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3309:9:1"},"scope":331,"src":"3247:125:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":154,"nodeType":"Block","src":"4039:54:1","statements":[{"expression":{"arguments":[{"id":151,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"4080:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":146,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"4056:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":148,"indexExpression":{"id":147,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"4063:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4056:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4069:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":63,"src":"4056:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"4056:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2262_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2262_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4056:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":145,"id":153,"nodeType":"Return","src":"4049:37:1"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3378:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":155,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"3966:13:1","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"role","nameLocation":"3988:4:1","nodeType":"VariableDeclaration","scope":155,"src":"3980:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3980:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"index","nameLocation":"4002:5:1","nodeType":"VariableDeclaration","scope":155,"src":"3994:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:29:1"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":155,"src":"4030:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"4030:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4029:9:1"},"scope":331,"src":"3957:136:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":168,"nodeType":"Block","src":"4340:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":163,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"4357:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":165,"indexExpression":{"id":164,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"4364:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4357:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4370:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4357:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":162,"id":167,"nodeType":"Return","src":"4350:29:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"4099:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":169,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4283:12:1","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"role","nameLocation":"4304:4:1","nodeType":"VariableDeclaration","scope":169,"src":"4296:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4296:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4295:14:1"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"4331:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4331:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4330:9:1"},"scope":331,"src":"4274:112:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":194,"nodeType":"Block","src":"4701:158:1","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":179,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"4727:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":181,"indexExpression":{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"4734:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4727:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4740:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4727:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":183,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4751:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":178,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"4719:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4719:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4766:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","typeString":"literal_string \"AccessControl: sender must be an admin to grant\""},"value":"AccessControl: sender must be an admin to grant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","typeString":"literal_string \"AccessControl: sender must be an admin to grant\""}],"id":177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4711:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:105:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"4711:105:1"},{"expression":{"arguments":[{"id":190,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"4838:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":191,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"4844:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":189,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4827:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"ExpressionStatement","src":"4827:25:1"}]},"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"4392:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":195,"implemented":true,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"4645:9:1","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"role","nameLocation":"4663:4:1","nodeType":"VariableDeclaration","scope":195,"src":"4655:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"account","nameLocation":"4677:7:1","nodeType":"VariableDeclaration","scope":195,"src":"4669:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"4669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4654:31:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"4701:0:1"},"scope":331,"src":"4636:223:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":220,"nodeType":"Block","src":"5159:160:1","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":205,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"5185:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":207,"indexExpression":{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5192:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5185:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5198:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":65,"src":"5185:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":209,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5209:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":204,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"5177:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5177:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5224:50:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","typeString":"literal_string \"AccessControl: sender must be an admin to revoke\""},"value":"AccessControl: sender must be an admin to revoke"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","typeString":"literal_string \"AccessControl: sender must be an admin to revoke\""}],"id":203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5169:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5169:106:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"5169:106:1"},{"expression":{"arguments":[{"id":216,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5298:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":217,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5304:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":215,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5286:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5286:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"ExpressionStatement","src":"5286:26:1"}]},"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4865:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"5102:10:1","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"role","nameLocation":"5121:4:1","nodeType":"VariableDeclaration","scope":221,"src":"5113:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5113:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"5135:7:1","nodeType":"VariableDeclaration","scope":221,"src":"5127:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"5127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5112:31:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5159:0:1"},"scope":331,"src":"5093:226:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":242,"nodeType":"Block","src":"5878:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"5896:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5907:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5907:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5896:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5921:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5888:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5888:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"5888:83:1"},{"expression":{"arguments":[{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5994:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":239,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5982:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"5982:26:1"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"5325:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":243,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5819:12:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"role","nameLocation":"5840:4:1","nodeType":"VariableDeclaration","scope":243,"src":"5832:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5832:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"account","nameLocation":"5854:7:1","nodeType":"VariableDeclaration","scope":243,"src":"5846:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5831:31:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"5878:0:1"},"scope":331,"src":"5810:205:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":256,"nodeType":"Block","src":"6648:42:1","statements":[{"expression":{"arguments":[{"id":252,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6669:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":253,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"6675:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":251,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"6658:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6658:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"6658:25:1"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"6021:554:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6589:10:1","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"role","nameLocation":"6608:4:1","nodeType":"VariableDeclaration","scope":257,"src":"6600:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6600:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"account","nameLocation":"6622:7:1","nodeType":"VariableDeclaration","scope":257,"src":"6614:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"6614:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6599:31:1"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"6648:0:1"},"scope":331,"src":"6580:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"6888:123:1","statements":[{"eventCall":{"arguments":[{"id":266,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6920:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"baseExpression":{"id":267,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"6926:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":269,"indexExpression":{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6933:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6939:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6926:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":271,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6950:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":265,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"6903:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"EmitStatement","src":"6898:62:1"},{"expression":{"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":274,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"6970:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":276,"indexExpression":{"id":275,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6977:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6970:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6983:9:1","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":65,"src":"6970:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":278,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6995:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6970:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":280,"nodeType":"ExpressionStatement","src":"6970:34:1"}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6696:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6824:13:1","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6846:4:1","nodeType":"VariableDeclaration","scope":282,"src":"6838:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6838:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"adminRole","nameLocation":"6860:9:1","nodeType":"VariableDeclaration","scope":282,"src":"6852:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6852:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6837:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"6888:0:1"},"scope":331,"src":"6815:196:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"7076:125:1","statements":[{"condition":{"arguments":[{"id":294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7115:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":289,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"7090:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":291,"indexExpression":{"id":290,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7097:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7090:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7103:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":63,"src":"7090:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7111:3:1","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2289,"src":"7090:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2262_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2262_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7090:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"IfStatement","src":"7086:109:1","trueBody":{"id":303,"nodeType":"Block","src":"7125:70:1","statements":[{"eventCall":{"arguments":[{"id":297,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7156:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":298,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7162:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":299,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7171:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7171:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"7144:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7144:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"EmitStatement","src":"7139:45:1"}]}}]},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7026:10:1","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"role","nameLocation":"7045:4:1","nodeType":"VariableDeclaration","scope":306,"src":"7037:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7037:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"account","nameLocation":"7059:7:1","nodeType":"VariableDeclaration","scope":306,"src":"7051:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"7051:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7036:31:1"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"7076:0:1"},"scope":331,"src":"7017:184:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":329,"nodeType":"Block","src":"7267:128:1","statements":[{"condition":{"arguments":[{"id":318,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"7309:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":313,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"7281:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$66_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":315,"indexExpression":{"id":314,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7288:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7281:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$66_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7294:7:1","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":63,"src":"7281:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7302:6:1","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2316,"src":"7281:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2262_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2262_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7281:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":328,"nodeType":"IfStatement","src":"7277:112:1","trueBody":{"id":327,"nodeType":"Block","src":"7319:70:1","statements":[{"eventCall":{"arguments":[{"id":321,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7350:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":322,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"7356:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":323,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"7365:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7365:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"7338:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7338:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"EmitStatement","src":"7333:45:1"}]}}]},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7216:11:1","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"role","nameLocation":"7236:4:1","nodeType":"VariableDeclaration","scope":330,"src":"7228:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7228:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"account","nameLocation":"7250:7:1","nodeType":"VariableDeclaration","scope":330,"src":"7242:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"7242:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7227:31:1"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"7267:0:1"},"scope":331,"src":"7207:188:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":332,"src":"1435:5962:1","usedErrors":[],"usedEvents":[83,92,101]}],"src":"33:7365:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1974],"Ownable":[441]},"id":442,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":333,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":442,"sourceUnit":1975,"src":"58:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":336,"name":"Context","nameLocations":["613:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"613:7:2"},"id":337,"nodeType":"InheritanceSpecifier","src":"613:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"89:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":441,"linearizedBaseContracts":[441,1974],"name":"Ownable","nameLocation":"602:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":339,"mutability":"mutable","name":"_owner","nameLocation":"643:6:2","nodeType":"VariableDeclaration","scope":441,"src":"627:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":345,"name":"OwnershipTransferred","nameLocation":"662:20:2","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"699:13:2","nodeType":"VariableDeclaration","scope":345,"src":"683:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"730:8:2","nodeType":"VariableDeclaration","scope":345,"src":"714:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"682:57:2"},"src":"656:84:2"},{"body":{"id":366,"nodeType":"Block","src":"857:135:2","statements":[{"assignments":[350],"declarations":[{"constant":false,"id":350,"mutability":"mutable","name":"msgSender","nameLocation":"875:9:2","nodeType":"VariableDeclaration","scope":366,"src":"867:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":353,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"887:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"887:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"867:32:2"},{"expression":{"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":354,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"909:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":355,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"918:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"909:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":357,"nodeType":"ExpressionStatement","src":"909:18:2"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"963:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"963:7:2","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"963:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":363,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"975:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"942:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"942:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"EmitStatement","src":"937:48:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"746:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":367,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"854:2:2"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"857:0:2"},"scope":441,"src":"842:150:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":375,"nodeType":"Block","src":"1123:30:2","statements":[{"expression":{"id":373,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1140:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":372,"id":374,"nodeType":"Return","src":"1133:13:2"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"998:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1077:5:2","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"1082:2:2"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1114:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:9:2"},"scope":441,"src":"1068:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":389,"nodeType":"Block","src":"1262:96:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1280:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1291:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1280:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1272:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1272:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"1272:68:2"},{"id":388,"nodeType":"PlaceholderStatement","src":"1350:1:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1159:77:2","text":" @dev Throws if called by any account other than the owner."},"id":390,"name":"onlyOwner","nameLocation":"1250:9:2","nodeType":"ModifierDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"1259:2:2"},"src":"1241:117:2","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"1754:91:2","statements":[{"eventCall":{"arguments":[{"id":397,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1790:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1806:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1798:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:2","typeDescriptions":{}}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1798:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":396,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1769:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"EmitStatement","src":"1764:45:2"},{"expression":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":404,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1828:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:2","typeDescriptions":{}}},"id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1819:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":410,"nodeType":"ExpressionStatement","src":"1819:19:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"1364:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":412,"implemented":true,"kind":"function","modifiers":[{"id":394,"kind":"modifierInvocation","modifierName":{"id":393,"name":"onlyOwner","nameLocations":["1744:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"1744:9:2"},"nodeType":"ModifierInvocation","src":"1744:9:2"}],"name":"renounceOwnership","nameLocation":"1709:17:2","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"1726:2:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"1754:0:2"},"scope":441,"src":"1700:145:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":439,"nodeType":"Block","src":"2064:170:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2082:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:2","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2082:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2106:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2074:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2074:73:2"},{"eventCall":{"arguments":[{"id":431,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2183:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2191:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":430,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2162:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"EmitStatement","src":"2157:43:2"},{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":435,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2210:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":436,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2219:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2210:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":438,"nodeType":"ExpressionStatement","src":"2210:17:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"1851:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":440,"implemented":true,"kind":"function","modifiers":[{"id":418,"kind":"modifierInvocation","modifierName":{"id":417,"name":"onlyOwner","nameLocations":["2054:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":390,"src":"2054:9:2"},"nodeType":"ModifierInvocation","src":"2054:9:2"}],"name":"transferOwnership","nameLocation":"2003:17:2","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"newOwner","nameLocation":"2029:8:2","nodeType":"VariableDeclaration","scope":440,"src":"2021:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2021:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2020:18:2"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2064:0:2"},"scope":441,"src":"1994:240:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":442,"src":"584:1652:2","usedErrors":[],"usedEvents":[345]}],"src":"33:2204:2"},"id":2},"@openzeppelin/contracts/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","exportedSymbols":{"SafeMath":[796]},"id":797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":443,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"58:563:3","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":796,"linearizedBaseContracts":[796],"name":"SafeMath","nameLocation":"630:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":474,"nodeType":"Block","src":"857:98:3","statements":[{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"c","nameLocation":"875:1:3","nodeType":"VariableDeclaration","scope":474,"src":"867:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"879:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"883:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"879:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"867:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":462,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"898:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"902:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"898:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":469,"nodeType":"IfStatement","src":"894:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"913:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"920:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"912:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":455,"id":468,"nodeType":"Return","src":"905:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"940:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":471,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"946:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"939:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":455,"id":473,"nodeType":"Return","src":"932:16:3"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"645:131:3","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"790:6:3","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"a","nameLocation":"805:1:3","nodeType":"VariableDeclaration","scope":475,"src":"797:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"b","nameLocation":"816:1:3","nodeType":"VariableDeclaration","scope":475,"src":"808:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"796:22:3"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"842:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"848:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"841:15:3"},"scope":796,"src":"781:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"1177:75:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"1191:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1195:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1191:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"1187:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1206:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1213:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1205:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":486,"id":493,"nodeType":"Return","src":"1198:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1233:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"1239:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"1243:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1239:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1232:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":486,"id":500,"nodeType":"Return","src":"1225:20:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"961:135:3","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":502,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1110:6:3","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"a","nameLocation":"1125:1:3","nodeType":"VariableDeclaration","scope":502,"src":"1117:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"b","nameLocation":"1136:1:3","nodeType":"VariableDeclaration","scope":502,"src":"1128:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1116:22:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"1162:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"1162:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"1168:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1161:15:3"},"scope":796,"src":"1101:151:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"1476:359:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1708:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1708:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"1704:28:3","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1724:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1723:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":513,"id":520,"nodeType":"Return","src":"1716:16:3"}},{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"c","nameLocation":"1750:1:3","nodeType":"VariableDeclaration","scope":542,"src":"1742:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":527,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1754:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1758:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1742:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":528,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1773:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1777:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1773:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"1782:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1773:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":537,"nodeType":"IfStatement","src":"1769:33:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1793:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1800:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1792:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":513,"id":536,"nodeType":"Return","src":"1785:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1820:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":539,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1819:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":513,"id":541,"nodeType":"Return","src":"1812:16:3"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"1258:137:3","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1409:6:3","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"a","nameLocation":"1424:1:3","nodeType":"VariableDeclaration","scope":543,"src":"1416:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"b","nameLocation":"1435:1:3","nodeType":"VariableDeclaration","scope":543,"src":"1427:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1415:22:3"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"1461:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"1461:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"1467:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:15:3"},"scope":796,"src":"1400:435:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"2060:76:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":555,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2074:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2079:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2074:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":562,"nodeType":"IfStatement","src":"2070:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2090:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2097:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2089:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":554,"id":561,"nodeType":"Return","src":"2082:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2117:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2123:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":565,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2127:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2123:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2116:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":554,"id":568,"nodeType":"Return","src":"2109:20:3"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"1841:138:3","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1993:6:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"a","nameLocation":"2008:1:3","nodeType":"VariableDeclaration","scope":570,"src":"2000:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"b","nameLocation":"2019:1:3","nodeType":"VariableDeclaration","scope":570,"src":"2011:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1999:22:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"2045:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"2045:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"2051:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2044:15:3"},"scope":796,"src":"1984:152:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"2371:76:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2385:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2390:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2385:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"2381:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2401:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2408:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2400:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":581,"id":588,"nodeType":"Return","src":"2393:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2428:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2434:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2438:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2434:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2427:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":581,"id":595,"nodeType":"Return","src":"2420:20:3"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"2142:148:3","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2304:6:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"a","nameLocation":"2319:1:3","nodeType":"VariableDeclaration","scope":597,"src":"2311:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2311:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"b","nameLocation":"2330:1:3","nodeType":"VariableDeclaration","scope":597,"src":"2322:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2310:22:3"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"2356:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"2356:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"2362:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2355:15:3"},"scope":796,"src":"2295:152:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":622,"nodeType":"Block","src":"2749:108:3","statements":[{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"c","nameLocation":"2767:1:3","nodeType":"VariableDeclaration","scope":622,"src":"2759:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2771:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":610,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2775:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2771:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2759:17:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2794:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2799:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2794:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2802:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2786:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"2786:46:3"},{"expression":{"id":620,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"2849:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":606,"id":621,"nodeType":"Return","src":"2842:8:3"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"2453:224:3","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":623,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2691:3:3","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"a","nameLocation":"2703:1:3","nodeType":"VariableDeclaration","scope":623,"src":"2695:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"b","nameLocation":"2714:1:3","nodeType":"VariableDeclaration","scope":623,"src":"2706:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2706:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:22:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":623,"src":"2740:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2740:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2739:9:3"},"scope":796,"src":"2682:175:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"3195:88:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3213:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3218:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3213:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3221:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3205:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"3205:49:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3271:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3275:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3271:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":632,"id":643,"nodeType":"Return","src":"3264:12:3"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2863:260:3","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3137:3:3","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"a","nameLocation":"3149:1:3","nodeType":"VariableDeclaration","scope":645,"src":"3141:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"b","nameLocation":"3160:1:3","nodeType":"VariableDeclaration","scope":645,"src":"3152:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3152:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3140:22:3"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"3186:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3186:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3185:9:3"},"scope":796,"src":"3128:155:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"3597:148:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3611:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3616:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"3607:20:3","trueBody":{"expression":{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3626:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":654,"id":659,"nodeType":"Return","src":"3619:8:3"}},{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"c","nameLocation":"3645:1:3","nodeType":"VariableDeclaration","scope":678,"src":"3637:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"3637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3649:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":664,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"3653:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3649:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3637:17:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"3672:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3676:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3672:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"3681:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3672:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3684:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":667,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3664:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"3664:56:3"},{"expression":{"id":676,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"3737:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":654,"id":677,"nodeType":"Return","src":"3730:8:3"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"3289:236:3","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3539:3:3","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"a","nameLocation":"3551:1:3","nodeType":"VariableDeclaration","scope":679,"src":"3543:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"b","nameLocation":"3562:1:3","nodeType":"VariableDeclaration","scope":679,"src":"3554:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3542:22:3"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"3588:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"3588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3587:9:3"},"scope":796,"src":"3530:215:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"4276:83:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4294:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4298:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4294:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:28:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4286:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4286:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"4286:44:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4347:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4351:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4347:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":688,"id":699,"nodeType":"Return","src":"4340:12:3"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"3751:453:3","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"4218:3:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"a","nameLocation":"4230:1:3","nodeType":"VariableDeclaration","scope":701,"src":"4222:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4222:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"b","nameLocation":"4241:1:3","nodeType":"VariableDeclaration","scope":701,"src":"4233:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4221:22:3"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"4267:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4267:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4266:9:3"},"scope":796,"src":"4209:150:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"4879:81:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4897:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4897:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4904:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4889:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4889:42:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"4948:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4952:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4948:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":710,"id":721,"nodeType":"Return","src":"4941:12:3"}]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"4365:442:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4821:3:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"a","nameLocation":"4833:1:3","nodeType":"VariableDeclaration","scope":723,"src":"4825:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"b","nameLocation":"4844:1:3","nodeType":"VariableDeclaration","scope":723,"src":"4836:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4824:22:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"4870:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4869:9:3"},"scope":796,"src":"4812:148:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"5519:68:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"5537:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5542:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5537:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":739,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5545:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5529:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"5529:29:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5575:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"5579:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5575:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":734,"id":745,"nodeType":"Return","src":"5568:12:3"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"4966:453:3","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"5433:3:3","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"a","nameLocation":"5445:1:3","nodeType":"VariableDeclaration","scope":747,"src":"5437:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5437:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"b","nameLocation":"5456:1:3","nodeType":"VariableDeclaration","scope":747,"src":"5448:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"errorMessage","nameLocation":"5473:12:3","nodeType":"VariableDeclaration","scope":747,"src":"5459:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"5459:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5436:50:3"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"5510:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"5510:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5509:9:3"},"scope":796,"src":"5424:163:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"6339:67:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6357:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6357:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":763,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"6364:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6349:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6349:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"6349:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6394:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":767,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6398:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6394:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":758,"id":769,"nodeType":"Return","src":"6387:12:3"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"5593:646:3","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"6253:3:3","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"a","nameLocation":"6265:1:3","nodeType":"VariableDeclaration","scope":771,"src":"6257:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"b","nameLocation":"6276:1:3","nodeType":"VariableDeclaration","scope":771,"src":"6268:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"6268:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"errorMessage","nameLocation":"6293:12:3","nodeType":"VariableDeclaration","scope":771,"src":"6279:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":753,"name":"string","nodeType":"ElementaryTypeName","src":"6279:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6256:50:3"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"6330:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6330:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6329:9:3"},"scope":796,"src":"6244:162:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"7147:67:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7165:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7169:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7165:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":787,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7172:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7157:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"7157:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7202:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7202:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":782,"id":793,"nodeType":"Return","src":"7195:12:3"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"6412:635:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"7061:3:3","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"a","nameLocation":"7073:1:3","nodeType":"VariableDeclaration","scope":795,"src":"7065:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"7065:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"b","nameLocation":"7084:1:3","nodeType":"VariableDeclaration","scope":795,"src":"7076:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"errorMessage","nameLocation":"7101:12:3","nodeType":"VariableDeclaration","scope":795,"src":"7087:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":777,"name":"string","nodeType":"ElementaryTypeName","src":"7087:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7064:50:3"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"7138:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7138:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7137:9:3"},"scope":796,"src":"7052:162:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":797,"src":"622:6594:3","usedErrors":[],"usedEvents":[]}],"src":"33:7184:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1974],"ERC20":[1299],"IERC20":[1436],"SafeMath":[796]},"id":1300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":798,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":1975,"src":"58:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":1437,"src":"92:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"../../math/SafeMath.sol","id":801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":797,"src":"115:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":803,"name":"Context","nameLocations":["1331:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"1331:7:4"},"id":804,"nodeType":"InheritanceSpecifier","src":"1331:7:4"},{"baseName":{"id":805,"name":"IERC20","nameLocations":["1340:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"1340:6:4"},"id":806,"nodeType":"InheritanceSpecifier","src":"1340:6:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"150:1162:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1299,"linearizedBaseContracts":[1299,1436,1974],"name":"ERC20","nameLocation":"1322:5:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":809,"libraryName":{"id":807,"name":"SafeMath","nameLocations":["1359:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"1359:8:4"},"nodeType":"UsingForDirective","src":"1353:27:4","typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":813,"mutability":"mutable","name":"_balances","nameLocation":"1423:9:4","nodeType":"VariableDeclaration","scope":1299,"src":"1386:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":812,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1386:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":819,"mutability":"mutable","name":"_allowances","nameLocation":"1497:11:4","nodeType":"VariableDeclaration","scope":1299,"src":"1439:69:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":818,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1439:49:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":817,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":821,"mutability":"mutable","name":"_totalSupply","nameLocation":"1531:12:4","nodeType":"VariableDeclaration","scope":1299,"src":"1515:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":823,"mutability":"mutable","name":"_name","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":1299,"src":"1550:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":822,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":825,"mutability":"mutable","name":"_symbol","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":1299,"src":"1576:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"1576:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":827,"mutability":"mutable","name":"_decimals","nameLocation":"1618:9:4","nodeType":"VariableDeclaration","scope":1299,"src":"1604:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":826,"name":"uint8","nodeType":"ElementaryTypeName","src":"1604:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":847,"nodeType":"Block","src":"2014:81:4","statements":[{"expression":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":835,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2024:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":836,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2032:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2024:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":838,"nodeType":"ExpressionStatement","src":"2024:13:4"},{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":839,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2047:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":840,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2057:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2047:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":842,"nodeType":"ExpressionStatement","src":"2047:17:4"},{"expression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":843,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2074:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2086:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2074:14:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":846,"nodeType":"ExpressionStatement","src":"2074:14:4"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"1634:311:4","text":" @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."},"id":848,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"name_","nameLocation":"1977:5:4","nodeType":"VariableDeclaration","scope":848,"src":"1963:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":829,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"symbol_","nameLocation":"1998:7:4","nodeType":"VariableDeclaration","scope":848,"src":"1984:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":831,"name":"string","nodeType":"ElementaryTypeName","src":"1984:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1962:44:4"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"2014:0:4"},"scope":1299,"src":"1950:145:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":856,"nodeType":"Block","src":"2220:29:4","statements":[{"expression":{"id":854,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2237:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":853,"id":855,"nodeType":"Return","src":"2230:12:4"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"2101:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":857,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2169:4:4","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"2173:2:4"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"2205:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"2205:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2204:15:4"},"scope":1299,"src":"2160:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":865,"nodeType":"Block","src":"2424:31:4","statements":[{"expression":{"id":863,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"2441:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":862,"id":864,"nodeType":"Return","src":"2434:14:4"}]},"documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"2255:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":866,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2371:6:4","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"2377:2:4"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"2409:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":860,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:4"},"scope":1299,"src":"2362:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":874,"nodeType":"Block","src":"3134:33:4","statements":[{"expression":{"id":872,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"3151:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":871,"id":873,"nodeType":"Return","src":"3144:16:4"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2461:612:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3087:8:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"3095:2:4"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"3127:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":869,"name":"uint8","nodeType":"ElementaryTypeName","src":"3127:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3126:7:4"},"scope":1299,"src":"3078:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1367],"body":{"id":884,"nodeType":"Block","src":"3297:36:4","statements":[{"expression":{"id":882,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"3314:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":881,"id":883,"nodeType":"Return","src":"3307:19:4"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"3173:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3236:11:4","nodeType":"FunctionDefinition","overrides":{"id":878,"nodeType":"OverrideSpecifier","overrides":[],"src":"3270:8:4"},"parameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"3247:2:4"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"3288:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3288:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3287:9:4"},"scope":1299,"src":"3227:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":898,"nodeType":"Block","src":"3474:42:4","statements":[{"expression":{"baseExpression":{"id":894,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3491:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":896,"indexExpression":{"id":895,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"3501:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3491:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":893,"id":897,"nodeType":"Return","src":"3484:25:4"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"3339:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":899,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3400:9:4","nodeType":"FunctionDefinition","overrides":{"id":890,"nodeType":"OverrideSpecifier","overrides":[],"src":"3447:8:4"},"parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"account","nameLocation":"3418:7:4","nodeType":"VariableDeclaration","scope":899,"src":"3410:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3409:17:4"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"3465:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3464:9:4"},"scope":1299,"src":"3391:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1385],"body":{"id":919,"nodeType":"Block","src":"3811:80:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3831:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3845:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3856:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3821:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"3821:42:4"},{"expression":{"hexValue":"74727565","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3880:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":909,"id":918,"nodeType":"Return","src":"3873:11:4"}]},"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"3522:192:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3728:8:4","nodeType":"FunctionDefinition","overrides":{"id":906,"nodeType":"OverrideSpecifier","overrides":[],"src":"3787:8:4"},"parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"recipient","nameLocation":"3745:9:4","nodeType":"VariableDeclaration","scope":920,"src":"3737:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"3737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"amount","nameLocation":"3764:6:4","nodeType":"VariableDeclaration","scope":920,"src":"3756:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:35:4"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"3805:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":907,"name":"bool","nodeType":"ElementaryTypeName","src":"3805:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3804:6:4"},"scope":1299,"src":"3719:172:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":937,"nodeType":"Block","src":"4047:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":931,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4064:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":933,"indexExpression":{"id":932,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4076:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4064:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":935,"indexExpression":{"id":934,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4083:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4064:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":930,"id":936,"nodeType":"Return","src":"4057:34:4"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"3897:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":938,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3958:9:4","nodeType":"FunctionDefinition","overrides":{"id":927,"nodeType":"OverrideSpecifier","overrides":[],"src":"4020:8:4"},"parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"owner","nameLocation":"3976:5:4","nodeType":"VariableDeclaration","scope":938,"src":"3968:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"spender","nameLocation":"3991:7:4","nodeType":"VariableDeclaration","scope":938,"src":"3983:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"3983:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3967:32:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"4038:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4038:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4037:9:4"},"scope":1299,"src":"3949:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1405],"body":{"id":958,"nodeType":"Block","src":"4325:77:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4344:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4344:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":952,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4358:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4367:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4335:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4335:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"4335:39:4"},{"expression":{"hexValue":"74727565","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4391:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":948,"id":957,"nodeType":"Return","src":"4384:11:4"}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"4104:127:4","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":959,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4245:7:4","nodeType":"FunctionDefinition","overrides":{"id":945,"nodeType":"OverrideSpecifier","overrides":[],"src":"4301:8:4"},"parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"spender","nameLocation":"4261:7:4","nodeType":"VariableDeclaration","scope":959,"src":"4253:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"amount","nameLocation":"4278:6:4","nodeType":"VariableDeclaration","scope":959,"src":"4270:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4252:33:4"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"4319:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"4319:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4318:6:4"},"scope":1299,"src":"4236:166:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":996,"nodeType":"Block","src":"4981:205:4","statements":[{"expression":{"arguments":[{"id":973,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"5001:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"5009:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5020:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4991:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4991:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"ExpressionStatement","src":"4991:36:4"},{"expression":{"arguments":[{"id":979,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"5046:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5054:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5054:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5106:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5114:42:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"expression":{"baseExpression":{"baseExpression":{"id":982,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5068:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":984,"indexExpression":{"id":983,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"5080:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5068:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":987,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":985,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5088:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5068:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5102:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"5068:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":978,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5037:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:121:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"5037:121:4"},{"expression":{"hexValue":"74727565","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5175:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":971,"id":995,"nodeType":"Return","src":"5168:11:4"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"4408:456:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":997,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4878:12:4","nodeType":"FunctionDefinition","overrides":{"id":968,"nodeType":"OverrideSpecifier","overrides":[],"src":"4957:8:4"},"parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"sender","nameLocation":"4899:6:4","nodeType":"VariableDeclaration","scope":997,"src":"4891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"4891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"recipient","nameLocation":"4915:9:4","nodeType":"VariableDeclaration","scope":997,"src":"4907:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"4907:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"amount","nameLocation":"4934:6:4","nodeType":"VariableDeclaration","scope":997,"src":"4926:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4890:51:4"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"4975:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":969,"name":"bool","nodeType":"ElementaryTypeName","src":"4975:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4974:6:4"},"scope":1299,"src":"4869:317:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1024,"nodeType":"Block","src":"5675:121:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1008,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5694:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5694:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"5708:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1018,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5756:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":1011,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"5717:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1014,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1012,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5729:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5729:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1016,"indexExpression":{"id":1015,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"5743:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5752:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"5717:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5717:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5685:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5685:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"5685:83:4"},{"expression":{"hexValue":"74727565","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5785:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1006,"id":1023,"nodeType":"Return","src":"5778:11:4"}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"5192:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5590:17:4","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"spender","nameLocation":"5616:7:4","nodeType":"VariableDeclaration","scope":1025,"src":"5608:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"addedValue","nameLocation":"5633:10:4","nodeType":"VariableDeclaration","scope":1025,"src":"5625:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5607:37:4"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1025,"src":"5669:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"5669:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5668:6:4"},"scope":1299,"src":"5581:215:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1053,"nodeType":"Block","src":"6382:167:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1036,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6401:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6401:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6415:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1046,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6463:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6480:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"expression":{"baseExpression":{"baseExpression":{"id":1039,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6424:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1042,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"6436:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6424:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1044,"indexExpression":{"id":1043,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6450:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6424:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6459:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"6424:38:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6424:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6392:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:129:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"6392:129:4"},{"expression":{"hexValue":"74727565","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6538:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1034,"id":1052,"nodeType":"Return","src":"6531:11:4"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"5802:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6292:17:4","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"spender","nameLocation":"6318:7:4","nodeType":"VariableDeclaration","scope":1054,"src":"6310:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"6310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"subtractedValue","nameLocation":"6335:15:4","nodeType":"VariableDeclaration","scope":1054,"src":"6327:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6309:42:4"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"6376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1032,"name":"bool","nodeType":"ElementaryTypeName","src":"6376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6375:6:4"},"scope":1299,"src":"6283:266:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1119,"nodeType":"Block","src":"7110:443:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7128:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7146:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7138:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"7138:7:4","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7128:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7150:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7120:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7120:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"7120:70:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7208:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7221:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"7221:7:4","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7221:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7233:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7200:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7200:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"7200:71:4"},{"expression":{"arguments":[{"id":1085,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7303:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7311:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7322:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1084,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"7282:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7282:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"7282:47:4"},{"expression":{"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1090,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7340:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1092,"indexExpression":{"id":1091,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7350:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7340:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7382:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7390:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"expression":{"baseExpression":{"id":1093,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7360:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1095,"indexExpression":{"id":1094,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7370:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7360:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7378:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"7360:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7340:91:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1101,"nodeType":"ExpressionStatement","src":"7340:91:4"},{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1102,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7441:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1104,"indexExpression":{"id":1103,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7451:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7441:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1109,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7489:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1105,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7464:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1107,"indexExpression":{"id":1106,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7474:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7464:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7485:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"7464:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7464:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7441:55:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ExpressionStatement","src":"7441:55:4"},{"eventCall":{"arguments":[{"id":1114,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"7520:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"7528:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7539:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"7511:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7511:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"EmitStatement","src":"7506:40:4"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"6555:463:4","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7032:9:4","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"sender","nameLocation":"7050:6:4","nodeType":"VariableDeclaration","scope":1120,"src":"7042:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"recipient","nameLocation":"7066:9:4","nodeType":"VariableDeclaration","scope":1120,"src":"7058:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"7058:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"amount","nameLocation":"7085:6:4","nodeType":"VariableDeclaration","scope":1120,"src":"7077:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"7077:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7041:51:4"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"7110:0:4"},"scope":1299,"src":"7023:530:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1174,"nodeType":"Block","src":"7889:305:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"7907:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7926:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7918:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:4","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7907:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7899:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7899:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"7899:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8004:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7996:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"7996:7:4","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7996:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8008:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8017:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1138,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"7975:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7975:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"7975:49:4"},{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1147,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8035:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1150,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8067:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1148,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8050:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8063:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"8050:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8035:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"8035:39:4"},{"expression":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1154,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8084:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1156,"indexExpression":{"id":1155,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8094:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8084:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1161,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8128:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1157,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8105:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1159,"indexExpression":{"id":1158,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8115:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8105:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8124:3:4","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"8105:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8105:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8084:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ExpressionStatement","src":"8084:51:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8167:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8159:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"8159:7:4","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8159:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8171:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"8180:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1165,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8150:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1173,"nodeType":"EmitStatement","src":"8145:42:4"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"7559:260:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."},"id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7833:5:4","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"account","nameLocation":"7847:7:4","nodeType":"VariableDeclaration","scope":1175,"src":"7839:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"7839:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"amount","nameLocation":"7864:6:4","nodeType":"VariableDeclaration","scope":1175,"src":"7856:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"7856:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7838:33:4"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"7889:0:4"},"scope":1299,"src":"7824:370:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"8579:345:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8597:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8616:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8608:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"8608:7:4","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8608:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8597:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8620:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8589:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8589:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"8589:67:4"},{"expression":{"arguments":[{"id":1194,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8688:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:4","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8709:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1193,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"8667:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8667:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"8667:49:4"},{"expression":{"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1202,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8727:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1204,"indexExpression":{"id":1203,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8737:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8727:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8771:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8779:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"expression":{"baseExpression":{"id":1205,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8748:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1207,"indexExpression":{"id":1206,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8758:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8748:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8767:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"8748:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8748:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:89:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1213,"nodeType":"ExpressionStatement","src":"8727:89:4"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1214,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8826:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1217,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8858:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1215,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8841:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8854:3:4","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":645,"src":"8841:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8841:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8826:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"8826:39:4"},{"eventCall":{"arguments":[{"id":1222,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8889:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8906:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8898:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"8898:7:4","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8898:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"8910:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8880:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8880:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1229,"nodeType":"EmitStatement","src":"8875:42:4"}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"8200:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8523:5:4","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"account","nameLocation":"8537:7:4","nodeType":"VariableDeclaration","scope":1231,"src":"8529:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"8529:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"amount","nameLocation":"8554:6:4","nodeType":"VariableDeclaration","scope":1231,"src":"8546:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8528:33:4"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"8579:0:4"},"scope":1299,"src":"8514:410:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"9430:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9448:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9465:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9457:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"9457:7:4","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9457:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9448:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9469:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9440:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9440:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"9440:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"9526:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9545:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9537:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:4","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9537:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9526:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9549:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9518:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9518:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"9518:68:4"},{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1261,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9597:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1264,"indexExpression":{"id":1262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9609:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9597:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1265,"indexExpression":{"id":1263,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"9616:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9597:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"9627:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9597:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ExpressionStatement","src":"9597:36:4"},{"eventCall":{"arguments":[{"id":1270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9657:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1271,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"9664:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"9673:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1269,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"9648:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9648:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"EmitStatement","src":"9643:37:4"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"8930:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9356:8:4","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"owner","nameLocation":"9373:5:4","nodeType":"VariableDeclaration","scope":1276,"src":"9365:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"9365:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"spender","nameLocation":"9388:7:4","nodeType":"VariableDeclaration","scope":1276,"src":"9380:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"9380:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"amount","nameLocation":"9405:6:4","nodeType":"VariableDeclaration","scope":1276,"src":"9397:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"9397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9364:48:4"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"9430:0:4"},"scope":1299,"src":"9347:340:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"10068:38:4","statements":[{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1282,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"10078:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1283,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"10090:9:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10078:21:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1285,"nodeType":"ExpressionStatement","src":"10078:21:4"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"9693:312:4","text":" @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nameLocation":"10019:14:4","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"decimals_","nameLocation":"10040:9:4","nodeType":"VariableDeclaration","scope":1287,"src":"10034:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1278,"name":"uint8","nodeType":"ElementaryTypeName","src":"10034:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10033:17:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"10068:0:4"},"scope":1299,"src":"10010:96:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"10782:3:4","statements":[]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"10112:576:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10702:20:4","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"from","nameLocation":"10731:4:4","nodeType":"VariableDeclaration","scope":1298,"src":"10723:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"10723:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"10745:2:4","nodeType":"VariableDeclaration","scope":1298,"src":"10737:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"10737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"amount","nameLocation":"10757:6:4","nodeType":"VariableDeclaration","scope":1298,"src":"10749:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10749:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10722:42:4"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"10782:0:4"},"scope":1299,"src":"10693:92:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1300,"src":"1313:9474:4","usedErrors":[],"usedEvents":[1426,1435]}],"src":"33:10755:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol","exportedSymbols":{"Context":[1974],"ERC20":[1299],"ERC20Burnable":[1358],"IERC20":[1436],"SafeMath":[796]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1301,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":1975,"src":"58:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"./ERC20.sol","id":1303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":1300,"src":"92:21:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1305,"name":"Context","nameLocations":["359:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"359:7:5"},"id":1306,"nodeType":"InheritanceSpecifier","src":"359:7:5"},{"baseName":{"id":1307,"name":"ERC20","nameLocations":["368:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":1299,"src":"368:5:5"},"id":1308,"nodeType":"InheritanceSpecifier","src":"368:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"115:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1358,"linearizedBaseContracts":[1358,1299,1436,1974],"name":"ERC20Burnable","nameLocation":"342:13:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1311,"libraryName":{"id":1309,"name":"SafeMath","nameLocations":["386:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"386:8:5"},"nodeType":"UsingForDirective","src":"380:27:5","typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":1323,"nodeType":"Block","src":"561:44:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1318,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"577:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"577:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1320,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"591:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"571:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1322,"nodeType":"ExpressionStatement","src":"571:27:5"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"413:98:5","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"525:4:5","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"amount","nameLocation":"538:6:5","nodeType":"VariableDeclaration","scope":1324,"src":"530:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:16:5"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[],"src":"561:0:5"},"scope":1358,"src":"516:89:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1356,"nodeType":"Block","src":"977:224:5","statements":[{"assignments":[1333],"declarations":[{"constant":false,"id":1333,"mutability":"mutable","name":"decreasedAllowance","nameLocation":"995:18:5","nodeType":"VariableDeclaration","scope":1356,"src":"987:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[{"id":1340,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1053:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1061:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""},"value":"ERC20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""}],"expression":{"arguments":[{"id":1335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1026:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1336,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1035:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1334,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1016:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1016:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1049:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"1016:36:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1016:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"987:113:5"},{"expression":{"arguments":[{"id":1345,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1120:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1346,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1129:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1129:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"decreasedAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"1143:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1344,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"1111:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1111:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"1111:51:5"},{"expression":{"arguments":[{"id":1352,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1178:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1353,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1187:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1351,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1172:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1172:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"ExpressionStatement","src":"1172:22:5"}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"611:295:5","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"920:8:5","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"account","nameLocation":"937:7:5","nodeType":"VariableDeclaration","scope":1357,"src":"929:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"amount","nameLocation":"954:6:5","nodeType":"VariableDeclaration","scope":1357,"src":"946:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:33:5"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"977:0:5"},"scope":1358,"src":"911:290:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1359,"src":"324:879:5","usedErrors":[],"usedEvents":[1426,1435]}],"src":"33:1171:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1436]},"id":1437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"58:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1436,"linearizedBaseContracts":[1436],"name":"IERC20","nameLocation":"139:6:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"152:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1367,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"232:11:6","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"243:2:6"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"269:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:9:6"},"scope":1436,"src":"223:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"284:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"370:9:6","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"account","nameLocation":"388:7:6","nodeType":"VariableDeclaration","scope":1375,"src":"380:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:17:6"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"420:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:9:6"},"scope":1436,"src":"361:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"435:209:6","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1385,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"658:8:6","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"recipient","nameLocation":"675:9:6","nodeType":"VariableDeclaration","scope":1385,"src":"667:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"amount","nameLocation":"694:6:6","nodeType":"VariableDeclaration","scope":1385,"src":"686:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:35:6"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"720:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1382,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"719:6:6"},"scope":1436,"src":"649:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"732:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1010:9:6","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"owner","nameLocation":"1028:5:6","nodeType":"VariableDeclaration","scope":1395,"src":"1020:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"spender","nameLocation":"1043:7:6","nodeType":"VariableDeclaration","scope":1395,"src":"1035:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:32:6"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"1075:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:9:6"},"scope":1436,"src":"1001:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"1090:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1405,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1746:7:6","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"spender","nameLocation":"1762:7:6","nodeType":"VariableDeclaration","scope":1405,"src":"1754:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"amount","nameLocation":"1779:6:6","nodeType":"VariableDeclaration","scope":1405,"src":"1771:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"1805:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:6"},"scope":1436,"src":"1737:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"1817:296:6","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2127:12:6","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"sender","nameLocation":"2148:6:6","nodeType":"VariableDeclaration","scope":1417,"src":"2140:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"recipient","nameLocation":"2164:9:6","nodeType":"VariableDeclaration","scope":1417,"src":"2156:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"amount","nameLocation":"2183:6:6","nodeType":"VariableDeclaration","scope":1417,"src":"2175:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:51:6"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"2209:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1414,"name":"bool","nodeType":"ElementaryTypeName","src":"2209:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2208:6:6"},"scope":1436,"src":"2118:97:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"2221:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1426,"name":"Transfer","nameLocation":"2390:8:6","nodeType":"EventDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2415:4:6","nodeType":"VariableDeclaration","scope":1426,"src":"2399:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2437:2:6","nodeType":"VariableDeclaration","scope":1426,"src":"2421:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2449:5:6","nodeType":"VariableDeclaration","scope":1426,"src":"2441:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:57:6"},"src":"2384:72:6"},{"anonymous":false,"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"2462:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1435,"name":"Approval","nameLocation":"2621:8:6","nodeType":"EventDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2646:5:6","nodeType":"VariableDeclaration","scope":1435,"src":"2630:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2669:7:6","nodeType":"VariableDeclaration","scope":1435,"src":"2653:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2686:5:6","nodeType":"VariableDeclaration","scope":1435,"src":"2678:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2629:63:6"},"src":"2615:78:6"}],"scope":1437,"src":"129:2566:6","usedErrors":[],"usedEvents":[1426,1435]}],"src":"33:2663:6"},"id":6},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","exportedSymbols":{"Address":[1951],"IERC20":[1436],"SafeERC20":[1655],"SafeMath":[796]},"id":1656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1438,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1656,"sourceUnit":1437,"src":"58:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"../../math/SafeMath.sol","id":1440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1656,"sourceUnit":797,"src":"81:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1656,"sourceUnit":1952,"src":"115:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"150:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1655,"linearizedBaseContracts":[1655],"name":"SafeERC20","nameLocation":"616:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1445,"libraryName":{"id":1443,"name":"SafeMath","nameLocations":["638:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"638:8:7"},"nodeType":"UsingForDirective","src":"632:27:7","typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":1448,"libraryName":{"id":1446,"name":"Address","nameLocations":["670:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"670:7:7"},"nodeType":"UsingForDirective","src":"664:26:7","typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1470,"nodeType":"Block","src":"768:103:7","statements":[{"expression":{"arguments":[{"id":1459,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"798:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1462,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"828:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"834:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"828:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:8:7","memberName":"selector","nodeType":"MemberAccess","src":"828:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"853:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"857:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1460,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"805:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"809:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"805:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"805:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1458,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"778:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1436_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"778:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"778:86:7"}]},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"705:12:7","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"token","nameLocation":"725:5:7","nodeType":"VariableDeclaration","scope":1471,"src":"718:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1450,"nodeType":"UserDefinedTypeName","pathNode":{"id":1449,"name":"IERC20","nameLocations":["718:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"718:6:7"},"referencedDeclaration":1436,"src":"718:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"to","nameLocation":"740:2:7","nodeType":"VariableDeclaration","scope":1471,"src":"732:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"value","nameLocation":"752:5:7","nodeType":"VariableDeclaration","scope":1471,"src":"744:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:41:7"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"768:0:7"},"scope":1655,"src":"696:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"967:113:7","statements":[{"expression":{"arguments":[{"id":1484,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"997:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1487,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1027:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1033:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"1027:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1046:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1027:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1490,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1056:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1062:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"1066:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1485,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1004:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1008:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1004:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1483,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"977:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1436_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"977:96:7"}]},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"886:16:7","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"token","nameLocation":"910:5:7","nodeType":"VariableDeclaration","scope":1497,"src":"903:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1473,"nodeType":"UserDefinedTypeName","pathNode":{"id":1472,"name":"IERC20","nameLocations":["903:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"903:6:7"},"referencedDeclaration":1436,"src":"903:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"from","nameLocation":"925:4:7","nodeType":"VariableDeclaration","scope":1497,"src":"917:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"to","nameLocation":"939:2:7","nodeType":"VariableDeclaration","scope":1497,"src":"931:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"value","nameLocation":"951:5:7","nodeType":"VariableDeclaration","scope":1497,"src":"943:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:55:7"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"967:0:7"},"scope":1655,"src":"877:203:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"1416:537:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1705:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1705:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1704:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1517,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1745:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1737:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"1737:7:7","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1737:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1752:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1513,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1721:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"1721:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1764:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1721:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1720:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1704:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1696:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"ExpressionStatement","src":"1696:150:7"},{"expression":{"arguments":[{"id":1529,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1876:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1532,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1906:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1405,"src":"1906:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1920:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1906:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1535,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1930:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1939:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1530,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1883:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1887:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1883:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1528,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"1856:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1436_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"1856:90:7"}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"1086:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1349:11:7","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"token","nameLocation":"1368:5:7","nodeType":"VariableDeclaration","scope":1541,"src":"1361:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1500,"nodeType":"UserDefinedTypeName","pathNode":{"id":1499,"name":"IERC20","nameLocations":["1361:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"1361:6:7"},"referencedDeclaration":1436,"src":"1361:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"spender","nameLocation":"1383:7:7","nodeType":"VariableDeclaration","scope":1541,"src":"1375:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"1400:5:7","nodeType":"VariableDeclaration","scope":1541,"src":"1392:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1360:46:7"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"1416:0:7"},"scope":1655,"src":"1340:613:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"2045:197:7","statements":[{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"newAllowance","nameLocation":"2063:12:7","nodeType":"VariableDeclaration","scope":1577,"src":"2055:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1564,"initialValue":{"arguments":[{"id":1562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2122:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":1557,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2102:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:7","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2109:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1553,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2078:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2084:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"2078:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2078:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2118:3:7","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"2078:43:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2078:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2055:73:7"},{"expression":{"arguments":[{"id":1566,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2158:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2188:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2194:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1405,"src":"2188:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2202:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2188:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1572,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2212:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2221:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1567,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2165:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2169:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2165:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1565,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2138:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1436_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"2138:97:7"}]},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"1968:21:7","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"token","nameLocation":"1997:5:7","nodeType":"VariableDeclaration","scope":1578,"src":"1990:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1543,"nodeType":"UserDefinedTypeName","pathNode":{"id":1542,"name":"IERC20","nameLocations":["1990:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"1990:6:7"},"referencedDeclaration":1436,"src":"1990:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"spender","nameLocation":"2012:7:7","nodeType":"VariableDeclaration","scope":1578,"src":"2004:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"2004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"2029:5:7","nodeType":"VariableDeclaration","scope":1578,"src":"2021:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1989:46:7"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"2045:0:7"},"scope":1655,"src":"1959:283:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"2334:242:7","statements":[{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"newAllowance","nameLocation":"2352:12:7","nodeType":"VariableDeclaration","scope":1615,"src":"2344:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1602,"initialValue":{"arguments":[{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2411:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2418:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"expression":{"arguments":[{"arguments":[{"id":1594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2391:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1655","typeString":"library SafeERC20"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2383:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"2383:7:7","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2398:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1590,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2367:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"2367:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2407:3:7","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":747,"src":"2367:43:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2344:118:7"},{"expression":{"arguments":[{"id":1604,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2492:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1607,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2522:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1405,"src":"2522:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2536:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2522:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1610,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2546:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2555:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1605,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2499:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2503:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2499:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2499:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1603,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"2472:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1436_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"2472:97:7"}]},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2257:21:7","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"token","nameLocation":"2286:5:7","nodeType":"VariableDeclaration","scope":1616,"src":"2279:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"IERC20","nameLocations":["2279:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"2279:6:7"},"referencedDeclaration":1436,"src":"2279:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"spender","nameLocation":"2301:7:7","nodeType":"VariableDeclaration","scope":1616,"src":"2293:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"2293:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"value","nameLocation":"2318:5:7","nodeType":"VariableDeclaration","scope":1616,"src":"2310:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2278:46:7"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[],"src":"2334:0:7"},"scope":1655,"src":"2248:328:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1653,"nodeType":"Block","src":"3029:681:7","statements":[{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"returndata","nameLocation":"3391:10:7","nodeType":"VariableDeclaration","scope":1653,"src":"3378:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1625,"name":"bytes","nodeType":"ElementaryTypeName","src":"3378:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1635,"initialValue":{"arguments":[{"id":1632,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3432:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3438:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1629,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"3412:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}],"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"3404:7:7","typeDescriptions":{}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3419:12:7","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1746,"src":"3404:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3378:95:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1636,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3487:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3498:6:7","memberName":"length","nodeType":"MemberAccess","src":"3487:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3507:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3487:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1652,"nodeType":"IfStatement","src":"3483:221:7","trueBody":{"id":1651,"nodeType":"Block","src":"3510:194:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1643,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3627:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3640:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"3640:4:7","typeDescriptions":{}}}],"id":1646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3639:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3616:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3620:6:7","memberName":"decode","nodeType":"MemberAccess","src":"3616:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3616:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3648:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3608:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3608:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"3608:85:7"}]}}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"2582:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1654,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"2968:19:7","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"token","nameLocation":"2995:5:7","nodeType":"VariableDeclaration","scope":1654,"src":"2988:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":1619,"nodeType":"UserDefinedTypeName","pathNode":{"id":1618,"name":"IERC20","nameLocations":["2988:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"2988:6:7"},"referencedDeclaration":1436,"src":"2988:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"data","nameLocation":"3015:4:7","nodeType":"VariableDeclaration","scope":1654,"src":"3002:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"3002:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2987:33:7"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"3029:0:7"},"scope":1655,"src":"2959:751:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1656,"src":"608:3104:7","usedErrors":[],"usedEvents":[]}],"src":"33:3680:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1951]},"id":1952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1657,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"58:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1951,"linearizedBaseContracts":[1951],"name":"Address","nameLocation":"134:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1674,"nodeType":"Block","src":"784:347:8","statements":[{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"size","nameLocation":"989:4:8","nodeType":"VariableDeclaration","scope":1674,"src":"981:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1668,"nodeType":"VariableDeclarationStatement","src":"981:12:8"},{"AST":{"nodeType":"YulBlock","src":"1068:32:8","statements":[{"nodeType":"YulAssignment","src":"1070:28:8","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1090:7:8"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1078:11:8"},"nodeType":"YulFunctionCall","src":"1078:20:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1070:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1661,"isOffset":false,"isSlot":false,"src":"1090:7:8","valueSize":1},{"declaration":1667,"isOffset":false,"isSlot":false,"src":"1070:4:8","valueSize":1}],"id":1669,"nodeType":"InlineAssembly","src":"1059:41:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"1116:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1123:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1116:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1665,"id":1673,"nodeType":"Return","src":"1109:15:8"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"148:565:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"727:10:8","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"account","nameLocation":"746:7:8","nodeType":"VariableDeclaration","scope":1675,"src":"738:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:17:8"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"778:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1663,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:8"},"scope":1951,"src":"718:413:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"2119:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1686,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2145:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1951","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1951","typeString":"library Address"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2137:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:8","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2137:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:7:8","memberName":"balance","nodeType":"MemberAccess","src":"2137:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2162:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2137:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2170:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2129:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2129:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"2129:73:8"},{"assignments":[1695,null],"declarations":[{"constant":false,"id":1695,"mutability":"mutable","name":"success","nameLocation":"2296:7:8","nodeType":"VariableDeclaration","scope":1708,"src":"2291:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1694,"name":"bool","nodeType":"ElementaryTypeName","src":"2291:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1702,"initialValue":{"arguments":[{"hexValue":"","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1696,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2309:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2319:4:8","memberName":"call","nodeType":"MemberAccess","src":"2309:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2332:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2309:31:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2290:54:8"},{"expression":{"arguments":[{"id":1704,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2362:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2371:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2354:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2354:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"2354:78:8"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"1137:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2057:9:8","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"recipient","nameLocation":"2083:9:8","nodeType":"VariableDeclaration","scope":1709,"src":"2067:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"2067:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"amount","nameLocation":"2102:6:8","nodeType":"VariableDeclaration","scope":1709,"src":"2094:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2066:43:8"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[],"src":"2119:0:8"},"scope":1951,"src":"2048:391:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1725,"nodeType":"Block","src":"3269:82:8","statements":[{"expression":{"arguments":[{"id":1720,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3297:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"3305:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3311:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1719,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1726,1746],"referencedDeclaration":1746,"src":"3284:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1718,"id":1724,"nodeType":"Return","src":"3277:67:8"}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"2445:730:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3189:12:8","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"target","nameLocation":"3210:6:8","nodeType":"VariableDeclaration","scope":1726,"src":"3202:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"3202:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"data","nameLocation":"3231:4:8","nodeType":"VariableDeclaration","scope":1726,"src":"3218:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1713,"name":"bytes","nodeType":"ElementaryTypeName","src":"3218:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3201:35:8"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"3255:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1716,"name":"bytes","nodeType":"ElementaryTypeName","src":"3255:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3254:14:8"},"scope":1951,"src":"3180:171:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"3690:76:8","statements":[{"expression":{"arguments":[{"id":1739,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"3729:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1740,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"3737:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3743:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1742,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3746:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1738,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1766,1816],"referencedDeclaration":1816,"src":"3707:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3707:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1737,"id":1744,"nodeType":"Return","src":"3700:59:8"}]},"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"3357:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3582:12:8","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"target","nameLocation":"3603:6:8","nodeType":"VariableDeclaration","scope":1746,"src":"3595:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"3595:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"data","nameLocation":"3624:4:8","nodeType":"VariableDeclaration","scope":1746,"src":"3611:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1730,"name":"bytes","nodeType":"ElementaryTypeName","src":"3611:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"errorMessage","nameLocation":"3644:12:8","nodeType":"VariableDeclaration","scope":1746,"src":"3630:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1732,"name":"string","nodeType":"ElementaryTypeName","src":"3630:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3594:63:8"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"3676:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1735,"name":"bytes","nodeType":"ElementaryTypeName","src":"3676:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3675:14:8"},"scope":1951,"src":"3573:193:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"4241:111:8","statements":[{"expression":{"arguments":[{"id":1759,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4280:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1760,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4288:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4294:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1758,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1766,1816],"referencedDeclaration":1816,"src":"4258:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1757,"id":1764,"nodeType":"Return","src":"4251:94:8"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"3772:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4137:21:8","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"target","nameLocation":"4167:6:8","nodeType":"VariableDeclaration","scope":1766,"src":"4159:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"data","nameLocation":"4188:4:8","nodeType":"VariableDeclaration","scope":1766,"src":"4175:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1750,"name":"bytes","nodeType":"ElementaryTypeName","src":"4175:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"value","nameLocation":"4202:5:8","nodeType":"VariableDeclaration","scope":1766,"src":"4194:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4194:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4158:50:8"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"4227:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1755,"name":"bytes","nodeType":"ElementaryTypeName","src":"4227:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4226:14:8"},"scope":1951,"src":"4128:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"4741:382:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1783,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4767:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1951","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1951","typeString":"library Address"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4759:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"4759:7:8","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4759:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4773:7:8","memberName":"balance","nodeType":"MemberAccess","src":"4759:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4784:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4759:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4791:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4751:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"4751:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1793,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"4861:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1792,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"4850:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4850:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4870:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4842:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4842:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"ExpressionStatement","src":"4842:60:8"},{"assignments":[1799,1801],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"success","nameLocation":"4978:7:8","nodeType":"VariableDeclaration","scope":1815,"src":"4973:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1798,"name":"bool","nodeType":"ElementaryTypeName","src":"4973:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"returndata","nameLocation":"5000:10:8","nodeType":"VariableDeclaration","scope":1815,"src":"4987:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"4987:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1808,"initialValue":{"arguments":[{"id":1806,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"5042:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1802,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5014:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5021:4:8","memberName":"call","nodeType":"MemberAccess","src":"5014:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"5034:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5014:27:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5014:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4972:75:8"},{"expression":{"arguments":[{"id":1810,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"5082:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1811,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"5091:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1812,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"5103:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1809,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"5064:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5064:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1779,"id":1814,"nodeType":"Return","src":"5057:59:8"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"4358:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4609:21:8","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"target","nameLocation":"4639:6:8","nodeType":"VariableDeclaration","scope":1816,"src":"4631:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"data","nameLocation":"4660:4:8","nodeType":"VariableDeclaration","scope":1816,"src":"4647:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"4647:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"4674:5:8","nodeType":"VariableDeclaration","scope":1816,"src":"4666:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"errorMessage","nameLocation":"4695:12:8","nodeType":"VariableDeclaration","scope":1816,"src":"4681:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1774,"name":"string","nodeType":"ElementaryTypeName","src":"4681:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4630:78:8"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"4727:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"4727:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4726:14:8"},"scope":1951,"src":"4600:523:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"5400:97:8","statements":[{"expression":{"arguments":[{"id":1827,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"5436:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5444:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5450:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1826,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1833,1868],"referencedDeclaration":1868,"src":"5417:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5417:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1825,"id":1831,"nodeType":"Return","src":"5410:80:8"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"5129:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5309:18:8","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"target","nameLocation":"5336:6:8","nodeType":"VariableDeclaration","scope":1833,"src":"5328:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"5328:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"data","nameLocation":"5357:4:8","nodeType":"VariableDeclaration","scope":1833,"src":"5344:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1820,"name":"bytes","nodeType":"ElementaryTypeName","src":"5344:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5327:35:8"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"5386:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5385:14:8"},"scope":1951,"src":"5300:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1867,"nodeType":"Block","src":"5809:288:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1847,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"5838:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1846,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5827:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5827:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5847:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5819:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5819:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"ExpressionStatement","src":"5819:67:8"},{"assignments":[1853,1855],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"success","nameLocation":"5962:7:8","nodeType":"VariableDeclaration","scope":1867,"src":"5957:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1852,"name":"bool","nodeType":"ElementaryTypeName","src":"5957:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"returndata","nameLocation":"5984:10:8","nodeType":"VariableDeclaration","scope":1867,"src":"5971:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"5971:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1860,"initialValue":{"arguments":[{"id":1858,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6016:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1856,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"5998:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6005:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"5998:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5956:65:8"},{"expression":{"arguments":[{"id":1862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"6056:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1863,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6065:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1864,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"6077:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1861,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"6038:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1844,"id":1866,"nodeType":"Return","src":"6031:59:8"}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"5503:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5690:18:8","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"target","nameLocation":"5717:6:8","nodeType":"VariableDeclaration","scope":1868,"src":"5709:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"5709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"data","nameLocation":"5738:4:8","nodeType":"VariableDeclaration","scope":1868,"src":"5725:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"5725:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"errorMessage","nameLocation":"5758:12:8","nodeType":"VariableDeclaration","scope":1868,"src":"5744:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1839,"name":"string","nodeType":"ElementaryTypeName","src":"5744:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5708:63:8"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1868,"src":"5795:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1842,"name":"bytes","nodeType":"ElementaryTypeName","src":"5795:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5794:14:8"},"scope":1951,"src":"5681:416:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"6373:101:8","statements":[{"expression":{"arguments":[{"id":1879,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"6411:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1880,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"6419:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6425:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1878,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1885,1920],"referencedDeclaration":1920,"src":"6390:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1877,"id":1883,"nodeType":"Return","src":"6383:84:8"}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"6103:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6285:20:8","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"target","nameLocation":"6314:6:8","nodeType":"VariableDeclaration","scope":1885,"src":"6306:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"6306:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"data","nameLocation":"6335:4:8","nodeType":"VariableDeclaration","scope":1885,"src":"6322:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1872,"name":"bytes","nodeType":"ElementaryTypeName","src":"6322:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6305:35:8"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"6359:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"6359:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6358:14:8"},"scope":1951,"src":"6276:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"6785:292:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1899,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6814:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1898,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6803:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6795:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6795:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"ExpressionStatement","src":"6795:69:8"},{"assignments":[1905,1907],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"success","nameLocation":"6940:7:8","nodeType":"VariableDeclaration","scope":1919,"src":"6935:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1904,"name":"bool","nodeType":"ElementaryTypeName","src":"6935:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"returndata","nameLocation":"6962:10:8","nodeType":"VariableDeclaration","scope":1919,"src":"6949:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"6949:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1912,"initialValue":{"arguments":[{"id":1910,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"6996:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1908,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"6976:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6983:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"6976:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6934:67:8"},{"expression":{"arguments":[{"id":1914,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"7036:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1915,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"7045:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1916,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"7057:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1913,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"7018:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7018:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1896,"id":1918,"nodeType":"Return","src":"7011:59:8"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"6480:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6669:20:8","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"target","nameLocation":"6698:6:8","nodeType":"VariableDeclaration","scope":1920,"src":"6690:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"6690:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"data","nameLocation":"6719:4:8","nodeType":"VariableDeclaration","scope":1920,"src":"6706:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1889,"name":"bytes","nodeType":"ElementaryTypeName","src":"6706:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"errorMessage","nameLocation":"6739:12:8","nodeType":"VariableDeclaration","scope":1920,"src":"6725:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1891,"name":"string","nodeType":"ElementaryTypeName","src":"6725:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6689:63:8"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"6771:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"6771:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6770:14:8"},"scope":1951,"src":"6660:417:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1949,"nodeType":"Block","src":"7212:596:8","statements":[{"condition":{"id":1931,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"7226:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1947,"nodeType":"Block","src":"7283:519:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1935,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7367:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7378:6:8","memberName":"length","nodeType":"MemberAccess","src":"7367:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7367:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1945,"nodeType":"Block","src":"7739:53:8","statements":[{"expression":{"arguments":[{"id":1942,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"7764:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1941,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7757:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7757:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"7757:20:8"}]},"id":1946,"nodeType":"IfStatement","src":"7363:429:8","trueBody":{"id":1940,"nodeType":"Block","src":"7390:343:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7574:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7596:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7625:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7619:5:8"},"nodeType":"YulFunctionCall","src":"7619:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7600:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7668:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7672:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7664:3:8"},"nodeType":"YulFunctionCall","src":"7664:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7685:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7657:6:8"},"nodeType":"YulFunctionCall","src":"7657:44:8"},"nodeType":"YulExpressionStatement","src":"7657:44:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1924,"isOffset":false,"isSlot":false,"src":"7625:10:8","valueSize":1},{"declaration":1924,"isOffset":false,"isSlot":false,"src":"7672:10:8","valueSize":1}],"id":1939,"nodeType":"InlineAssembly","src":"7565:154:8"}]}}]},"id":1948,"nodeType":"IfStatement","src":"7222:580:8","trueBody":{"id":1934,"nodeType":"Block","src":"7235:42:8","statements":[{"expression":{"id":1932,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7256:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1930,"id":1933,"nodeType":"Return","src":"7249:17:8"}]}}]},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nameLocation":"7092:17:8","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"success","nameLocation":"7115:7:8","nodeType":"VariableDeclaration","scope":1950,"src":"7110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1921,"name":"bool","nodeType":"ElementaryTypeName","src":"7110:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"returndata","nameLocation":"7137:10:8","nodeType":"VariableDeclaration","scope":1950,"src":"7124:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"7124:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"errorMessage","nameLocation":"7163:12:8","nodeType":"VariableDeclaration","scope":1950,"src":"7149:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1925,"name":"string","nodeType":"ElementaryTypeName","src":"7149:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7109:67:8"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1950,"src":"7198:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1928,"name":"bytes","nodeType":"ElementaryTypeName","src":"7198:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7197:14:8"},"scope":1951,"src":"7083:725:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1952,"src":"126:7684:8","usedErrors":[],"usedEvents":[]}],"src":"33:7778:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1974]},"id":1975,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1953,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1974,"linearizedBaseContracts":[1974],"name":"Context","nameLocation":"576:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1961,"nodeType":"Block","src":"652:34:9","statements":[{"expression":{"expression":{"id":1958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"669:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"673:6:9","memberName":"sender","nodeType":"MemberAccess","src":"669:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1957,"id":1960,"nodeType":"Return","src":"662:17:9"}]},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"599:10:9","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"609:2:9"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"643:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"642:9:9"},"scope":1974,"src":"590:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"757:165:9","statements":[{"expression":{"id":1967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"767:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1974","typeString":"contract Context"}},"id":1968,"nodeType":"ExpressionStatement","src":"767:4:9"},{"expression":{"expression":{"id":1969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"907:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"911:4:9","memberName":"data","nodeType":"MemberAccess","src":"907:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1966,"id":1971,"nodeType":"Return","src":"900:15:9"}]},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"701:8:9","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"709:2:9"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"743:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1964,"name":"bytes","nodeType":"ElementaryTypeName","src":"743:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"742:14:9"},"scope":1974,"src":"692:230:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1975,"src":"558:366:9","usedErrors":[],"usedEvents":[]}],"src":"33:892:9"},"id":9},"@openzeppelin/contracts/utils/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2489]},"id":2490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1976,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"58:686:10","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."},"fullyImplemented":true,"id":2489,"linearizedBaseContracts":[2489],"name":"EnumerableSet","nameLocation":"753:13:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1985,"members":[{"constant":false,"id":1980,"mutability":"mutable","name":"_values","nameLocation":"1277:7:10","nodeType":"VariableDeclaration","scope":1985,"src":"1267:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1267:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1979,"nodeType":"ArrayTypeName","src":"1267:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"_indexes","nameLocation":"1447:8:10","nodeType":"VariableDeclaration","scope":1985,"src":"1418:37:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1983,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1427:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1418:28:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1438:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1220:3:10","nodeType":"StructDefinition","scope":2489,"src":"1213:249:10","visibility":"public"},{"body":{"id":2026,"nodeType":"Block","src":"1701:335:10","statements":[{"condition":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1715:22:10","subExpression":{"arguments":[{"id":1997,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1726:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1731:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1996,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1716:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2024,"nodeType":"Block","src":"1993:37:10","statements":[{"expression":{"hexValue":"66616c7365","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2014:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1995,"id":2023,"nodeType":"Return","src":"2007:12:10"}]},"id":2025,"nodeType":"IfStatement","src":"1711:319:10","trueBody":{"id":2021,"nodeType":"Block","src":"1739:248:10","statements":[{"expression":{"arguments":[{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1770:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2001,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1753:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1757:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"1753:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1765:4:10","memberName":"push","nodeType":"MemberAccess","src":"1753:16:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"1753:23:10"},{"expression":{"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2009,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1911:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:8:10","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"1911:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2013,"indexExpression":{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1924:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1911:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2014,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1933:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1937:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"1933:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:6:10","memberName":"length","nodeType":"MemberAccess","src":"1933:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1911:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2018,"nodeType":"ExpressionStatement","src":"1911:40:10"},{"expression":{"hexValue":"74727565","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1995,"id":2020,"nodeType":"Return","src":"1965:11:10"}]}}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"1468:159:10","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"1641:4:10","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"set","nameLocation":"1658:3:10","nodeType":"VariableDeclaration","scope":2027,"src":"1646:15:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1988,"nodeType":"UserDefinedTypeName","pathNode":{"id":1987,"name":"Set","nameLocations":["1646:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"1646:3:10"},"referencedDeclaration":1985,"src":"1646:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"value","nameLocation":"1671:5:10","nodeType":"VariableDeclaration","scope":2027,"src":"1663:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1663:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1645:32:10"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"1695:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"1695:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1694:6:10"},"scope":2489,"src":"1632:404:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2107,"nodeType":"Block","src":"2276:1440:10","statements":[{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"valueIndex","nameLocation":"2394:10:10","nodeType":"VariableDeclaration","scope":2107,"src":"2386:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2044,"initialValue":{"baseExpression":{"expression":{"id":2040,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2407:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2411:8:10","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"2407:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2043,"indexExpression":{"id":2042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2420:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2407:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2386:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2441:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2455:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2441:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2105,"nodeType":"Block","src":"3673:37:10","statements":[{"expression":{"hexValue":"66616c7365","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3694:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2037,"id":2104,"nodeType":"Return","src":"3687:12:10"}]},"id":2106,"nodeType":"IfStatement","src":"2437:1273:10","trueBody":{"id":2102,"nodeType":"Block","src":"2458:1209:10","statements":[{"assignments":[2049],"declarations":[{"constant":false,"id":2049,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"2806:13:10","nodeType":"VariableDeclaration","scope":2102,"src":"2798:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2798:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2822:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2822:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2798:38:10"},{"assignments":[2055],"declarations":[{"constant":false,"id":2055,"mutability":"mutable","name":"lastIndex","nameLocation":"2858:9:10","nodeType":"VariableDeclaration","scope":2102,"src":"2850:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2850:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2061,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2056,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2870:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2874:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"2870:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2870:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2850:42:10"},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"lastvalue","nameLocation":"3140:9:10","nodeType":"VariableDeclaration","scope":2102,"src":"3132:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3132:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2068,"initialValue":{"baseExpression":{"expression":{"id":2064,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3152:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3156:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"3152:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2067,"indexExpression":{"id":2066,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3164:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3152:22:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3132:42:10"},{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2069,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3266:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3270:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"3266:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2073,"indexExpression":{"id":2071,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3278:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3266:26:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2074,"name":"lastvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3295:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3266:38:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2076,"nodeType":"ExpressionStatement","src":"3266:38:10"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2077,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3370:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3374:8:10","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"3370:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2081,"indexExpression":{"id":2079,"name":"lastvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"3383:9:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3370:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2082,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3396:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3412:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3396:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3370:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"3370:43:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2087,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3519:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3523:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"3519:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3531:3:10","memberName":"pop","nodeType":"MemberAccess","src":"3519:15:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2093,"nodeType":"ExpressionStatement","src":"3519:17:10"},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3604:26:10","subExpression":{"baseExpression":{"expression":{"id":2094,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3611:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3615:8:10","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"3611:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2097,"indexExpression":{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3624:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3611:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2099,"nodeType":"ExpressionStatement","src":"3604:26:10"},{"expression":{"hexValue":"74727565","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3652:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2037,"id":2101,"nodeType":"Return","src":"3645:11:10"}]}}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"2042:157:10","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2213:7:10","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"set","nameLocation":"2233:3:10","nodeType":"VariableDeclaration","scope":2108,"src":"2221:15:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2030,"nodeType":"UserDefinedTypeName","pathNode":{"id":2029,"name":"Set","nameLocations":["2221:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"2221:3:10"},"referencedDeclaration":1985,"src":"2221:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"value","nameLocation":"2246:5:10","nodeType":"VariableDeclaration","scope":2108,"src":"2238:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2238:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2220:32:10"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2108,"src":"2270:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2035,"name":"bool","nodeType":"ElementaryTypeName","src":"2270:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2269:6:10"},"scope":2489,"src":"2204:1512:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2126,"nodeType":"Block","src":"3876:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2119,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"3893:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3897:8:10","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1984,"src":"3893:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2122,"indexExpression":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"3906:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3893:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3916:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3893:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2118,"id":2125,"nodeType":"Return","src":"3886:31:10"}]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"3722:70:10","text":" @dev Returns true if the value is in the set. O(1)."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"3806:9:10","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"set","nameLocation":"3828:3:10","nodeType":"VariableDeclaration","scope":2127,"src":"3816:15:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2111,"nodeType":"UserDefinedTypeName","pathNode":{"id":2110,"name":"Set","nameLocations":["3816:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"3816:3:10"},"referencedDeclaration":1985,"src":"3816:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"value","nameLocation":"3841:5:10","nodeType":"VariableDeclaration","scope":2127,"src":"3833:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3833:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3815:32:10"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"3870:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"3870:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3869:6:10"},"scope":2489,"src":"3797:127:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2140,"nodeType":"Block","src":"4070:42:10","statements":[{"expression":{"expression":{"expression":{"id":2136,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"4087:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4091:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"4087:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4099:6:10","memberName":"length","nodeType":"MemberAccess","src":"4087:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2135,"id":2139,"nodeType":"Return","src":"4080:25:10"}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"3930:70:10","text":" @dev Returns the number of values on the set. O(1)."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4014:7:10","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"set","nameLocation":"4034:3:10","nodeType":"VariableDeclaration","scope":2141,"src":"4022:15:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2130,"nodeType":"UserDefinedTypeName","pathNode":{"id":2129,"name":"Set","nameLocations":["4022:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"4022:3:10"},"referencedDeclaration":1985,"src":"4022:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4021:17:10"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2141,"src":"4061:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:10"},"scope":2489,"src":"4005:107:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2166,"nodeType":"Block","src":"4520:125:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2153,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4538:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4542:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"4538:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:6:10","memberName":"length","nodeType":"MemberAccess","src":"4538:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2156,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4538:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4566:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","typeString":"literal_string \"EnumerableSet: index out of bounds\""},"value":"EnumerableSet: index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","typeString":"literal_string \"EnumerableSet: index out of bounds\""}],"id":2152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4530:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"ExpressionStatement","src":"4530:73:10"},{"expression":{"baseExpression":{"expression":{"id":2161,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"4620:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4624:7:10","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"4620:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2164,"indexExpression":{"id":2163,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"4632:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4620:18:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2151,"id":2165,"nodeType":"Return","src":"4613:25:10"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"4117:322:10","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4453:3:10","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"set","nameLocation":"4469:3:10","nodeType":"VariableDeclaration","scope":2167,"src":"4457:15:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"Set","nameLocations":["4457:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"4457:3:10"},"referencedDeclaration":1985,"src":"4457:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"index","nameLocation":"4482:5:10","nodeType":"VariableDeclaration","scope":2167,"src":"4474:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4474:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:32:10"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"4511:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4511:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4510:9:10"},"scope":2489,"src":"4444:201:10","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2171,"members":[{"constant":false,"id":2170,"mutability":"mutable","name":"_inner","nameLocation":"4702:6:10","nodeType":"VariableDeclaration","scope":2171,"src":"4698:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2169,"nodeType":"UserDefinedTypeName","pathNode":{"id":2168,"name":"Set","nameLocations":["4698:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"4698:3:10"},"referencedDeclaration":1985,"src":"4698:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"4677:10:10","nodeType":"StructDefinition","scope":2489,"src":"4670:45:10","visibility":"public"},{"body":{"id":2188,"nodeType":"Block","src":"4961:47:10","statements":[{"expression":{"arguments":[{"expression":{"id":2183,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4983:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4987:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"4983:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"4995:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2182,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4978:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4978:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2181,"id":2187,"nodeType":"Return","src":"4971:30:10"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"4721:159:10","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"4894:3:10","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"set","nameLocation":"4917:3:10","nodeType":"VariableDeclaration","scope":2189,"src":"4898:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"Bytes32Set","nameLocations":["4898:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"4898:10:10"},"referencedDeclaration":2171,"src":"4898:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"value","nameLocation":"4930:5:10","nodeType":"VariableDeclaration","scope":2189,"src":"4922:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4897:39:10"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"4955:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2179,"name":"bool","nodeType":"ElementaryTypeName","src":"4955:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4954:6:10"},"scope":2489,"src":"4885:123:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"5255:50:10","statements":[{"expression":{"arguments":[{"expression":{"id":2201,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"5280:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"5280:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"5292:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2200,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"5272:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5272:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2199,"id":2205,"nodeType":"Return","src":"5265:33:10"}]},"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"5014:157:10","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"5185:6:10","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"set","nameLocation":"5211:3:10","nodeType":"VariableDeclaration","scope":2207,"src":"5192:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"Bytes32Set","nameLocations":["5192:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"5192:10:10"},"referencedDeclaration":2171,"src":"5192:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"value","nameLocation":"5224:5:10","nodeType":"VariableDeclaration","scope":2207,"src":"5216:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5216:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5191:39:10"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"5249:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2197,"name":"bool","nodeType":"ElementaryTypeName","src":"5249:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5248:6:10"},"scope":2489,"src":"5176:129:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2224,"nodeType":"Block","src":"5472:52:10","statements":[{"expression":{"arguments":[{"expression":{"id":2219,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"5499:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5503:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"5499:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5511:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2218,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5489:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5489:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2217,"id":2223,"nodeType":"Return","src":"5482:35:10"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"5311:70:10","text":" @dev Returns true if the value is in the set. O(1)."},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"5395:8:10","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"set","nameLocation":"5423:3:10","nodeType":"VariableDeclaration","scope":2225,"src":"5404:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2210,"nodeType":"UserDefinedTypeName","pathNode":{"id":2209,"name":"Bytes32Set","nameLocations":["5404:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"5404:10:10"},"referencedDeclaration":2171,"src":"5404:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"value","nameLocation":"5436:5:10","nodeType":"VariableDeclaration","scope":2225,"src":"5428:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5428:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5403:39:10"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"5466:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2215,"name":"bool","nodeType":"ElementaryTypeName","src":"5466:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5465:6:10"},"scope":2489,"src":"5386:138:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"5677:43:10","statements":[{"expression":{"arguments":[{"expression":{"id":2235,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"5702:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5706:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"5702:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2234,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"5694:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5694:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2233,"id":2238,"nodeType":"Return","src":"5687:26:10"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"5530:70:10","text":" @dev Returns the number of values in the set. O(1)."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"5614:6:10","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"set","nameLocation":"5640:3:10","nodeType":"VariableDeclaration","scope":2240,"src":"5621:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2228,"nodeType":"UserDefinedTypeName","pathNode":{"id":2227,"name":"Bytes32Set","nameLocations":["5621:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"5621:10:10"},"referencedDeclaration":2171,"src":"5621:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"5620:24:10"},"returnParameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"5668:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5667:9:10"},"scope":2489,"src":"5605:115:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2257,"nodeType":"Block","src":"6135:46:10","statements":[{"expression":{"arguments":[{"expression":{"id":2252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6156:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6160:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"6156:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2254,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"6168:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2251,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6152:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2250,"id":2256,"nodeType":"Return","src":"6145:29:10"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"5725:322:10","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6061:2:10","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"set","nameLocation":"6083:3:10","nodeType":"VariableDeclaration","scope":2258,"src":"6064:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2243,"nodeType":"UserDefinedTypeName","pathNode":{"id":2242,"name":"Bytes32Set","nameLocations":["6064:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"6064:10:10"},"referencedDeclaration":2171,"src":"6064:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2171_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"index","nameLocation":"6096:5:10","nodeType":"VariableDeclaration","scope":2258,"src":"6088:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6063:39:10"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"6126:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6126:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6125:9:10"},"scope":2489,"src":"6052:129:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2262,"members":[{"constant":false,"id":2261,"mutability":"mutable","name":"_inner","nameLocation":"6238:6:10","nodeType":"VariableDeclaration","scope":2262,"src":"6234:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2260,"nodeType":"UserDefinedTypeName","pathNode":{"id":2259,"name":"Set","nameLocations":["6234:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"6234:3:10"},"referencedDeclaration":1985,"src":"6234:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"6213:10:10","nodeType":"StructDefinition","scope":2489,"src":"6206:45:10","visibility":"public"},{"body":{"id":2288,"nodeType":"Block","src":"6497:74:10","statements":[{"expression":{"arguments":[{"expression":{"id":2274,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"6519:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6523:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6519:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"6555:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6547:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2280,"name":"uint160","nodeType":"ElementaryTypeName","src":"6547:7:10","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6547:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6539:7:10","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6531:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6531:7:10","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6531:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2273,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"6514:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2272,"id":2287,"nodeType":"Return","src":"6507:57:10"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"6257:159:10","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6430:3:10","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"set","nameLocation":"6453:3:10","nodeType":"VariableDeclaration","scope":2289,"src":"6434:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2265,"nodeType":"UserDefinedTypeName","pathNode":{"id":2264,"name":"AddressSet","nameLocations":["6434:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6434:10:10"},"referencedDeclaration":2262,"src":"6434:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"value","nameLocation":"6466:5:10","nodeType":"VariableDeclaration","scope":2289,"src":"6458:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6433:39:10"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"6491:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2270,"name":"bool","nodeType":"ElementaryTypeName","src":"6491:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6490:6:10"},"scope":2489,"src":"6421:150:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"6818:77:10","statements":[{"expression":{"arguments":[{"expression":{"id":2301,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"6843:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6847:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"6843:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"6879:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6871:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2307,"name":"uint160","nodeType":"ElementaryTypeName","src":"6871:7:10","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6863:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6863:7:10","typeDescriptions":{}}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6855:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6855:7:10","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6855:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2300,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"6835:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6835:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2299,"id":2314,"nodeType":"Return","src":"6828:60:10"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"6577:157:10","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6748:6:10","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"set","nameLocation":"6774:3:10","nodeType":"VariableDeclaration","scope":2316,"src":"6755:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2292,"nodeType":"UserDefinedTypeName","pathNode":{"id":2291,"name":"AddressSet","nameLocations":["6755:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6755:10:10"},"referencedDeclaration":2262,"src":"6755:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"value","nameLocation":"6787:5:10","nodeType":"VariableDeclaration","scope":2316,"src":"6779:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"6779:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6754:39:10"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"6812:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2297,"name":"bool","nodeType":"ElementaryTypeName","src":"6812:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6811:6:10"},"scope":2489,"src":"6739:156:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"7062:79:10","statements":[{"expression":{"arguments":[{"expression":{"id":2328,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"7089:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7093:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"7089:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7125:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7117:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2334,"name":"uint160","nodeType":"ElementaryTypeName","src":"7117:7:10","typeDescriptions":{}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7117:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7109:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7109:7:10","typeDescriptions":{}}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7101:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7101:7:10","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7101:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2327,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"7079:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2326,"id":2341,"nodeType":"Return","src":"7072:62:10"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"6901:70:10","text":" @dev Returns true if the value is in the set. O(1)."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6985:8:10","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"set","nameLocation":"7013:3:10","nodeType":"VariableDeclaration","scope":2343,"src":"6994:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2319,"nodeType":"UserDefinedTypeName","pathNode":{"id":2318,"name":"AddressSet","nameLocations":["6994:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"6994:10:10"},"referencedDeclaration":2262,"src":"6994:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"value","nameLocation":"7026:5:10","nodeType":"VariableDeclaration","scope":2343,"src":"7018:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"7018:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6993:39:10"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"7056:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2324,"name":"bool","nodeType":"ElementaryTypeName","src":"7056:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7055:6:10"},"scope":2489,"src":"6976:165:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"7294:43:10","statements":[{"expression":{"arguments":[{"expression":{"id":2353,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7319:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7323:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"7319:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2352,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"7311:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2351,"id":2356,"nodeType":"Return","src":"7304:26:10"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"7147:70:10","text":" @dev Returns the number of values in the set. O(1)."},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"7231:6:10","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"set","nameLocation":"7257:3:10","nodeType":"VariableDeclaration","scope":2358,"src":"7238:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2346,"nodeType":"UserDefinedTypeName","pathNode":{"id":2345,"name":"AddressSet","nameLocations":["7238:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"7238:10:10"},"referencedDeclaration":2262,"src":"7238:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"7237:24:10"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"7285:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"7285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7284:9:10"},"scope":2489,"src":"7222:115:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"7752:73:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2376,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"7797:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7801:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2261,"src":"7797:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2378,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"7809:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7793:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7785:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7785:7:10","typeDescriptions":{}}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7785:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7777:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2371,"name":"uint160","nodeType":"ElementaryTypeName","src":"7777:7:10","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7777:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7769:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"7769:7:10","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7769:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2368,"id":2383,"nodeType":"Return","src":"7762:56:10"}]},"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"7342:322:10","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7678:2:10","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"set","nameLocation":"7700:3:10","nodeType":"VariableDeclaration","scope":2385,"src":"7681:22:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2361,"nodeType":"UserDefinedTypeName","pathNode":{"id":2360,"name":"AddressSet","nameLocations":["7681:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2262,"src":"7681:10:10"},"referencedDeclaration":2262,"src":"7681:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2262_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"index","nameLocation":"7713:5:10","nodeType":"VariableDeclaration","scope":2385,"src":"7705:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7680:39:10"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"7743:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"7743:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7742:9:10"},"scope":2489,"src":"7669:156:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2389,"members":[{"constant":false,"id":2388,"mutability":"mutable","name":"_inner","nameLocation":"7877:6:10","nodeType":"VariableDeclaration","scope":2389,"src":"7873:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2387,"nodeType":"UserDefinedTypeName","pathNode":{"id":2386,"name":"Set","nameLocations":["7873:3:10"],"nodeType":"IdentifierPath","referencedDeclaration":1985,"src":"7873:3:10"},"referencedDeclaration":1985,"src":"7873:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"7855:7:10","nodeType":"StructDefinition","scope":2489,"src":"7848:42:10","visibility":"public"},{"body":{"id":2409,"nodeType":"Block","src":"8133:56:10","statements":[{"expression":{"arguments":[{"expression":{"id":2401,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"8155:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8159:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"8155:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"8175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8167:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8167:7:10","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2400,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8150:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2399,"id":2408,"nodeType":"Return","src":"8143:39:10"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"7896:159:10","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8069:3:10","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"set","nameLocation":"8089:3:10","nodeType":"VariableDeclaration","scope":2410,"src":"8073:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2392,"nodeType":"UserDefinedTypeName","pathNode":{"id":2391,"name":"UintSet","nameLocations":["8073:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2389,"src":"8073:7:10"},"referencedDeclaration":2389,"src":"8073:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"value","nameLocation":"8102:5:10","nodeType":"VariableDeclaration","scope":2410,"src":"8094:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"8094:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8072:36:10"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"8127:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"8127:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8126:6:10"},"scope":2489,"src":"8060:129:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2430,"nodeType":"Block","src":"8433:59:10","statements":[{"expression":{"arguments":[{"expression":{"id":2422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"8458:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8462:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"8458:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"8478:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8470:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8470:7:10","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2421,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"8450:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8450:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2420,"id":2429,"nodeType":"Return","src":"8443:42:10"}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"8195:157:10","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8366:6:10","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"set","nameLocation":"8389:3:10","nodeType":"VariableDeclaration","scope":2431,"src":"8373:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2413,"nodeType":"UserDefinedTypeName","pathNode":{"id":2412,"name":"UintSet","nameLocations":["8373:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2389,"src":"8373:7:10"},"referencedDeclaration":2389,"src":"8373:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"value","nameLocation":"8402:5:10","nodeType":"VariableDeclaration","scope":2431,"src":"8394:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"8394:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8372:36:10"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"8427:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2418,"name":"bool","nodeType":"ElementaryTypeName","src":"8427:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8426:6:10"},"scope":2489,"src":"8357:135:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"8656:61:10","statements":[{"expression":{"arguments":[{"expression":{"id":2443,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8683:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8687:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"8683:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8703:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8695:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8695:7:10","typeDescriptions":{}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8695:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2442,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"8673:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8673:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2441,"id":2450,"nodeType":"Return","src":"8666:44:10"}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"8498:70:10","text":" @dev Returns true if the value is in the set. O(1)."},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8582:8:10","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"set","nameLocation":"8607:3:10","nodeType":"VariableDeclaration","scope":2452,"src":"8591:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2434,"nodeType":"UserDefinedTypeName","pathNode":{"id":2433,"name":"UintSet","nameLocations":["8591:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2389,"src":"8591:7:10"},"referencedDeclaration":2389,"src":"8591:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"8620:5:10","nodeType":"VariableDeclaration","scope":2452,"src":"8612:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"8612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8590:36:10"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"8650:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"8650:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8649:6:10"},"scope":2489,"src":"8573:144:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"8867:43:10","statements":[{"expression":{"arguments":[{"expression":{"id":2462,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"8892:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8896:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"8892:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2461,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"8884:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8884:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2460,"id":2465,"nodeType":"Return","src":"8877:26:10"}]},"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"8723:70:10","text":" @dev Returns the number of values on the set. O(1)."},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8807:6:10","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"set","nameLocation":"8830:3:10","nodeType":"VariableDeclaration","scope":2467,"src":"8814:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2455,"nodeType":"UserDefinedTypeName","pathNode":{"id":2454,"name":"UintSet","nameLocations":["8814:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2389,"src":"8814:7:10"},"referencedDeclaration":2389,"src":"8814:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"8813:21:10"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"8858:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"8858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8857:9:10"},"scope":2489,"src":"8798:112:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2487,"nodeType":"Block","src":"9322:55:10","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2481,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"9351:3:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9355:6:10","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"9351:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2483,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"9363:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1985_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"9347:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1985_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9339:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9339:7:10","typeDescriptions":{}}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9339:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2477,"id":2486,"nodeType":"Return","src":"9332:38:10"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"8915:322:10","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9251:2:10","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"set","nameLocation":"9270:3:10","nodeType":"VariableDeclaration","scope":2488,"src":"9254:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"UintSet","nameLocations":["9254:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2389,"src":"9254:7:10"},"referencedDeclaration":2389,"src":"9254:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2389_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"index","nameLocation":"9283:5:10","nodeType":"VariableDeclaration","scope":2488,"src":"9275:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"9275:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9253:36:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"9313:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"9313:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9312:9:10"},"scope":2489,"src":"9242:135:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2490,"src":"745:8634:10","usedErrors":[],"usedEvents":[]}],"src":"33:9347:10"},"id":10},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2529]},"id":2530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2491,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"58:750:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2529,"linearizedBaseContracts":[2529],"name":"ReentrancyGuard","nameLocation":"827:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2495,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1622:12:11","nodeType":"VariableDeclaration","scope":2529,"src":"1597:41:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1637:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2498,"mutability":"constant","name":"_ENTERED","nameLocation":"1669:8:11","nodeType":"VariableDeclaration","scope":2529,"src":"1644:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1644:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2500,"mutability":"mutable","name":"_status","nameLocation":"1704:7:11","nodeType":"VariableDeclaration","scope":2529,"src":"1688:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":2507,"nodeType":"Block","src":"1733:39:11","statements":[{"expression":{"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2503,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"1743:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2504,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1753:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1743:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"nodeType":"ExpressionStatement","src":"1743:22:11"}]},"id":2508,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"1730:2:11"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"1733:0:11"},"scope":2529,"src":"1718:54:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2527,"nodeType":"Block","src":"2171:421:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2260:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2513,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2271:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2260:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2281:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":2511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2252:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2517,"nodeType":"ExpressionStatement","src":"2252:63:11"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2519,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2400:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2390:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"2390:18:11"},{"id":2522,"nodeType":"PlaceholderStatement","src":"2419:1:11"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2563:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2524,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2573:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2563:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"2563:22:11"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"1778:364:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."},"id":2528,"name":"nonReentrant","nameLocation":"2156:12:11","nodeType":"ModifierDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"2168:2:11"},"src":"2147:445:11","virtual":false,"visibility":"internal"}],"scope":2530,"src":"809:1785:11","usedErrors":[],"usedEvents":[]}],"src":"33:2562:11"},"id":11},"contracts/AUSD.sol":{"ast":{"absolutePath":"contracts/AUSD.sol","exportedSymbols":{"AUSD":[2626],"AccessControl":[331],"Address":[1951],"Context":[1974],"ERC20":[1299],"ERC20Burnable":[1358],"EnumerableSet":[2489],"IERC20":[1436],"Ownable":[441],"ReentrancyGuard":[2529],"SafeERC20":[1655],"SafeMath":[796]},"id":2627,"license":"MIT LICENSE","nodeType":"SourceUnit","nodes":[{"id":2531,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"43:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":1437,"src":"71:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","id":2533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":1656,"src":"129:59:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"@openzeppelin/contracts/math/SafeMath.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":797,"src":"190:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":442,"src":"243:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":2530,"src":"297:59:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":332,"src":"358:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol","id":2538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2627,"sourceUnit":1359,"src":"418:63:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2539,"name":"IERC20","nameLocations":["504:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"504:6:12"},"id":2540,"nodeType":"InheritanceSpecifier","src":"504:6:12"},{"baseName":{"id":2541,"name":"ERC20Burnable","nameLocations":["512:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"512:13:12"},"id":2542,"nodeType":"InheritanceSpecifier","src":"512:13:12"},{"baseName":{"id":2543,"name":"Ownable","nameLocations":["527:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":441,"src":"527:7:12"},"id":2544,"nodeType":"InheritanceSpecifier","src":"527:7:12"},{"baseName":{"id":2545,"name":"AccessControl","nameLocations":["536:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":331,"src":"536:13:12"},"id":2546,"nodeType":"InheritanceSpecifier","src":"536:13:12"}],"canonicalName":"AUSD","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2626,"linearizedBaseContracts":[2626,331,441,1358,1299,1436,1974],"name":"AUSD","nameLocation":"496:4:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2549,"libraryName":{"id":2547,"name":"SafeMath","nameLocations":["565:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"565:8:12"},"nodeType":"UsingForDirective","src":"559:27:12","typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":2553,"libraryName":{"id":2550,"name":"SafeERC20","nameLocations":["598:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"598:9:12"},"nodeType":"UsingForDirective","src":"592:26:12","typeName":{"id":2552,"nodeType":"UserDefinedTypeName","pathNode":{"id":2551,"name":"ERC20","nameLocations":["612:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1299,"src":"612:5:12"},"referencedDeclaration":1299,"src":"612:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$1299","typeString":"contract ERC20"}}},{"constant":false,"id":2557,"mutability":"mutable","name":"_balances","nameLocation":"663:9:12","nodeType":"VariableDeclaration","scope":2626,"src":"626:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2556,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"626:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2559,"mutability":"mutable","name":"_totalSupply","nameLocation":"697:12:12","nodeType":"VariableDeclaration","scope":2626,"src":"681:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"functionSelector":"ec87621c","id":2564,"mutability":"constant","name":"MANAGER_ROLE","nameLocation":"742:12:12","nodeType":"VariableDeclaration","scope":2626,"src":"718:64:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d414e414745525f524f4c45","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"767:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""},"value":"MANAGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08","typeString":"literal_string \"MANAGER_ROLE\""}],"id":2561,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"757:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":2583,"nodeType":"Block","src":"835:112:12","statements":[{"expression":{"arguments":[{"id":2572,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"857:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2573,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"877:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2571,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"846:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"846:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2576,"nodeType":"ExpressionStatement","src":"846:44:12"},{"expression":{"arguments":[{"id":2578,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"912:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"926:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2577,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"901:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"ExpressionStatement","src":"901:38:12"}]},"id":2584,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4155534420537461626c65","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"812:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_499e641bf94e5bc0d24c999da47ca5c65b7f6df853a2f73b3af6667e355d1e37","typeString":"literal_string \"AUSD Stable\""},"value":"AUSD Stable"},{"hexValue":"41555344","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"827:6:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_76eec20a20beffd9611322ffc705f42e67a2bbce34c29267b96882a991edb0c1","typeString":"literal_string \"AUSD\""},"value":"AUSD"}],"id":2569,"kind":"baseConstructorSpecifier","modifierName":{"id":2566,"name":"ERC20","nameLocations":["806:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1299,"src":"806:5:12"},"nodeType":"ModifierInvocation","src":"806:28:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[],"src":"803:2:12"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"835:0:12"},"scope":2626,"src":"791:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2624,"nodeType":"Block","src":"994:232:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2591,"name":"MANAGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1021:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2592,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1035:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2590,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1013:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1050:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1005:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1005:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2597,"nodeType":"ExpressionStatement","src":"1005:59:12"},{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1075:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1107:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2599,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1090:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1103:3:12","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"1090:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1090:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1075:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ExpressionStatement","src":"1075:39:12"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2605,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"1125:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2608,"indexExpression":{"expression":{"id":2606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1135:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1139:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1135:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1125:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1175:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"1149:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2612,"indexExpression":{"expression":{"id":2610,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1159:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1163:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1159:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1149:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1171:3:12","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"1149:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1125:57:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"1125:57:12"},{"expression":{"arguments":[{"expression":{"id":2619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1199:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1203:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1199:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2621,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1211:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2618,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"1193:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1193:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2623,"nodeType":"ExpressionStatement","src":"1193:25:12"}]},"functionSelector":"a0712d68","id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"964:4:12","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"amount","nameLocation":"977:6:12","nodeType":"VariableDeclaration","scope":2625,"src":"969:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:16:12"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"994:0:12"},"scope":2626,"src":"955:271:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2627,"src":"487:742:12","usedErrors":[],"usedEvents":[83,92,101,345,1426,1435]}],"src":"43:1190:12"},"id":12},"contracts/AUSDGovernance.sol":{"ast":{"absolutePath":"contracts/AUSDGovernance.sol","exportedSymbols":{"AUSD":[2626],"AUSDGovernance":[3098],"AccessControl":[331],"Address":[1951],"AggregatorV3Interface":[45],"Context":[1974],"ERC20":[1299],"ERC20Burnable":[1358],"EnumerableSet":[2489],"IERC20":[1436],"Ownable":[441],"ReentrancyGuard":[2529],"SafeERC20":[1655],"SafeMath":[796]},"id":3099,"license":"MIT LICENSE","nodeType":"SourceUnit","nodes":[{"id":2628,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"43:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":1437,"src":"70:56:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","id":2630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":1656,"src":"128:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"@openzeppelin/contracts/math/SafeMath.sol","id":2631,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":797,"src":"189:51:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":442,"src":"242:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":2530,"src":"296:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":332,"src":"357:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","id":2635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":46,"src":"417:83:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AUSD.sol","file":"./AUSD.sol","id":2636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3099,"sourceUnit":2627,"src":"502:20:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2637,"name":"Ownable","nameLocations":["553:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":441,"src":"553:7:13"},"id":2638,"nodeType":"InheritanceSpecifier","src":"553:7:13"},{"baseName":{"id":2639,"name":"ReentrancyGuard","nameLocations":["562:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":2529,"src":"562:15:13"},"id":2640,"nodeType":"InheritanceSpecifier","src":"562:15:13"},{"baseName":{"id":2641,"name":"AccessControl","nameLocations":["579:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":331,"src":"579:13:13"},"id":2642,"nodeType":"InheritanceSpecifier","src":"579:13:13"}],"canonicalName":"AUSDGovernance","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3098,"linearizedBaseContracts":[3098,331,2529,441,1974],"name":"AUSDGovernance","nameLocation":"535:14:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2645,"libraryName":{"id":2643,"name":"SafeMath","nameLocations":["606:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"606:8:13"},"nodeType":"UsingForDirective","src":"600:27:13","typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":2649,"libraryName":{"id":2646,"name":"SafeERC20","nameLocations":["639:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1655,"src":"639:9:13"},"nodeType":"UsingForDirective","src":"633:27:13","typeName":{"id":2648,"nodeType":"UserDefinedTypeName","pathNode":{"id":2647,"name":"IERC20","nameLocations":["653:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"653:6:13"},"referencedDeclaration":1436,"src":"653:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}}},{"canonicalName":"AUSDGovernance.SupChange","id":2658,"members":[{"constant":false,"id":2651,"mutability":"mutable","name":"method","nameLocation":"703:6:13","nodeType":"VariableDeclaration","scope":2658,"src":"696:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2650,"name":"string","nodeType":"ElementaryTypeName","src":"696:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"amount","nameLocation":"728:6:13","nodeType":"VariableDeclaration","scope":2658,"src":"720:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"timestamp","nameLocation":"753:9:13","nodeType":"VariableDeclaration","scope":2658,"src":"745:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"blocknum","nameLocation":"781:8:13","nodeType":"VariableDeclaration","scope":2658,"src":"773:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SupChange","nameLocation":"675:9:13","nodeType":"StructDefinition","scope":3098,"src":"668:129:13","visibility":"public"},{"canonicalName":"AUSDGovernance.ReserveList","id":2662,"members":[{"constant":false,"id":2661,"mutability":"mutable","name":"colToken","nameLocation":"842:8:13","nodeType":"VariableDeclaration","scope":2662,"src":"835:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":2660,"nodeType":"UserDefinedTypeName","pathNode":{"id":2659,"name":"IERC20","nameLocations":["835:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"835:6:13"},"referencedDeclaration":1436,"src":"835:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"}],"name":"ReserveList","nameLocation":"812:11:13","nodeType":"StructDefinition","scope":3098,"src":"805:53:13","visibility":"public"},{"constant":false,"functionSelector":"669004f9","id":2667,"mutability":"mutable","name":"rsvList","nameLocation":"905:7:13","nodeType":"VariableDeclaration","scope":3098,"src":"866:46:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReserveList_$2662_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.ReserveList)"},"typeName":{"id":2666,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"866:31:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReserveList_$2662_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.ReserveList)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2665,"nodeType":"UserDefinedTypeName","pathNode":{"id":2664,"name":"ReserveList","nameLocations":["885:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2662,"src":"885:11:13"},"referencedDeclaration":2662,"src":"885:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveList_$2662_storage_ptr","typeString":"struct AUSDGovernance.ReserveList"}}},"visibility":"public"},{"constant":false,"functionSelector":"a6ef79b4","id":2672,"mutability":"mutable","name":"_supplyChanges","nameLocation":"956:14:13","nodeType":"VariableDeclaration","scope":3098,"src":"919:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange)"},"typeName":{"id":2671,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"919:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"SupChange","nameLocations":["938:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2658,"src":"938:9:13"},"referencedDeclaration":2658,"src":"938:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage_ptr","typeString":"struct AUSDGovernance.SupChange"}}},"visibility":"public"},{"constant":false,"id":2675,"mutability":"mutable","name":"ausd","nameLocation":"992:4:13","nodeType":"VariableDeclaration","scope":3098,"src":"979:17:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"AUSD","nameLocations":["979:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":2626,"src":"979:4:13"},"referencedDeclaration":2626,"src":"979:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"visibility":"private"},{"constant":false,"id":2678,"mutability":"mutable","name":"priceOracle","nameLocation":"1033:11:13","nodeType":"VariableDeclaration","scope":3098,"src":"1003:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2677,"nodeType":"UserDefinedTypeName","pathNode":{"id":2676,"name":"AggregatorV3Interface","nameLocations":["1003:21:13"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1003:21:13"},"referencedDeclaration":45,"src":"1003:21:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"private"},{"constant":false,"id":2680,"mutability":"mutable","name":"reserveContract","nameLocation":"1067:15:13","nodeType":"VariableDeclaration","scope":3098,"src":"1051:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"functionSelector":"bd7fe217","id":2682,"mutability":"mutable","name":"ausdsupply","nameLocation":"1104:10:13","nodeType":"VariableDeclaration","scope":3098,"src":"1089:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2dc47153","id":2684,"mutability":"mutable","name":"datafeed","nameLocation":"1136:8:13","nodeType":"VariableDeclaration","scope":3098,"src":"1121:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"2f41ffd0","id":2686,"mutability":"mutable","name":"supplyChangeCount","nameLocation":"1166:17:13","nodeType":"VariableDeclaration","scope":3098,"src":"1151:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"19cb170c","id":2689,"mutability":"mutable","name":"stableColatPrice","nameLocation":"1205:16:13","nodeType":"VariableDeclaration","scope":3098,"src":"1190:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1224:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"9588e614","id":2691,"mutability":"mutable","name":"stableColatAmount","nameLocation":"1250:17:13","nodeType":"VariableDeclaration","scope":3098,"src":"1235:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":2694,"mutability":"constant","name":"COL_PRICE_TO_WEI","nameLocation":"1299:16:13","nodeType":"VariableDeclaration","scope":3098,"src":"1274:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653130","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1318:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"visibility":"private"},{"constant":true,"id":2697,"mutability":"constant","name":"WEI_VALUE","nameLocation":"1354:9:13","nodeType":"VariableDeclaration","scope":3098,"src":"1329:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"private"},{"constant":false,"functionSelector":"eceab5c5","id":2699,"mutability":"mutable","name":"unstableColatAmount","nameLocation":"1392:19:13","nodeType":"VariableDeclaration","scope":3098,"src":"1377:34:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5e6a4fb0","id":2701,"mutability":"mutable","name":"unstableColPrice","nameLocation":"1433:16:13","nodeType":"VariableDeclaration","scope":3098,"src":"1418:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1418:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"16317c21","id":2703,"mutability":"mutable","name":"reserveCount","nameLocation":"1471:12:13","nodeType":"VariableDeclaration","scope":3098,"src":"1456:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"38b7f446","id":2708,"mutability":"constant","name":"GOVERN_ROLE","nameLocation":"1516:11:13","nodeType":"VariableDeclaration","scope":3098,"src":"1492:62:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1492:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"474f5645524e5f524f4c45","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e","typeString":"literal_string \"GOVERN_ROLE\""},"value":"GOVERN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e","typeString":"literal_string \"GOVERN_ROLE\""}],"id":2705,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1530:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"anonymous":false,"eventSelector":"2a6a493f767ec856dcac2f52ecc7e244b432c2d615092ef532c22a94568ed995","id":2714,"name":"RepegAction","nameLocation":"1569:11:13","nodeType":"EventDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"indexed":false,"mutability":"mutable","name":"time","nameLocation":"1589:4:13","nodeType":"VariableDeclaration","scope":2714,"src":"1581:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2712,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1603:6:13","nodeType":"VariableDeclaration","scope":2714,"src":"1595:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1580:30:13"},"src":"1563:48:13"},{"anonymous":false,"eventSelector":"56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8","id":2720,"name":"Withdraw","nameLocation":"1623:8:13","nodeType":"EventDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"indexed":false,"mutability":"mutable","name":"time","nameLocation":"1640:4:13","nodeType":"VariableDeclaration","scope":2720,"src":"1632:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1632:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1654:6:13","nodeType":"VariableDeclaration","scope":2720,"src":"1646:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1631:30:13"},"src":"1617:45:13"},{"body":{"id":2742,"nodeType":"Block","src":"1694:134:13","statements":[{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"ausd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"1705:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2727,"name":"_ausd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1712:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"src":"1705:12:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"id":2729,"nodeType":"ExpressionStatement","src":"1705:12:13"},{"expression":{"arguments":[{"id":2731,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1739:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2732,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1759:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1759:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2730,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1728:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1728:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2735,"nodeType":"ExpressionStatement","src":"1728:44:13"},{"expression":{"arguments":[{"id":2737,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"1794:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2738,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1807:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1807:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2736,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1783:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"ExpressionStatement","src":"1783:37:13"}]},"id":2743,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"_ausd","nameLocation":"1687:5:13","nodeType":"VariableDeclaration","scope":2743,"src":"1682:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"},"typeName":{"id":2722,"nodeType":"UserDefinedTypeName","pathNode":{"id":2721,"name":"AUSD","nameLocations":["1682:4:13"],"nodeType":"IdentifierPath","referencedDeclaration":2626,"src":"1682:4:13"},"referencedDeclaration":2626,"src":"1682:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"visibility":"internal"}],"src":"1681:12:13"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[],"src":"1694:0:13"},"scope":3098,"src":"1670:158:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2767,"nodeType":"Block","src":"1898:170:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2750,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"1925:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2751,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1938:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2749,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1953:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1909:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2756,"nodeType":"ExpressionStatement","src":"1909:58:13"},{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"datafeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1978:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2758,"name":"contractaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1989:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1978:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2760,"nodeType":"ExpressionStatement","src":"1978:26:13"},{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"2015:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2763,"name":"datafeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"2051:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2762,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2029:21:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2029:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"2015:45:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2766,"nodeType":"ExpressionStatement","src":"2015:45:13"}]},"functionSelector":"26ba7898","id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"setDataFeedAddress","nameLocation":"1845:18:13","nodeType":"FunctionDefinition","parameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"contractaddress","nameLocation":"1872:15:13","nodeType":"VariableDeclaration","scope":2768,"src":"1864:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1863:25:13"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[],"src":"1898:0:13"},"scope":3098,"src":"1836:232:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2795,"nodeType":"Block","src":"2145:157:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2778,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2172:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2779,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2185:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2777,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2164:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2164:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2200:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2156:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2156:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2784,"nodeType":"ExpressionStatement","src":"2156:58:13"},{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2785,"name":"rsvList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2225:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReserveList_$2662_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.ReserveList storage ref)"}},"id":2787,"indexExpression":{"id":2786,"name":"reserveCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"2233:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2225:21:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveList_$2662_storage","typeString":"struct AUSDGovernance.ReserveList storage ref"}},"id":2788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2247:8:13","memberName":"colToken","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"2225:30:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2789,"name":"colcontract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"2258:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"src":"2225:44:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":2791,"nodeType":"ExpressionStatement","src":"2225:44:13"},{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2280:14:13","subExpression":{"id":2792,"name":"reserveCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"2280:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2794,"nodeType":"ExpressionStatement","src":"2280:14:13"}]},"functionSelector":"e0e9349b","id":2796,"implemented":true,"kind":"function","modifiers":[{"id":2774,"kind":"modifierInvocation","modifierName":{"id":2773,"name":"nonReentrant","nameLocations":["2132:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2528,"src":"2132:12:13"},"nodeType":"ModifierInvocation","src":"2132:12:13"}],"name":"addColateralToken","nameLocation":"2085:17:13","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"colcontract","nameLocation":"2110:11:13","nodeType":"VariableDeclaration","scope":2796,"src":"2103:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"IERC20","nameLocations":["2103:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1436,"src":"2103:6:13"},"referencedDeclaration":1436,"src":"2103:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2102:20:13"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"2145:0:13"},"scope":3098,"src":"2076:226:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2828,"nodeType":"Block","src":"2357:234:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2803,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2384:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2397:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2802,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2376:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2412:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2368:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2809,"nodeType":"ExpressionStatement","src":"2368:58:13"},{"assignments":[null,2811,null,null,null],"declarations":[null,{"constant":false,"id":2811,"mutability":"mutable","name":"price","nameLocation":"2448:5:13","nodeType":"VariableDeclaration","scope":2828,"src":"2440:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null],"id":2815,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2812,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"2463:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2475:15:13","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2463:27:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,uint256,uint256,uint256,uint80)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,uint256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"2437:55:13"},{"assignments":[2817],"declarations":[{"constant":false,"id":2817,"mutability":"mutable","name":"value","nameLocation":"2511:5:13","nodeType":"VariableDeclaration","scope":2828,"src":"2503:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2823,"initialValue":{"arguments":[{"id":2821,"name":"COL_PRICE_TO_WEI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2531:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"id":2818,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2520:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:3:13","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":679,"src":"2519:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2519:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2503:45:13"},{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"unstableColPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"2559:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2578:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2559:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2827,"nodeType":"ExpressionStatement","src":"2559:24:13"}]},"functionSelector":"81613f25","id":2829,"implemented":true,"kind":"function","modifiers":[{"id":2799,"kind":"modifierInvocation","modifierName":{"id":2798,"name":"nonReentrant","nameLocations":["2344:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2528,"src":"2344:12:13"},"nodeType":"ModifierInvocation","src":"2344:12:13"}],"name":"fetchColPrice","nameLocation":"2319:13:13","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"2332:2:13"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[],"src":"2357:0:13"},"scope":3098,"src":"2310:281:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2849,"nodeType":"Block","src":"2666:113:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2838,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2693:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2839,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2706:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2837,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2685:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2721:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2677:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2677:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"ExpressionStatement","src":"2677:58:13"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"reserveContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2746:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2846,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"2764:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2746:25:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2848,"nodeType":"ExpressionStatement","src":"2746:25:13"}]},"functionSelector":"527a52c8","id":2850,"implemented":true,"kind":"function","modifiers":[{"id":2834,"kind":"modifierInvocation","modifierName":{"id":2833,"name":"nonReentrant","nameLocations":["2653:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2528,"src":"2653:12:13"},"nodeType":"ModifierInvocation","src":"2653:12:13"}],"name":"setReserveContract","nameLocation":"2608:18:13","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"reserve","nameLocation":"2635:7:13","nodeType":"VariableDeclaration","scope":2850,"src":"2627:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2626:17:13"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[],"src":"2666:0:13"},"scope":3098,"src":"2599:180:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2904,"nodeType":"Block","src":"2843:513:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2857,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2870:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2858,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2883:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2883:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2856,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2862:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2854:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2854:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2863,"nodeType":"ExpressionStatement","src":"2854:58:13"},{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"stableBalance","nameLocation":"2931:13:13","nodeType":"VariableDeclaration","scope":2904,"src":"2923:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2873,"initialValue":{"arguments":[{"id":2871,"name":"reserveContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2977:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":2866,"name":"rsvList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2947:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReserveList_$2662_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.ReserveList storage ref)"}},"id":2868,"indexExpression":{"hexValue":"30","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2955:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2947:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveList_$2662_storage","typeString":"struct AUSDGovernance.ReserveList storage ref"}},"id":2869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2958:8:13","memberName":"colToken","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"2947:19:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2967:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"2947:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2923:70:13"},{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"unstableBalance","nameLocation":"3012:15:13","nodeType":"VariableDeclaration","scope":2904,"src":"3004:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2883,"initialValue":{"arguments":[{"id":2881,"name":"reserveContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3074:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":2876,"name":"rsvList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3030:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReserveList_$2662_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.ReserveList storage ref)"}},"id":2878,"indexExpression":{"hexValue":"31","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3038:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3030:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveList_$2662_storage","typeString":"struct AUSDGovernance.ReserveList storage ref"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3041:8:13","memberName":"colToken","nodeType":"MemberAccess","referencedDeclaration":2661,"src":"3030:19:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1436","typeString":"contract IERC20"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"3030:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3030:70:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3004:96:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"stableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3115:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2885,"name":"stableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"3132:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3115:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"3111:100:13","trueBody":{"id":2891,"nodeType":"Block","src":"3151:60:13","statements":[{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2887,"name":"stableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"3166:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2888,"name":"stableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"3186:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3166:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ExpressionStatement","src":"3166:33:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"unstableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"3225:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2894,"name":"stableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3225:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"3221:106:13","trueBody":{"id":2900,"nodeType":"Block","src":"3263:64:13","statements":[{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"unstableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"3278:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2897,"name":"unstableBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"3300:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3278:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ExpressionStatement","src":"3278:37:13"}]}},{"expression":{"hexValue":"74727565","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3344:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2854,"id":2903,"nodeType":"Return","src":"3337:11:13"}]},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"colateralReBalancing","nameLocation":"2796:20:13","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[],"src":"2816:2:13"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"2837:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2852,"name":"bool","nodeType":"ElementaryTypeName","src":"2837:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2836:6:13"},"scope":3098,"src":"2787:569:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"3417:112:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2912,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3444:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2913,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3457:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2911,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"3436:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3436:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3472:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3428:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3428:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2918,"nodeType":"ExpressionStatement","src":"3428:58:13"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3497:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2920,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3510:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"3497:24:13"}]},"functionSelector":"2d906e63","id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"setAUSDSupply","nameLocation":"3373:13:13","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"totalSupply","nameLocation":"3395:11:13","nodeType":"VariableDeclaration","scope":2924,"src":"3387:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3387:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3386:21:13"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[],"src":"3417:0:13"},"scope":3098,"src":"3364:165:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3062,"nodeType":"Block","src":"3582:1265:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2931,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3609:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2932,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3622:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2930,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"3601:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3637:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":2929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3593:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2937,"nodeType":"ExpressionStatement","src":"3593:58:13"},{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"result","nameLocation":"3667:6:13","nodeType":"VariableDeclaration","scope":3062,"src":"3662:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2938,"name":"bool","nodeType":"ElementaryTypeName","src":"3662:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2942,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2940,"name":"colateralReBalancing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3676:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bool_$","typeString":"function () returns (bool)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3676:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3662:36:13"},{"condition":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"3713:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3722:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3713:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"3709:1131:13","trueBody":{"id":3060,"nodeType":"Block","src":"3728:1112:13","statements":[{"assignments":[2947],"declarations":[{"constant":false,"id":2947,"mutability":"mutable","name":"rawcolvalue","nameLocation":"3751:11:13","nodeType":"VariableDeclaration","scope":3060,"src":"3743:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"arguments":[{"arguments":[{"id":2956,"name":"unstableColPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"3846:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2954,"name":"unstableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"3822:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3842:3:13","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":679,"src":"3822:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2950,"name":"WEI_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"3788:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2948,"name":"stableColatAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"3766:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3784:3:13","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":679,"src":"3766:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3766:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3765:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3800:3:13","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":623,"src":"3765:38:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:113:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3743:135:13"},{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"colvalue","nameLocation":"3901:8:13","nodeType":"VariableDeclaration","scope":3060,"src":"3893:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2966,"initialValue":{"arguments":[{"id":2964,"name":"WEI_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"3928:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2962,"name":"rawcolvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"3912:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3924:3:13","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":701,"src":"3912:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3893:45:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"3957:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2968,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3968:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3957:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2998,"nodeType":"IfStatement","src":"3953:293:13","trueBody":{"id":2997,"nodeType":"Block","src":"3980:266:13","statements":[{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"supplyChange","nameLocation":"4007:12:13","nodeType":"VariableDeclaration","scope":2997,"src":"3999:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2976,"initialValue":{"arguments":[{"id":2974,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4037:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2972,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4022:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4033:3:13","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":645,"src":"4022:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3999:47:13"},{"expression":{"arguments":[{"id":2980,"name":"supplyChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4075:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2977,"name":"ausd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4065:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4070:4:13","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"4065:9:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"4065:23:13"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2983,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4107:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":2985,"indexExpression":{"id":2984,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4122:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4107:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":2986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4141:6:13","memberName":"method","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"4107:40:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4275726e","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4150:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e43e1de00e8a6bc1dfa3e950e6ade24c52e4a25de4dee7fb5affe918ad1e744","typeString":"literal_string \"Burn\""},"value":"Burn"},"src":"4107:49:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2989,"nodeType":"ExpressionStatement","src":"4107:49:13"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2990,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4175:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":2992,"indexExpression":{"id":2991,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4190:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4175:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":2993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4209:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"4175:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2994,"name":"supplyChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"4218:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4175:55:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"4175:55:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4264:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3000,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4275:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4264:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"nodeType":"IfStatement","src":"4260:293:13","trueBody":{"id":3029,"nodeType":"Block","src":"4287:266:13","statements":[{"assignments":[3003],"declarations":[{"constant":false,"id":3003,"mutability":"mutable","name":"supplyChange","nameLocation":"4314:12:13","nodeType":"VariableDeclaration","scope":3029,"src":"4306:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"4306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3008,"initialValue":{"arguments":[{"id":3006,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4342:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3004,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4329:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:3:13","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":645,"src":"4329:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4329:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4306:47:13"},{"expression":{"arguments":[{"id":3012,"name":"supplyChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"4382:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3009,"name":"ausd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4372:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4377:4:13","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":2625,"src":"4372:9:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4372:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"ExpressionStatement","src":"4372:23:13"},{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3015,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4414:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":3017,"indexExpression":{"id":3016,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4429:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4414:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":3018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4448:6:13","memberName":"method","nodeType":"MemberAccess","referencedDeclaration":2651,"src":"4414:40:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4d696e74","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4457:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_234e55c1cd55f1338241b50d352f0e91c7e4ffad0e4271d64eb347589ebdfd16","typeString":"literal_string \"Mint\""},"value":"Mint"},"src":"4414:49:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3021,"nodeType":"ExpressionStatement","src":"4414:49:13"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3022,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4482:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":3024,"indexExpression":{"id":3023,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4497:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4482:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":3025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4516:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"4482:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3026,"name":"supplyChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"4525:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4482:55:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"4482:55:13"}]}},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"ausdsupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"4567:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3032,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4580:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4567:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"4567:21:13"},{"expression":{"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3035,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4603:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":3037,"indexExpression":{"id":3036,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4618:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4603:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":3038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4637:8:13","memberName":"blocknum","nodeType":"MemberAccess","referencedDeclaration":2657,"src":"4603:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3039,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4648:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4654:6:13","memberName":"number","nodeType":"MemberAccess","src":"4648:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4603:57:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3042,"nodeType":"ExpressionStatement","src":"4603:57:13"},{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3043,"name":"_supplyChanges","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4675:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SupChange_$2658_storage_$","typeString":"mapping(uint256 => struct AUSDGovernance.SupChange storage ref)"}},"id":3045,"indexExpression":{"id":3044,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4690:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4675:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_SupChange_$2658_storage","typeString":"struct AUSDGovernance.SupChange storage ref"}},"id":3046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4709:9:13","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":2655,"src":"4675:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3047,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4721:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4727:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4721:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4675:61:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3050,"nodeType":"ExpressionStatement","src":"4675:61:13"},{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4751:19:13","subExpression":{"id":3051,"name":"supplyChangeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4751:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"4751:19:13"},{"eventCall":{"arguments":[{"expression":{"id":3055,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4802:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4808:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4802:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3057,"name":"colvalue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"4819:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"RepegAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4790:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3059,"nodeType":"EmitStatement","src":"4785:43:13"}]}}]},"functionSelector":"8a6e0169","id":3063,"implemented":true,"kind":"function","modifiers":[{"id":2927,"kind":"modifierInvocation","modifierName":{"id":2926,"name":"nonReentrant","nameLocations":["3569:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2528,"src":"3569:12:13"},"nodeType":"ModifierInvocation","src":"3569:12:13"}],"name":"validatePeg","nameLocation":"3546:11:13","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"3557:2:13"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[],"src":"3582:0:13"},"scope":3098,"src":"3537:1310:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3096,"nodeType":"Block","src":"4912:181:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3072,"name":"GOVERN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"4939:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3073,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"4952:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3071,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"4931:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4931:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616c6c6f776564","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4967:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""},"value":"Not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","typeString":"literal_string \"Not allowed\""}],"id":3070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4923:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4923:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"ExpressionStatement","src":"4923:58:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3084,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5014:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5018:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5014:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"5006:7:13","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3087,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"5027:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3079,"name":"ausd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4992:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AUSD_$2626","typeString":"contract AUSD"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4997:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":920,"src":"4992:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4992:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"nodeType":"ExpressionStatement","src":"4992:43:13"},{"eventCall":{"arguments":[{"expression":{"id":3091,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5060:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"5060:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3093,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"5077:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5051:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5051:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"EmitStatement","src":"5046:39:13"}]},"functionSelector":"2e1a7d4d","id":3097,"implemented":true,"kind":"function","modifiers":[{"id":3068,"kind":"modifierInvocation","modifierName":{"id":3067,"name":"nonReentrant","nameLocations":["4899:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":2528,"src":"4899:12:13"},"nodeType":"ModifierInvocation","src":"4899:12:13"}],"name":"withdraw","nameLocation":"4864:8:13","nodeType":"FunctionDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"_amount","nameLocation":"4881:7:13","nodeType":"VariableDeclaration","scope":3097,"src":"4873:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4872:17:13"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"4912:0:13"},"scope":3098,"src":"4855:238:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3099,"src":"526:4570:13","usedErrors":[],"usedEvents":[83,92,101,345,2714,2720]}],"src":"43:5055:13"},"id":13}},"contracts":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"uint256","name":"answer","type":"uint256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"uint256","name":"answer","type":"uint256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            uint256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            uint256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x2ef2101ff8bb90e9d56a3e09def73b960e7df0bbb8e8960b080d7c0c3a29ebc5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e98c0d315f562a98d915414f948e041531138284dd633b4cdb0361a7172cd97\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":71,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)66_storage)"}],"types":{"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_struct(RoleData)66_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)66_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)2262_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":2261,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1985_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)66_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":63,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_struct(AddressSet)2262_storage"},{"astId":65,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"2","type":"t_bytes32"}],"numberOfBytes":"96"},"t_struct(Set)1985_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1980,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1984,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":339,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220582e45d7d508e193c7082106d0ab881d2d9b7d4480d9c9a1e855885ae18089bb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x2E GASLIMIT 0xD7 0xD5 ADDMOD 0xE1 SWAP4 0xC7 ADDMOD 0x21 MOD 0xD0 0xAB DUP9 SAR 0x2D SWAP12 PUSH30 0x4480D9C9A1E855885AE18089BB64736F6C63430008140033000000000000 ","sourceMap":"622:6594:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220582e45d7d508e193c7082106d0ab881d2d9b7d4480d9c9a1e855885ae18089bb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x2E GASLIMIT 0xD7 0xD5 ADDMOD 0xE1 SWAP4 0xC7 ADDMOD 0x21 MOD 0xD0 0xAB DUP9 SAR 0x2D SWAP12 PUSH30 0x4480D9C9A1E855885AE18089BB64736F6C63430008140033000000000000 ","sourceMap":"622:6594:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_848":{"entryPoint":null,"id":848,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":404,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":479,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":530,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":127,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":306,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":774,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":663,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1095,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":910,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1056,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":930,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1250,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":360,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":795,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":721,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1220,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":221,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":920,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1188,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":674,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":174,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":970,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":147,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":142,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":137,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":157,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":811,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1175,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":824,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":980,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1023,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"423:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:14"},"nodeType":"YulFunctionCall","src":"433:12:14"},"nodeType":"YulExpressionStatement","src":"433:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:14"},{"body":{"nodeType":"YulBlock","src":"546:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:14"},"nodeType":"YulFunctionCall","src":"556:12:14"},"nodeType":"YulExpressionStatement","src":"556:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:14"},{"body":{"nodeType":"YulBlock","src":"628:54:14","statements":[{"nodeType":"YulAssignment","src":"638:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:14"},"nodeType":"YulFunctionCall","src":"652:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:14"},"nodeType":"YulFunctionCall","src":"668:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:14"},"nodeType":"YulFunctionCall","src":"648:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:14","type":""}],"src":"580:102:14"},{"body":{"nodeType":"YulBlock","src":"716:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:14"},"nodeType":"YulFunctionCall","src":"726:88:14"},"nodeType":"YulExpressionStatement","src":"726:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:14"},"nodeType":"YulFunctionCall","src":"823:15:14"},"nodeType":"YulExpressionStatement","src":"823:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:14"},"nodeType":"YulFunctionCall","src":"847:15:14"},"nodeType":"YulExpressionStatement","src":"847:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:14"},{"body":{"nodeType":"YulBlock","src":"917:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:14"},"nodeType":"YulFunctionCall","src":"957:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:14"},"nodeType":"YulFunctionCall","src":"945:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:14"},"nodeType":"YulFunctionCall","src":"1098:18:14"},"nodeType":"YulExpressionStatement","src":"1098:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:14"},"nodeType":"YulFunctionCall","src":"1036:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:14"},"nodeType":"YulFunctionCall","src":"1072:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:14"},"nodeType":"YulFunctionCall","src":"1033:62:14"},"nodeType":"YulIf","src":"1030:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:14"},"nodeType":"YulFunctionCall","src":"1127:22:14"},"nodeType":"YulExpressionStatement","src":"1127:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:14","type":""}],"src":"874:281:14"},{"body":{"nodeType":"YulBlock","src":"1202:88:14","statements":[{"nodeType":"YulAssignment","src":"1212:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:14"},"nodeType":"YulFunctionCall","src":"1222:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:14"},"nodeType":"YulFunctionCall","src":"1251:33:14"},"nodeType":"YulExpressionStatement","src":"1251:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:14","type":""}],"src":"1161:129:14"},{"body":{"nodeType":"YulBlock","src":"1363:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:14"},"nodeType":"YulFunctionCall","src":"1470:18:14"},"nodeType":"YulExpressionStatement","src":"1470:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:14"},"nodeType":"YulFunctionCall","src":"1437:30:14"},"nodeType":"YulIf","src":"1434:56:14"},{"nodeType":"YulAssignment","src":"1500:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:14"},"nodeType":"YulFunctionCall","src":"1508:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:14"}]},{"nodeType":"YulAssignment","src":"1574:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:14","type":""}],"src":"1296:308:14"},{"body":{"nodeType":"YulBlock","src":"1672:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:14"},"nodeType":"YulFunctionCall","src":"1772:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:14"},"nodeType":"YulFunctionCall","src":"1791:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:14"},"nodeType":"YulFunctionCall","src":"1785:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:14"},"nodeType":"YulFunctionCall","src":"1765:39:14"},"nodeType":"YulExpressionStatement","src":"1765:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:14"},"nodeType":"YulFunctionCall","src":"1709:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:14","statements":[{"nodeType":"YulAssignment","src":"1725:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:14"},"nodeType":"YulFunctionCall","src":"1730:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:14","statements":[]},"src":"1701:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:14"},"nodeType":"YulFunctionCall","src":"1830:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:14"},"nodeType":"YulFunctionCall","src":"1823:27:14"},"nodeType":"YulExpressionStatement","src":"1823:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:14","type":""}],"src":"1610:246:14"},{"body":{"nodeType":"YulBlock","src":"1957:339:14","statements":[{"nodeType":"YulAssignment","src":"1967:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:14"},"nodeType":"YulFunctionCall","src":"1992:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:14"},"nodeType":"YulFunctionCall","src":"1976:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:14"},"nodeType":"YulFunctionCall","src":"2051:21:14"},"nodeType":"YulExpressionStatement","src":"2051:21:14"},{"nodeType":"YulVariableDeclaration","src":"2081:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:14"},"nodeType":"YulFunctionCall","src":"2092:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:14"},"nodeType":"YulFunctionCall","src":"2148:79:14"},"nodeType":"YulExpressionStatement","src":"2148:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:14"},"nodeType":"YulFunctionCall","src":"2123:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:14"},"nodeType":"YulFunctionCall","src":"2120:25:14"},"nodeType":"YulIf","src":"2117:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:14"},"nodeType":"YulFunctionCall","src":"2238:52:14"},"nodeType":"YulExpressionStatement","src":"2238:52:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:14","type":""}],"src":"1862:434:14"},{"body":{"nodeType":"YulBlock","src":"2389:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:14"},"nodeType":"YulFunctionCall","src":"2440:79:14"},"nodeType":"YulExpressionStatement","src":"2440:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:14"},"nodeType":"YulFunctionCall","src":"2413:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:14"},"nodeType":"YulFunctionCall","src":"2409:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:14"},"nodeType":"YulFunctionCall","src":"2402:35:14"},"nodeType":"YulIf","src":"2399:122:14"},{"nodeType":"YulVariableDeclaration","src":"2530:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:14"},"nodeType":"YulFunctionCall","src":"2544:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:14"},"nodeType":"YulFunctionCall","src":"2634:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:14"},"nodeType":"YulFunctionCall","src":"2575:90:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:14","type":""}],"src":"2316:355:14"},{"body":{"nodeType":"YulBlock","src":"2791:739:14","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:14"},"nodeType":"YulFunctionCall","src":"2839:79:14"},"nodeType":"YulExpressionStatement","src":"2839:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:14"},"nodeType":"YulFunctionCall","src":"2808:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:14"},"nodeType":"YulFunctionCall","src":"2804:32:14"},"nodeType":"YulIf","src":"2801:119:14"},{"nodeType":"YulBlock","src":"2930:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:14"},"nodeType":"YulFunctionCall","src":"2965:17:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:14"},"nodeType":"YulFunctionCall","src":"2959:24:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:14"},"nodeType":"YulFunctionCall","src":"3032:79:14"},"nodeType":"YulExpressionStatement","src":"3032:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:14"},"nodeType":"YulFunctionCall","src":"2999:30:14"},"nodeType":"YulIf","src":"2996:117:14"},{"nodeType":"YulAssignment","src":"3127:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:14"},"nodeType":"YulFunctionCall","src":"3179:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:14"},"nodeType":"YulFunctionCall","src":"3137:74:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:14"}]}]},{"nodeType":"YulBlock","src":"3231:292:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:14"},"nodeType":"YulFunctionCall","src":"3266:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:14"},"nodeType":"YulFunctionCall","src":"3260:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:14"},"nodeType":"YulFunctionCall","src":"3334:79:14"},"nodeType":"YulExpressionStatement","src":"3334:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:14"},"nodeType":"YulFunctionCall","src":"3301:30:14"},"nodeType":"YulIf","src":"3298:117:14"},{"nodeType":"YulAssignment","src":"3429:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:14"},"nodeType":"YulFunctionCall","src":"3481:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:14"},"nodeType":"YulFunctionCall","src":"3439:74:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:14","type":""}],"src":"2677:853:14"},{"body":{"nodeType":"YulBlock","src":"3595:40:14","statements":[{"nodeType":"YulAssignment","src":"3606:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:14"},"nodeType":"YulFunctionCall","src":"3616:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:14","type":""}],"src":"3536:99:14"},{"body":{"nodeType":"YulBlock","src":"3669:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:14"},"nodeType":"YulFunctionCall","src":"3679:88:14"},"nodeType":"YulExpressionStatement","src":"3679:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:14"},"nodeType":"YulFunctionCall","src":"3776:15:14"},"nodeType":"YulExpressionStatement","src":"3776:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:14"},"nodeType":"YulFunctionCall","src":"3800:15:14"},"nodeType":"YulExpressionStatement","src":"3800:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:14"},{"body":{"nodeType":"YulBlock","src":"3878:269:14","statements":[{"nodeType":"YulAssignment","src":"3888:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:14"},"nodeType":"YulFunctionCall","src":"3898:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:14"},"nodeType":"YulFunctionCall","src":"3945:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:14","statements":[{"nodeType":"YulAssignment","src":"4010:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:14"},"nodeType":"YulFunctionCall","src":"4020:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:14"},"nodeType":"YulFunctionCall","src":"3969:26:14"},"nodeType":"YulIf","src":"3966:81:14"},{"body":{"nodeType":"YulBlock","src":"4099:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:14"},"nodeType":"YulFunctionCall","src":"4113:18:14"},"nodeType":"YulExpressionStatement","src":"4113:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:14"},"nodeType":"YulFunctionCall","src":"4083:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:14"},"nodeType":"YulFunctionCall","src":"4060:38:14"},"nodeType":"YulIf","src":"4057:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:14","type":""}],"src":"3827:320:14"},{"body":{"nodeType":"YulBlock","src":"4207:87:14","statements":[{"nodeType":"YulAssignment","src":"4217:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:14"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:14"},"nodeType":"YulFunctionCall","src":"4238:14:14"},"nodeType":"YulExpressionStatement","src":"4238:14:14"},{"nodeType":"YulAssignment","src":"4261:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:14"},"nodeType":"YulFunctionCall","src":"4269:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:14"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:14","type":""}],"src":"4153:141:14"},{"body":{"nodeType":"YulBlock","src":"4344:49:14","statements":[{"nodeType":"YulAssignment","src":"4354:33:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:14","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:14"},"nodeType":"YulFunctionCall","src":"4364:23:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:14"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:14","type":""}],"src":"4300:93:14"},{"body":{"nodeType":"YulBlock","src":"4452:54:14","statements":[{"nodeType":"YulAssignment","src":"4462:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:14"},"nodeType":"YulFunctionCall","src":"4483:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:14"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:14","type":""}],"src":"4399:107:14"},{"body":{"nodeType":"YulBlock","src":"4588:317:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:14","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:14"},"nodeType":"YulFunctionCall","src":"4615:18:14"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:14"},"nodeType":"YulFunctionCall","src":"4654:97:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:14","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:14"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:14"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:14"},"nodeType":"YulFunctionCall","src":"4772:39:14"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:14"}]},{"nodeType":"YulAssignment","src":"4820:30:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:14"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:14"},"nodeType":"YulFunctionCall","src":"4840:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:14"},"nodeType":"YulFunctionCall","src":"4829:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:14"}]},{"nodeType":"YulAssignment","src":"4859:40:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:14"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:14"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:14"},"nodeType":"YulFunctionCall","src":"4879:19:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:14"},"nodeType":"YulFunctionCall","src":"4869:30:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:14"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:14","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:14","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:14","type":""}],"src":"4512:393:14"},{"body":{"nodeType":"YulBlock","src":"4956:32:14","statements":[{"nodeType":"YulAssignment","src":"4966:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:14","type":""}],"src":"4911:77:14"},{"body":{"nodeType":"YulBlock","src":"5026:28:14","statements":[{"nodeType":"YulAssignment","src":"5036:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:14","type":""}],"src":"4994:60:14"},{"body":{"nodeType":"YulBlock","src":"5120:82:14","statements":[{"nodeType":"YulAssignment","src":"5130:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:14"},"nodeType":"YulFunctionCall","src":"5170:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:14"},"nodeType":"YulFunctionCall","src":"5161:34:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:14"},"nodeType":"YulFunctionCall","src":"5143:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:14","type":""}],"src":"5060:142:14"},{"body":{"nodeType":"YulBlock","src":"5255:28:14","statements":[{"nodeType":"YulAssignment","src":"5265:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:14"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:14","type":""}],"src":"5208:75:14"},{"body":{"nodeType":"YulBlock","src":"5365:193:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:14","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:14"},"nodeType":"YulFunctionCall","src":"5399:39:14"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:14"},"nodeType":"YulFunctionCall","src":"5488:11:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:14"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:14"},"nodeType":"YulFunctionCall","src":"5509:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:14"},"nodeType":"YulFunctionCall","src":"5460:91:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:14"},"nodeType":"YulFunctionCall","src":"5447:105:14"},"nodeType":"YulExpressionStatement","src":"5447:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:14","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:14","type":""}],"src":"5289:269:14"},{"body":{"nodeType":"YulBlock","src":"5613:24:14","statements":[{"nodeType":"YulAssignment","src":"5623:8:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:14","type":""}],"src":"5564:73:14"},{"body":{"nodeType":"YulBlock","src":"5696:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:14"},"nodeType":"YulFunctionCall","src":"5720:32:14"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:14"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:14"},"nodeType":"YulFunctionCall","src":"5761:65:14"},"nodeType":"YulExpressionStatement","src":"5761:65:14"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:14","type":""}],"src":"5643:189:14"},{"body":{"nodeType":"YulBlock","src":"5888:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:14"},"nodeType":"YulFunctionCall","src":"5969:39:14"},"nodeType":"YulExpressionStatement","src":"5969:39:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:14"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:14"},"nodeType":"YulFunctionCall","src":"5905:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:14","statements":[{"nodeType":"YulAssignment","src":"5922:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:14"},"nodeType":"YulFunctionCall","src":"5931:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:14","statements":[]},"src":"5898:120:14"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:14","type":""}],"src":"5838:186:14"},{"body":{"nodeType":"YulBlock","src":"6109:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:14"},"nodeType":"YulFunctionCall","src":"6165:38:14"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:14","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:14"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:14"},"nodeType":"YulFunctionCall","src":"6249:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:14"},"nodeType":"YulFunctionCall","src":"6235:44:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:14","statements":[{"nodeType":"YulAssignment","src":"6438:23:14","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:14"},"nodeType":"YulFunctionCall","src":"6417:18:14"},"nodeType":"YulIf","src":"6414:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:14"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:14"},"nodeType":"YulFunctionCall","src":"6532:22:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:14"},"nodeType":"YulFunctionCall","src":"6518:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:14"},"nodeType":"YulFunctionCall","src":"6476:80:14"},"nodeType":"YulExpressionStatement","src":"6476:80:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:14"},"nodeType":"YulFunctionCall","src":"6123:11:14"},"nodeType":"YulIf","src":"6120:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:14","type":""}],"src":"6030:543:14"},{"body":{"nodeType":"YulBlock","src":"6642:54:14","statements":[{"nodeType":"YulAssignment","src":"6652:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:14"},"nodeType":"YulFunctionCall","src":"6673:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:14","type":""}],"src":"6579:117:14"},{"body":{"nodeType":"YulBlock","src":"6753:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:14","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:14"},"nodeType":"YulFunctionCall","src":"6808:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:14"},"nodeType":"YulFunctionCall","src":"6823:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:14"},"nodeType":"YulFunctionCall","src":"6779:51:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:14"},"nodeType":"YulFunctionCall","src":"6775:56:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:14","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:14"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:14"},"nodeType":"YulFunctionCall","src":"6850:15:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:14"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:14","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:14","type":""}],"src":"6702:169:14"},{"body":{"nodeType":"YulBlock","src":"6957:214:14","statements":[{"nodeType":"YulAssignment","src":"7090:37:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:14"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:14"},"nodeType":"YulFunctionCall","src":"7098:29:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:14"}]},{"nodeType":"YulAssignment","src":"7136:29:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:14","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:14"},"nodeType":"YulFunctionCall","src":"7153:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:14"},"nodeType":"YulFunctionCall","src":"7144:21:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:14","type":""}],"src":"6876:295:14"},{"body":{"nodeType":"YulBlock","src":"7268:1303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:14"},"nodeType":"YulFunctionCall","src":"7293:37:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:14"},"nodeType":"YulFunctionCall","src":"7417:18:14"},"nodeType":"YulExpressionStatement","src":"7417:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:14"},"nodeType":"YulFunctionCall","src":"7384:30:14"},"nodeType":"YulIf","src":"7381:56:14"},{"nodeType":"YulVariableDeclaration","src":"7447:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:14"},"nodeType":"YulFunctionCall","src":"7487:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:14"},"nodeType":"YulFunctionCall","src":"7461:38:14"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:14"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:14"},"nodeType":"YulFunctionCall","src":"7546:67:14"},"nodeType":"YulExpressionStatement","src":"7546:67:14"},{"nodeType":"YulVariableDeclaration","src":"7623:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:14","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:14"},"nodeType":"YulFunctionCall","src":"7756:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:14"},"nodeType":"YulFunctionCall","src":"7744:22:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:14"},"nodeType":"YulFunctionCall","src":"7794:37:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:14"},"nodeType":"YulFunctionCall","src":"7951:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:14"},"nodeType":"YulFunctionCall","src":"7945:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:14"},"nodeType":"YulFunctionCall","src":"7930:42:14"},"nodeType":"YulExpressionStatement","src":"7930:42:14"},{"nodeType":"YulAssignment","src":"7989:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:14"},"nodeType":"YulFunctionCall","src":"7999:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:14"}]},{"nodeType":"YulAssignment","src":"8030:31:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:14"},"nodeType":"YulFunctionCall","src":"8043:18:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:14"},"nodeType":"YulFunctionCall","src":"7875:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:14","statements":[{"nodeType":"YulAssignment","src":"7892:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:14"},"nodeType":"YulFunctionCall","src":"7897:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:14","statements":[]},"src":"7867:208:14"},{"body":{"nodeType":"YulBlock","src":"8111:156:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:14"},"nodeType":"YulFunctionCall","src":"8152:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:14"},"nodeType":"YulFunctionCall","src":"8146:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:14"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:14"},"nodeType":"YulFunctionCall","src":"8234:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:14"},"nodeType":"YulFunctionCall","src":"8204:48:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:14"},"nodeType":"YulFunctionCall","src":"8189:64:14"},"nodeType":"YulExpressionStatement","src":"8189:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:14"},"nodeType":"YulFunctionCall","src":"8091:19:14"},"nodeType":"YulIf","src":"8088:179:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:14"},"nodeType":"YulFunctionCall","src":"8297:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:14"},"nodeType":"YulFunctionCall","src":"8293:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:14"},"nodeType":"YulFunctionCall","src":"8280:36:14"},"nodeType":"YulExpressionStatement","src":"8280:36:14"}]},"nodeType":"YulCase","src":"7708:618:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:14","statements":[{"nodeType":"YulAssignment","src":"8412:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:14"},"nodeType":"YulFunctionCall","src":"8427:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:14"},"nodeType":"YulFunctionCall","src":"8421:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:14"},"nodeType":"YulIf","src":"8384:77:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:14"},"nodeType":"YulFunctionCall","src":"8487:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:14"},"nodeType":"YulFunctionCall","src":"8474:81:14"},"nodeType":"YulExpressionStatement","src":"8474:81:14"}]},"nodeType":"YulCase","src":"8335:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:14"},"nodeType":"YulFunctionCall","src":"7685:14:14"},"nodeType":"YulSwitch","src":"7678:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:14","type":""}],"src":"7176:1395:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200195338038062001953833981810160405281019062000037919062000212565b8160039081620000489190620004e2565b5080600490816200005a9190620004e2565b506012600560006101000a81548160ff021916908360ff1602179055505050620005c9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e8826200009d565b810181811067ffffffffffffffff821117156200010a5762000109620000ae565b5b80604052505050565b60006200011f6200007f565b90506200012d8282620000dd565b919050565b600067ffffffffffffffff82111562000150576200014f620000ae565b5b6200015b826200009d565b9050602081019050919050565b60005b83811015620001885780820151818401526020810190506200016b565b60008484015250505050565b6000620001ab620001a58462000132565b62000113565b905082815260208101848484011115620001ca57620001c962000098565b5b620001d784828562000168565b509392505050565b600082601f830112620001f757620001f662000093565b5b81516200020984826020860162000194565b91505092915050565b600080604083850312156200022c576200022b62000089565b5b600083015167ffffffffffffffff8111156200024d576200024c6200008e565b5b6200025b85828601620001df565b925050602083015167ffffffffffffffff8111156200027f576200027e6200008e565b5b6200028d85828601620001df565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ea57607f821691505b6020821081036200030057620002ff620002a2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200036a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200032b565b6200037686836200032b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003c3620003bd620003b7846200038e565b62000398565b6200038e565b9050919050565b6000819050919050565b620003df83620003a2565b620003f7620003ee82620003ca565b84845462000338565b825550505050565b600090565b6200040e620003ff565b6200041b818484620003d4565b505050565b5b8181101562000443576200043760008262000404565b60018101905062000421565b5050565b601f82111562000492576200045c8162000306565b62000467846200031b565b8101602085101562000477578190505b6200048f62000486856200031b565b83018262000420565b50505b505050565b600082821c905092915050565b6000620004b76000198460080262000497565b1980831691505092915050565b6000620004d28383620004a4565b9150826002028217905092915050565b620004ed8262000297565b67ffffffffffffffff811115620005095762000508620000ae565b5b620005158254620002d1565b6200052282828562000447565b600060209050601f8311600181146200055a576000841562000545578287015190505b620005518582620004c4565b865550620005c1565b601f1984166200056a8662000306565b60005b8281101562000594578489015182556001820191506020850194506020810190506200056d565b86831015620005b45784890151620005b0601f891682620004a4565b8355505b6001600288020188555050505b505050505050565b61137a80620005d96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610cd4565b60405180910390f35b6100e660048036038101906100e19190610d8f565b610308565b6040516100f39190610dea565b60405180910390f35b610104610326565b6040516101119190610e14565b60405180910390f35b610134600480360381019061012f9190610e2f565b610330565b6040516101419190610dea565b60405180910390f35b610152610409565b60405161015f9190610e9e565b60405180910390f35b610182600480360381019061017d9190610d8f565b610420565b60405161018f9190610dea565b60405180910390f35b6101b260048036038101906101ad9190610eb9565b6104d3565b6040516101bf9190610e14565b60405180910390f35b6101d061051b565b6040516101dd9190610cd4565b60405180910390f35b61020060048036038101906101fb9190610d8f565b6105ad565b60405161020d9190610dea565b60405180910390f35b610230600480360381019061022b9190610d8f565b61067a565b60405161023d9190610dea565b60405180910390f35b610260600480360381019061025b9190610ee6565b610698565b60405161026d9190610e14565b60405180910390f35b60606003805461028590610f55565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f55565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c61031561071f565b8484610727565b6001905092915050565b6000600254905090565b600061033d8484846108f0565b6103fe8461034961071f565b6103f9856040518060600160405280602881526020016112f860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af61071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b610727565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006104c961042d61071f565b846104c4856001600061043e61071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be190919063ffffffff16565b610727565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461052a90610f55565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f55565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b60006106706105ba61071f565b8461066b8560405180606001604052806025815260200161132060259139600160006105e461071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b610727565b6001905092915050565b600061068e61068761071f565b84846108f0565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078d90610ff8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc9061108a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e39190610e14565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361095f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109569061111c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c5906111ae565b60405180910390fd5b6109d9838383610c3f565b610a44816040518060600160405280602681526020016112d2602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ad7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b769190610e14565b60405180910390a3505050565b6000838311158290610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc29190610cd4565b60405180910390fd5b508284610bd891906111fd565b90509392505050565b6000808284610bf09190611231565b905083811015610c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2c906112b1565b60405180910390fd5b8091505092915050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c7e578082015181840152602081019050610c63565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ca682610c44565b610cb08185610c4f565b9350610cc0818560208601610c60565b610cc981610c8a565b840191505092915050565b60006020820190508181036000830152610cee8184610c9b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2682610cfb565b9050919050565b610d3681610d1b565b8114610d4157600080fd5b50565b600081359050610d5381610d2d565b92915050565b6000819050919050565b610d6c81610d59565b8114610d7757600080fd5b50565b600081359050610d8981610d63565b92915050565b60008060408385031215610da657610da5610cf6565b5b6000610db485828601610d44565b9250506020610dc585828601610d7a565b9150509250929050565b60008115159050919050565b610de481610dcf565b82525050565b6000602082019050610dff6000830184610ddb565b92915050565b610e0e81610d59565b82525050565b6000602082019050610e296000830184610e05565b92915050565b600080600060608486031215610e4857610e47610cf6565b5b6000610e5686828701610d44565b9350506020610e6786828701610d44565b9250506040610e7886828701610d7a565b9150509250925092565b600060ff82169050919050565b610e9881610e82565b82525050565b6000602082019050610eb36000830184610e8f565b92915050565b600060208284031215610ecf57610ece610cf6565b5b6000610edd84828501610d44565b91505092915050565b60008060408385031215610efd57610efc610cf6565b5b6000610f0b85828601610d44565b9250506020610f1c85828601610d44565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f6d57607f821691505b602082108103610f8057610f7f610f26565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610fe2602483610c4f565b9150610fed82610f86565b604082019050919050565b6000602082019050818103600083015261101181610fd5565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611074602283610c4f565b915061107f82611018565b604082019050919050565b600060208201905081810360008301526110a381611067565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611106602583610c4f565b9150611111826110aa565b604082019050919050565b60006020820190508181036000830152611135816110f9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611198602383610c4f565b91506111a38261113c565b604082019050919050565b600060208201905081810360008301526111c78161118b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120882610d59565b915061121383610d59565b925082820390508181111561122b5761122a6111ce565b5b92915050565b600061123c82610d59565b915061124783610d59565b925082820190508082111561125f5761125e6111ce565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b600061129b601b83610c4f565b91506112a682611265565b602082019050919050565b600060208201905081810360008301526112ca8161128e565b905091905056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200fe083d2e39474b8e3d8a3f0f4d08d080dd35f1f02d01cd5d0ba2628c0d52b4b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1953 CODESIZE SUB DUP1 PUSH3 0x1953 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x212 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4E2 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x5C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE8 DUP3 PUSH3 0x9D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x10A JUMPI PUSH3 0x109 PUSH3 0xAE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11F PUSH3 0x7F JUMP JUMPDEST SWAP1 POP PUSH3 0x12D DUP3 DUP3 PUSH3 0xDD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x150 JUMPI PUSH3 0x14F PUSH3 0xAE JUMP JUMPDEST JUMPDEST PUSH3 0x15B DUP3 PUSH3 0x9D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x188 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AB PUSH3 0x1A5 DUP5 PUSH3 0x132 JUMP JUMPDEST PUSH3 0x113 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1CA JUMPI PUSH3 0x1C9 PUSH3 0x98 JUMP JUMPDEST JUMPDEST PUSH3 0x1D7 DUP5 DUP3 DUP6 PUSH3 0x168 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1F7 JUMPI PUSH3 0x1F6 PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x209 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x194 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x22C JUMPI PUSH3 0x22B PUSH3 0x89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x25B DUP6 DUP3 DUP7 ADD PUSH3 0x1DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x27F JUMPI PUSH3 0x27E PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x28D DUP6 DUP3 DUP7 ADD PUSH3 0x1DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x300 JUMPI PUSH3 0x2FF PUSH3 0x2A2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x36A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x32B JUMP JUMPDEST PUSH3 0x376 DUP7 DUP4 PUSH3 0x32B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C3 PUSH3 0x3BD PUSH3 0x3B7 DUP5 PUSH3 0x38E JUMP JUMPDEST PUSH3 0x398 JUMP JUMPDEST PUSH3 0x38E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DF DUP4 PUSH3 0x3A2 JUMP JUMPDEST PUSH3 0x3F7 PUSH3 0x3EE DUP3 PUSH3 0x3CA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x338 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x40E PUSH3 0x3FF JUMP JUMPDEST PUSH3 0x41B DUP2 DUP5 DUP5 PUSH3 0x3D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x443 JUMPI PUSH3 0x437 PUSH1 0x0 DUP3 PUSH3 0x404 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x421 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x492 JUMPI PUSH3 0x45C DUP2 PUSH3 0x306 JUMP JUMPDEST PUSH3 0x467 DUP5 PUSH3 0x31B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x477 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x48F PUSH3 0x486 DUP6 PUSH3 0x31B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x420 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x497 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D2 DUP4 DUP4 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4ED DUP3 PUSH3 0x297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x509 JUMPI PUSH3 0x508 PUSH3 0xAE JUMP JUMPDEST JUMPDEST PUSH3 0x515 DUP3 SLOAD PUSH3 0x2D1 JUMP JUMPDEST PUSH3 0x522 DUP3 DUP3 DUP6 PUSH3 0x447 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x55A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x545 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x551 DUP6 DUP3 PUSH3 0x4C4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5C1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x56A DUP7 PUSH3 0x306 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x594 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x56D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5B0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x137A DUP1 PUSH3 0x5D9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x71F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x3FE DUP5 PUSH2 0x349 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x3F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x3AF PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9 PUSH2 0x42D PUSH2 0x71F JUMP JUMPDEST DUP5 PUSH2 0x4C4 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x43E PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x578 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x586 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x5BA PUSH2 0x71F JUMP JUMPDEST DUP5 PUSH2 0x66B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1320 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68E PUSH2 0x687 PUSH2 0x71F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D9 DUP4 DUP4 DUP4 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAD7 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2C SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 DUP3 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0xCB0 DUP2 DUP6 PUSH2 0xC4F JUMP JUMPDEST SWAP4 POP PUSH2 0xCC0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xCC9 DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEE DUP2 DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP3 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD36 DUP2 PUSH2 0xD1B JUMP JUMPDEST DUP2 EQ PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD53 DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD59 JUMP JUMPDEST DUP2 EQ PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD89 DUP2 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB4 DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC5 DUP6 DUP3 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0E DUP2 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE48 JUMPI PUSH2 0xE47 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE56 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE67 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE78 DUP7 DUP3 DUP8 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0B DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF1C DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xF26 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH1 0x24 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xFED DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1011 DUP2 PUSH2 0xFD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1074 PUSH1 0x22 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x107F DUP3 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A3 DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1106 PUSH1 0x25 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1111 DUP3 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1135 DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 PUSH1 0x23 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11C7 DUP2 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP3 PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1213 DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122A PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C DUP3 PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH1 0x1B DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x12A6 DUP3 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CA DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212200FE0 DUP4 0xD2 0xE3 SWAP5 PUSH21 0xB8E3D8A3F0F4D08D080DD35F1F02D01CD5D0BA2628 0xC0 0xD5 0x2B 0x4B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1313:9474:4:-:0;;;1950:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2032:5;2024;:13;;;;;;:::i;:::-;;2057:7;2047;:17;;;;;;:::i;:::-;;2086:2;2074:9;;:14;;;;;;;;;;;;;;;;;;1950:145;;1313:9474;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1313:9474:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1276":{"entryPoint":1831,"id":1276,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1298":{"entryPoint":3135,"id":1298,"parameterSlots":3,"returnSlots":0},"@_msgSender_1962":{"entryPoint":1823,"id":1962,"parameterSlots":0,"returnSlots":1},"@_transfer_1120":{"entryPoint":2288,"id":1120,"parameterSlots":3,"returnSlots":0},"@add_623":{"entryPoint":3041,"id":623,"parameterSlots":2,"returnSlots":1},"@allowance_938":{"entryPoint":1688,"id":938,"parameterSlots":2,"returnSlots":1},"@approve_959":{"entryPoint":776,"id":959,"parameterSlots":2,"returnSlots":1},"@balanceOf_899":{"entryPoint":1235,"id":899,"parameterSlots":1,"returnSlots":1},"@decimals_875":{"entryPoint":1033,"id":875,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1054":{"entryPoint":1453,"id":1054,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1025":{"entryPoint":1056,"id":1025,"parameterSlots":2,"returnSlots":1},"@name_857":{"entryPoint":630,"id":857,"parameterSlots":0,"returnSlots":1},"@sub_747":{"entryPoint":2947,"id":747,"parameterSlots":3,"returnSlots":1},"@symbol_866":{"entryPoint":1307,"id":866,"parameterSlots":0,"returnSlots":1},"@totalSupply_885":{"entryPoint":806,"id":885,"parameterSlots":0,"returnSlots":1},"@transferFrom_997":{"entryPoint":816,"id":997,"parameterSlots":3,"returnSlots":1},"@transfer_920":{"entryPoint":1658,"id":920,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3814,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3631,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3471,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3547,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4199,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack":{"entryPoint":4750,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":4053,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4234,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4785,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4088,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3742,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3140,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4657,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4605,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3355,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3535,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3323,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3417,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3714,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3168,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3925,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4558,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3878,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3318,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3210,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4412,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":4120,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a":{"entryPoint":4709,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4266,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3974,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3373,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3427,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11842:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"208:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:14"},"nodeType":"YulFunctionCall","src":"218:19:14"},"nodeType":"YulExpressionStatement","src":"218:19:14"},{"nodeType":"YulAssignment","src":"246:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:14"},"nodeType":"YulFunctionCall","src":"261:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:14","type":""}],"src":"112:169:14"},{"body":{"nodeType":"YulBlock","src":"349:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:14"},"nodeType":"YulFunctionCall","src":"449:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:14"},"nodeType":"YulFunctionCall","src":"468:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:14"},"nodeType":"YulFunctionCall","src":"462:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:14"},"nodeType":"YulFunctionCall","src":"442:39:14"},"nodeType":"YulExpressionStatement","src":"442:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:14"},"nodeType":"YulFunctionCall","src":"386:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:14","statements":[{"nodeType":"YulAssignment","src":"402:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:14"},"nodeType":"YulFunctionCall","src":"407:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:14","statements":[]},"src":"378:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:14"},"nodeType":"YulFunctionCall","src":"507:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:14"},"nodeType":"YulFunctionCall","src":"500:27:14"},"nodeType":"YulExpressionStatement","src":"500:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:14","type":""}],"src":"287:246:14"},{"body":{"nodeType":"YulBlock","src":"587:54:14","statements":[{"nodeType":"YulAssignment","src":"597:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:14"},"nodeType":"YulFunctionCall","src":"627:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:14"},"nodeType":"YulFunctionCall","src":"607:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:14","type":""}],"src":"539:102:14"},{"body":{"nodeType":"YulBlock","src":"739:285:14","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:14"},"nodeType":"YulFunctionCall","src":"763:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:14","type":""}]},{"nodeType":"YulAssignment","src":"811:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:14"},"nodeType":"YulFunctionCall","src":"818:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:14"},"nodeType":"YulFunctionCall","src":"933:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:14"},"nodeType":"YulFunctionCall","src":"898:65:14"},"nodeType":"YulExpressionStatement","src":"898:65:14"},{"nodeType":"YulAssignment","src":"972:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:14"},"nodeType":"YulFunctionCall","src":"988:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:14"},"nodeType":"YulFunctionCall","src":"979:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:14","type":""}],"src":"647:377:14"},{"body":{"nodeType":"YulBlock","src":"1148:195:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:14"},"nodeType":"YulFunctionCall","src":"1201:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:14"},"nodeType":"YulFunctionCall","src":"1220:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:14"},"nodeType":"YulFunctionCall","src":"1194:47:14"},"nodeType":"YulExpressionStatement","src":"1194:47:14"},{"nodeType":"YulAssignment","src":"1250:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:14"},"nodeType":"YulFunctionCall","src":"1258:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:14","type":""}],"src":"1030:313:14"},{"body":{"nodeType":"YulBlock","src":"1389:35:14","statements":[{"nodeType":"YulAssignment","src":"1399:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:14"},"nodeType":"YulFunctionCall","src":"1409:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:14","type":""}],"src":"1349:75:14"},{"body":{"nodeType":"YulBlock","src":"1519:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:14"},"nodeType":"YulFunctionCall","src":"1529:12:14"},"nodeType":"YulExpressionStatement","src":"1529:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:14"},{"body":{"nodeType":"YulBlock","src":"1642:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:14"},"nodeType":"YulFunctionCall","src":"1652:12:14"},"nodeType":"YulExpressionStatement","src":"1652:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:14"},{"body":{"nodeType":"YulBlock","src":"1721:81:14","statements":[{"nodeType":"YulAssignment","src":"1731:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1676:126:14"},{"body":{"nodeType":"YulBlock","src":"1853:51:14","statements":[{"nodeType":"YulAssignment","src":"1863:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:14"},"nodeType":"YulFunctionCall","src":"1874:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:14","type":""}],"src":"1808:96:14"},{"body":{"nodeType":"YulBlock","src":"1953:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:14"},"nodeType":"YulFunctionCall","src":"1983:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:14"},"nodeType":"YulFunctionCall","src":"1973:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:14"},"nodeType":"YulFunctionCall","src":"1966:43:14"},"nodeType":"YulIf","src":"1963:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:14","type":""}],"src":"1910:122:14"},{"body":{"nodeType":"YulBlock","src":"2090:87:14","statements":[{"nodeType":"YulAssignment","src":"2100:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:14"},"nodeType":"YulFunctionCall","src":"2109:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:14"},"nodeType":"YulFunctionCall","src":"2138:33:14"},"nodeType":"YulExpressionStatement","src":"2138:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:14","type":""}],"src":"2038:139:14"},{"body":{"nodeType":"YulBlock","src":"2228:32:14","statements":[{"nodeType":"YulAssignment","src":"2238:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:14","type":""}],"src":"2183:77:14"},{"body":{"nodeType":"YulBlock","src":"2309:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:14"},"nodeType":"YulFunctionCall","src":"2368:12:14"},"nodeType":"YulExpressionStatement","src":"2368:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:14"},"nodeType":"YulFunctionCall","src":"2339:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:14"},"nodeType":"YulFunctionCall","src":"2329:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:14"},"nodeType":"YulFunctionCall","src":"2322:43:14"},"nodeType":"YulIf","src":"2319:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:14","type":""}],"src":"2266:122:14"},{"body":{"nodeType":"YulBlock","src":"2446:87:14","statements":[{"nodeType":"YulAssignment","src":"2456:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:14"},"nodeType":"YulFunctionCall","src":"2465:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:14"},"nodeType":"YulFunctionCall","src":"2494:33:14"},"nodeType":"YulExpressionStatement","src":"2494:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:14","type":""}],"src":"2394:139:14"},{"body":{"nodeType":"YulBlock","src":"2622:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:14"},"nodeType":"YulFunctionCall","src":"2670:79:14"},"nodeType":"YulExpressionStatement","src":"2670:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:14"},"nodeType":"YulFunctionCall","src":"2639:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:14"},"nodeType":"YulFunctionCall","src":"2635:32:14"},"nodeType":"YulIf","src":"2632:119:14"},{"nodeType":"YulBlock","src":"2761:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:14"},"nodeType":"YulFunctionCall","src":"2836:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:14"},"nodeType":"YulFunctionCall","src":"2815:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:14"}]}]},{"nodeType":"YulBlock","src":"2888:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:14"},"nodeType":"YulFunctionCall","src":"2964:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:14"},"nodeType":"YulFunctionCall","src":"2943:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:14","type":""}],"src":"2539:474:14"},{"body":{"nodeType":"YulBlock","src":"3061:48:14","statements":[{"nodeType":"YulAssignment","src":"3071:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:14"},"nodeType":"YulFunctionCall","src":"3089:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:14"},"nodeType":"YulFunctionCall","src":"3082:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:14","type":""}],"src":"3019:90:14"},{"body":{"nodeType":"YulBlock","src":"3174:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:14"},"nodeType":"YulFunctionCall","src":"3196:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:14"},"nodeType":"YulFunctionCall","src":"3184:34:14"},"nodeType":"YulExpressionStatement","src":"3184:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:14","type":""}],"src":"3115:109:14"},{"body":{"nodeType":"YulBlock","src":"3322:118:14","statements":[{"nodeType":"YulAssignment","src":"3332:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:14"},"nodeType":"YulFunctionCall","src":"3340:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:14"},"nodeType":"YulFunctionCall","src":"3415:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:14"},"nodeType":"YulFunctionCall","src":"3368:65:14"},"nodeType":"YulExpressionStatement","src":"3368:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:14","type":""}],"src":"3230:210:14"},{"body":{"nodeType":"YulBlock","src":"3511:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:14"},"nodeType":"YulFunctionCall","src":"3533:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:14"},"nodeType":"YulFunctionCall","src":"3521:37:14"},"nodeType":"YulExpressionStatement","src":"3521:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:14","type":""}],"src":"3446:118:14"},{"body":{"nodeType":"YulBlock","src":"3668:124:14","statements":[{"nodeType":"YulAssignment","src":"3678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:14"},"nodeType":"YulFunctionCall","src":"3686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:14"},"nodeType":"YulFunctionCall","src":"3767:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:14"},"nodeType":"YulFunctionCall","src":"3714:71:14"},"nodeType":"YulExpressionStatement","src":"3714:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:14","type":""}],"src":"3570:222:14"},{"body":{"nodeType":"YulBlock","src":"3898:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:14"},"nodeType":"YulFunctionCall","src":"3946:79:14"},"nodeType":"YulExpressionStatement","src":"3946:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:14"},"nodeType":"YulFunctionCall","src":"3915:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:14"},"nodeType":"YulFunctionCall","src":"3911:32:14"},"nodeType":"YulIf","src":"3908:119:14"},{"nodeType":"YulBlock","src":"4037:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:14"},"nodeType":"YulFunctionCall","src":"4112:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:14"},"nodeType":"YulFunctionCall","src":"4091:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:14"}]}]},{"nodeType":"YulBlock","src":"4164:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:14"},"nodeType":"YulFunctionCall","src":"4240:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:14"},"nodeType":"YulFunctionCall","src":"4219:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:14"}]}]},{"nodeType":"YulBlock","src":"4292:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:14"},"nodeType":"YulFunctionCall","src":"4347:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:14","type":""}],"src":"3798:619:14"},{"body":{"nodeType":"YulBlock","src":"4466:43:14","statements":[{"nodeType":"YulAssignment","src":"4476:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:14"},"nodeType":"YulFunctionCall","src":"4487:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:14","type":""}],"src":"4423:86:14"},{"body":{"nodeType":"YulBlock","src":"4576:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:14"},"nodeType":"YulFunctionCall","src":"4598:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:14"},"nodeType":"YulFunctionCall","src":"4586:35:14"},"nodeType":"YulExpressionStatement","src":"4586:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:14","type":""}],"src":"4515:112:14"},{"body":{"nodeType":"YulBlock","src":"4727:120:14","statements":[{"nodeType":"YulAssignment","src":"4737:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:14"},"nodeType":"YulFunctionCall","src":"4745:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:14"},"nodeType":"YulFunctionCall","src":"4822:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:14"},"nodeType":"YulFunctionCall","src":"4773:67:14"},"nodeType":"YulExpressionStatement","src":"4773:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:14","type":""}],"src":"4633:214:14"},{"body":{"nodeType":"YulBlock","src":"4919:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:14"},"nodeType":"YulFunctionCall","src":"4967:79:14"},"nodeType":"YulExpressionStatement","src":"4967:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:14"},"nodeType":"YulFunctionCall","src":"4936:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:14"},"nodeType":"YulFunctionCall","src":"4932:32:14"},"nodeType":"YulIf","src":"4929:119:14"},{"nodeType":"YulBlock","src":"5058:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:14"},"nodeType":"YulFunctionCall","src":"5133:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:14"},"nodeType":"YulFunctionCall","src":"5112:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:14","type":""}],"src":"4853:329:14"},{"body":{"nodeType":"YulBlock","src":"5271:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:14"},"nodeType":"YulFunctionCall","src":"5319:79:14"},"nodeType":"YulExpressionStatement","src":"5319:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:14"},"nodeType":"YulFunctionCall","src":"5288:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:14"},"nodeType":"YulFunctionCall","src":"5284:32:14"},"nodeType":"YulIf","src":"5281:119:14"},{"nodeType":"YulBlock","src":"5410:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:14"},"nodeType":"YulFunctionCall","src":"5485:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:14"},"nodeType":"YulFunctionCall","src":"5464:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:14"}]}]},{"nodeType":"YulBlock","src":"5537:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:14"},"nodeType":"YulFunctionCall","src":"5613:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:14"},"nodeType":"YulFunctionCall","src":"5592:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:14","type":""}],"src":"5188:474:14"},{"body":{"nodeType":"YulBlock","src":"5696:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:14"},"nodeType":"YulFunctionCall","src":"5706:88:14"},"nodeType":"YulExpressionStatement","src":"5706:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:14"},"nodeType":"YulFunctionCall","src":"5803:15:14"},"nodeType":"YulExpressionStatement","src":"5803:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:14"},"nodeType":"YulFunctionCall","src":"5827:15:14"},"nodeType":"YulExpressionStatement","src":"5827:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:14"},{"body":{"nodeType":"YulBlock","src":"5905:269:14","statements":[{"nodeType":"YulAssignment","src":"5915:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:14"},"nodeType":"YulFunctionCall","src":"5925:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:14"},"nodeType":"YulFunctionCall","src":"5972:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:14","statements":[{"nodeType":"YulAssignment","src":"6037:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:14"},"nodeType":"YulFunctionCall","src":"6047:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:14"},"nodeType":"YulFunctionCall","src":"5996:26:14"},"nodeType":"YulIf","src":"5993:81:14"},{"body":{"nodeType":"YulBlock","src":"6126:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:14"},"nodeType":"YulFunctionCall","src":"6140:18:14"},"nodeType":"YulExpressionStatement","src":"6140:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:14"},"nodeType":"YulFunctionCall","src":"6110:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:14"},"nodeType":"YulFunctionCall","src":"6087:38:14"},"nodeType":"YulIf","src":"6084:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:14","type":""}],"src":"5854:320:14"},{"body":{"nodeType":"YulBlock","src":"6286:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6308:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6316:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6304:3:14"},"nodeType":"YulFunctionCall","src":"6304:14:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"6320:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6297:6:14"},"nodeType":"YulFunctionCall","src":"6297:58:14"},"nodeType":"YulExpressionStatement","src":"6297:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6376:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6384:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:14"},"nodeType":"YulFunctionCall","src":"6372:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"6389:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6365:6:14"},"nodeType":"YulFunctionCall","src":"6365:31:14"},"nodeType":"YulExpressionStatement","src":"6365:31:14"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6278:6:14","type":""}],"src":"6180:223:14"},{"body":{"nodeType":"YulBlock","src":"6555:220:14","statements":[{"nodeType":"YulAssignment","src":"6565:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6631:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6636:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6572:58:14"},"nodeType":"YulFunctionCall","src":"6572:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6565:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6737:3:14"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"6648:88:14"},"nodeType":"YulFunctionCall","src":"6648:93:14"},"nodeType":"YulExpressionStatement","src":"6648:93:14"},{"nodeType":"YulAssignment","src":"6750:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6766:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:14"},"nodeType":"YulFunctionCall","src":"6757:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6750:3:14"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6543:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6551:3:14","type":""}],"src":"6409:366:14"},{"body":{"nodeType":"YulBlock","src":"6952:248:14","statements":[{"nodeType":"YulAssignment","src":"6962:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6974:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6985:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6970:3:14"},"nodeType":"YulFunctionCall","src":"6970:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6962:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7009:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7020:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7005:3:14"},"nodeType":"YulFunctionCall","src":"7005:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7028:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7034:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7024:3:14"},"nodeType":"YulFunctionCall","src":"7024:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6998:6:14"},"nodeType":"YulFunctionCall","src":"6998:47:14"},"nodeType":"YulExpressionStatement","src":"6998:47:14"},{"nodeType":"YulAssignment","src":"7054:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7188:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7062:124:14"},"nodeType":"YulFunctionCall","src":"7062:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7054:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6932:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6947:4:14","type":""}],"src":"6781:419:14"},{"body":{"nodeType":"YulBlock","src":"7312:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7334:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7342:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7330:3:14"},"nodeType":"YulFunctionCall","src":"7330:14:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"7346:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7323:6:14"},"nodeType":"YulFunctionCall","src":"7323:58:14"},"nodeType":"YulExpressionStatement","src":"7323:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7402:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7410:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:14"},"nodeType":"YulFunctionCall","src":"7398:15:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"7415:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7391:6:14"},"nodeType":"YulFunctionCall","src":"7391:29:14"},"nodeType":"YulExpressionStatement","src":"7391:29:14"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7304:6:14","type":""}],"src":"7206:221:14"},{"body":{"nodeType":"YulBlock","src":"7579:220:14","statements":[{"nodeType":"YulAssignment","src":"7589:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7655:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7660:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7596:58:14"},"nodeType":"YulFunctionCall","src":"7596:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7589:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7761:3:14"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"7672:88:14"},"nodeType":"YulFunctionCall","src":"7672:93:14"},"nodeType":"YulExpressionStatement","src":"7672:93:14"},{"nodeType":"YulAssignment","src":"7774:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7785:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7790:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7781:3:14"},"nodeType":"YulFunctionCall","src":"7781:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7774:3:14"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7567:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7575:3:14","type":""}],"src":"7433:366:14"},{"body":{"nodeType":"YulBlock","src":"7976:248:14","statements":[{"nodeType":"YulAssignment","src":"7986:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7998:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8009:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7994:3:14"},"nodeType":"YulFunctionCall","src":"7994:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7986:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8033:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8044:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:14"},"nodeType":"YulFunctionCall","src":"8029:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8052:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8058:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8048:3:14"},"nodeType":"YulFunctionCall","src":"8048:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8022:6:14"},"nodeType":"YulFunctionCall","src":"8022:47:14"},"nodeType":"YulExpressionStatement","src":"8022:47:14"},{"nodeType":"YulAssignment","src":"8078:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8212:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8086:124:14"},"nodeType":"YulFunctionCall","src":"8086:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8078:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7956:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7971:4:14","type":""}],"src":"7805:419:14"},{"body":{"nodeType":"YulBlock","src":"8336:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8358:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8366:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8354:3:14"},"nodeType":"YulFunctionCall","src":"8354:14:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"8370:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8347:6:14"},"nodeType":"YulFunctionCall","src":"8347:58:14"},"nodeType":"YulExpressionStatement","src":"8347:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8426:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8434:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8422:3:14"},"nodeType":"YulFunctionCall","src":"8422:15:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"8439:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8415:6:14"},"nodeType":"YulFunctionCall","src":"8415:32:14"},"nodeType":"YulExpressionStatement","src":"8415:32:14"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8328:6:14","type":""}],"src":"8230:224:14"},{"body":{"nodeType":"YulBlock","src":"8606:220:14","statements":[{"nodeType":"YulAssignment","src":"8616:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8682:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8687:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8623:58:14"},"nodeType":"YulFunctionCall","src":"8623:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8616:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8788:3:14"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"8699:88:14"},"nodeType":"YulFunctionCall","src":"8699:93:14"},"nodeType":"YulExpressionStatement","src":"8699:93:14"},{"nodeType":"YulAssignment","src":"8801:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8812:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8817:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:14"},"nodeType":"YulFunctionCall","src":"8808:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8801:3:14"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8594:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8602:3:14","type":""}],"src":"8460:366:14"},{"body":{"nodeType":"YulBlock","src":"9003:248:14","statements":[{"nodeType":"YulAssignment","src":"9013:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9025:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9036:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9021:3:14"},"nodeType":"YulFunctionCall","src":"9021:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9013:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9060:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9071:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9056:3:14"},"nodeType":"YulFunctionCall","src":"9056:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9079:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9085:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9075:3:14"},"nodeType":"YulFunctionCall","src":"9075:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9049:6:14"},"nodeType":"YulFunctionCall","src":"9049:47:14"},"nodeType":"YulExpressionStatement","src":"9049:47:14"},{"nodeType":"YulAssignment","src":"9105:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9239:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9113:124:14"},"nodeType":"YulFunctionCall","src":"9113:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9105:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8983:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8998:4:14","type":""}],"src":"8832:419:14"},{"body":{"nodeType":"YulBlock","src":"9363:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9385:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9393:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9381:3:14"},"nodeType":"YulFunctionCall","src":"9381:14:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"9397:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9374:6:14"},"nodeType":"YulFunctionCall","src":"9374:58:14"},"nodeType":"YulExpressionStatement","src":"9374:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9453:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9461:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9449:3:14"},"nodeType":"YulFunctionCall","src":"9449:15:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"9466:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9442:6:14"},"nodeType":"YulFunctionCall","src":"9442:30:14"},"nodeType":"YulExpressionStatement","src":"9442:30:14"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9355:6:14","type":""}],"src":"9257:222:14"},{"body":{"nodeType":"YulBlock","src":"9631:220:14","statements":[{"nodeType":"YulAssignment","src":"9641:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9707:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9712:2:14","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9648:58:14"},"nodeType":"YulFunctionCall","src":"9648:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9641:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9813:3:14"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"9724:88:14"},"nodeType":"YulFunctionCall","src":"9724:93:14"},"nodeType":"YulExpressionStatement","src":"9724:93:14"},{"nodeType":"YulAssignment","src":"9826:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9837:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9842:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9833:3:14"},"nodeType":"YulFunctionCall","src":"9833:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9826:3:14"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9619:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9627:3:14","type":""}],"src":"9485:366:14"},{"body":{"nodeType":"YulBlock","src":"10028:248:14","statements":[{"nodeType":"YulAssignment","src":"10038:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10050:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10061:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10046:3:14"},"nodeType":"YulFunctionCall","src":"10046:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10038:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10085:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10096:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10081:3:14"},"nodeType":"YulFunctionCall","src":"10081:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10104:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10110:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10100:3:14"},"nodeType":"YulFunctionCall","src":"10100:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10074:6:14"},"nodeType":"YulFunctionCall","src":"10074:47:14"},"nodeType":"YulExpressionStatement","src":"10074:47:14"},{"nodeType":"YulAssignment","src":"10130:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10264:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10138:124:14"},"nodeType":"YulFunctionCall","src":"10138:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10130:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10008:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10023:4:14","type":""}],"src":"9857:419:14"},{"body":{"nodeType":"YulBlock","src":"10310:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10327:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10330:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10320:6:14"},"nodeType":"YulFunctionCall","src":"10320:88:14"},"nodeType":"YulExpressionStatement","src":"10320:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10424:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10427:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10417:6:14"},"nodeType":"YulFunctionCall","src":"10417:15:14"},"nodeType":"YulExpressionStatement","src":"10417:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10448:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10451:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10441:6:14"},"nodeType":"YulFunctionCall","src":"10441:15:14"},"nodeType":"YulExpressionStatement","src":"10441:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10282:180:14"},{"body":{"nodeType":"YulBlock","src":"10513:149:14","statements":[{"nodeType":"YulAssignment","src":"10523:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10546:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10528:17:14"},"nodeType":"YulFunctionCall","src":"10528:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10523:1:14"}]},{"nodeType":"YulAssignment","src":"10557:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10580:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10562:17:14"},"nodeType":"YulFunctionCall","src":"10562:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10557:1:14"}]},{"nodeType":"YulAssignment","src":"10591:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10603:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"10606:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10599:3:14"},"nodeType":"YulFunctionCall","src":"10599:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10591:4:14"}]},{"body":{"nodeType":"YulBlock","src":"10633:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10635:16:14"},"nodeType":"YulFunctionCall","src":"10635:18:14"},"nodeType":"YulExpressionStatement","src":"10635:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10624:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"10630:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10621:2:14"},"nodeType":"YulFunctionCall","src":"10621:11:14"},"nodeType":"YulIf","src":"10618:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10499:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"10502:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10508:4:14","type":""}],"src":"10468:194:14"},{"body":{"nodeType":"YulBlock","src":"10712:147:14","statements":[{"nodeType":"YulAssignment","src":"10722:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10745:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10727:17:14"},"nodeType":"YulFunctionCall","src":"10727:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10722:1:14"}]},{"nodeType":"YulAssignment","src":"10756:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10779:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10761:17:14"},"nodeType":"YulFunctionCall","src":"10761:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10756:1:14"}]},{"nodeType":"YulAssignment","src":"10790:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10801:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"10804:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10797:3:14"},"nodeType":"YulFunctionCall","src":"10797:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10790:3:14"}]},{"body":{"nodeType":"YulBlock","src":"10830:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10832:16:14"},"nodeType":"YulFunctionCall","src":"10832:18:14"},"nodeType":"YulExpressionStatement","src":"10832:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10822:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"10825:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10819:2:14"},"nodeType":"YulFunctionCall","src":"10819:10:14"},"nodeType":"YulIf","src":"10816:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10699:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"10702:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10708:3:14","type":""}],"src":"10668:191:14"},{"body":{"nodeType":"YulBlock","src":"10971:71:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10993:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11001:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10989:3:14"},"nodeType":"YulFunctionCall","src":"10989:14:14"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"11005:29:14","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10982:6:14"},"nodeType":"YulFunctionCall","src":"10982:53:14"},"nodeType":"YulExpressionStatement","src":"10982:53:14"}]},"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10963:6:14","type":""}],"src":"10865:177:14"},{"body":{"nodeType":"YulBlock","src":"11194:220:14","statements":[{"nodeType":"YulAssignment","src":"11204:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11270:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11275:2:14","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11211:58:14"},"nodeType":"YulFunctionCall","src":"11211:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11376:3:14"}],"functionName":{"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulIdentifier","src":"11287:88:14"},"nodeType":"YulFunctionCall","src":"11287:93:14"},"nodeType":"YulExpressionStatement","src":"11287:93:14"},{"nodeType":"YulAssignment","src":"11389:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11400:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11405:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11396:3:14"},"nodeType":"YulFunctionCall","src":"11396:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11389:3:14"}]}]},"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11182:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11190:3:14","type":""}],"src":"11048:366:14"},{"body":{"nodeType":"YulBlock","src":"11591:248:14","statements":[{"nodeType":"YulAssignment","src":"11601:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11613:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11624:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11609:3:14"},"nodeType":"YulFunctionCall","src":"11609:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11601:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11648:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11659:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11644:3:14"},"nodeType":"YulFunctionCall","src":"11644:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11667:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11673:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11663:3:14"},"nodeType":"YulFunctionCall","src":"11663:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11637:6:14"},"nodeType":"YulFunctionCall","src":"11637:47:14"},"nodeType":"YulExpressionStatement","src":"11637:47:14"},{"nodeType":"YulAssignment","src":"11693:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11827:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11701:124:14"},"nodeType":"YulFunctionCall","src":"11701:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11693:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11571:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11586:4:14","type":""}],"src":"11420:419:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610cd4565b60405180910390f35b6100e660048036038101906100e19190610d8f565b610308565b6040516100f39190610dea565b60405180910390f35b610104610326565b6040516101119190610e14565b60405180910390f35b610134600480360381019061012f9190610e2f565b610330565b6040516101419190610dea565b60405180910390f35b610152610409565b60405161015f9190610e9e565b60405180910390f35b610182600480360381019061017d9190610d8f565b610420565b60405161018f9190610dea565b60405180910390f35b6101b260048036038101906101ad9190610eb9565b6104d3565b6040516101bf9190610e14565b60405180910390f35b6101d061051b565b6040516101dd9190610cd4565b60405180910390f35b61020060048036038101906101fb9190610d8f565b6105ad565b60405161020d9190610dea565b60405180910390f35b610230600480360381019061022b9190610d8f565b61067a565b60405161023d9190610dea565b60405180910390f35b610260600480360381019061025b9190610ee6565b610698565b60405161026d9190610e14565b60405180910390f35b60606003805461028590610f55565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f55565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c61031561071f565b8484610727565b6001905092915050565b6000600254905090565b600061033d8484846108f0565b6103fe8461034961071f565b6103f9856040518060600160405280602881526020016112f860289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af61071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b610727565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006104c961042d61071f565b846104c4856001600061043e61071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be190919063ffffffff16565b610727565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461052a90610f55565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f55565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b60006106706105ba61071f565b8461066b8560405180606001604052806025815260200161132060259139600160006105e461071f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b610727565b6001905092915050565b600061068e61068761071f565b84846108f0565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078d90610ff8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc9061108a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e39190610e14565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361095f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109569061111c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c5906111ae565b60405180910390fd5b6109d9838383610c3f565b610a44816040518060600160405280602681526020016112d2602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b839092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ad7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b769190610e14565b60405180910390a3505050565b6000838311158290610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc29190610cd4565b60405180910390fd5b508284610bd891906111fd565b90509392505050565b6000808284610bf09190611231565b905083811015610c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2c906112b1565b60405180910390fd5b8091505092915050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c7e578082015181840152602081019050610c63565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ca682610c44565b610cb08185610c4f565b9350610cc0818560208601610c60565b610cc981610c8a565b840191505092915050565b60006020820190508181036000830152610cee8184610c9b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2682610cfb565b9050919050565b610d3681610d1b565b8114610d4157600080fd5b50565b600081359050610d5381610d2d565b92915050565b6000819050919050565b610d6c81610d59565b8114610d7757600080fd5b50565b600081359050610d8981610d63565b92915050565b60008060408385031215610da657610da5610cf6565b5b6000610db485828601610d44565b9250506020610dc585828601610d7a565b9150509250929050565b60008115159050919050565b610de481610dcf565b82525050565b6000602082019050610dff6000830184610ddb565b92915050565b610e0e81610d59565b82525050565b6000602082019050610e296000830184610e05565b92915050565b600080600060608486031215610e4857610e47610cf6565b5b6000610e5686828701610d44565b9350506020610e6786828701610d44565b9250506040610e7886828701610d7a565b9150509250925092565b600060ff82169050919050565b610e9881610e82565b82525050565b6000602082019050610eb36000830184610e8f565b92915050565b600060208284031215610ecf57610ece610cf6565b5b6000610edd84828501610d44565b91505092915050565b60008060408385031215610efd57610efc610cf6565b5b6000610f0b85828601610d44565b9250506020610f1c85828601610d44565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f6d57607f821691505b602082108103610f8057610f7f610f26565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610fe2602483610c4f565b9150610fed82610f86565b604082019050919050565b6000602082019050818103600083015261101181610fd5565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611074602283610c4f565b915061107f82611018565b604082019050919050565b600060208201905081810360008301526110a381611067565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611106602583610c4f565b9150611111826110aa565b604082019050919050565b60006020820190508181036000830152611135816110f9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611198602383610c4f565b91506111a38261113c565b604082019050919050565b600060208201905081810360008301526111c78161118b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120882610d59565b915061121383610d59565b925082820390508181111561122b5761122a6111ce565b5b92915050565b600061123c82610d59565b915061124783610d59565b925082820190508082111561125f5761125e6111ce565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b600061129b601b83610c4f565b91506112a682611265565b602082019050919050565b600060208201905081810360008301526112ca8161128e565b905091905056fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200fe083d2e39474b8e3d8a3f0f4d08d080dd35f1f02d01cd5d0ba2628c0d52b4b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x71F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x3FE DUP5 PUSH2 0x349 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x3F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x3AF PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9 PUSH2 0x42D PUSH2 0x71F JUMP JUMPDEST DUP5 PUSH2 0x4C4 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x43E PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0xF55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x578 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x586 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x5BA PUSH2 0x71F JUMP JUMPDEST DUP5 PUSH2 0x66B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1320 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5E4 PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68E PUSH2 0x687 PUSH2 0x71F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D9 DUP4 DUP4 DUP4 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB83 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAD7 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2C SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC7E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 DUP3 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0xCB0 DUP2 DUP6 PUSH2 0xC4F JUMP JUMPDEST SWAP4 POP PUSH2 0xCC0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xCC9 DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEE DUP2 DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD26 DUP3 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD36 DUP2 PUSH2 0xD1B JUMP JUMPDEST DUP2 EQ PUSH2 0xD41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD53 DUP2 PUSH2 0xD2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD59 JUMP JUMPDEST DUP2 EQ PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD89 DUP2 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB4 DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC5 DUP6 DUP3 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0E DUP2 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE48 JUMPI PUSH2 0xE47 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE56 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE67 DUP7 DUP3 DUP8 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE78 DUP7 DUP3 DUP8 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEDD DUP5 DUP3 DUP6 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFC PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0B DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF1C DUP6 DUP3 DUP7 ADD PUSH2 0xD44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xF26 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH1 0x24 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xFED DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1011 DUP2 PUSH2 0xFD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1074 PUSH1 0x22 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x107F DUP3 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A3 DUP2 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1106 PUSH1 0x25 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x1111 DUP3 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1135 DUP2 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 PUSH1 0x23 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11C7 DUP2 PUSH2 0x118B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP3 PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1213 DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x122B JUMPI PUSH2 0x122A PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C DUP3 PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125E PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH1 0x1B DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0x12A6 DUP3 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CA DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212200FE0 DUP4 0xD2 0xE3 SWAP5 PUSH21 0xB8E3D8A3F0F4D08D080DD35F1F02D01CD5D0BA2628 0xC0 0xD5 0x2B 0x4B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1313:9474:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4236:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3227:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4869:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3078:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5581:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3391:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2362:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6283:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3719:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3949:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:89;2205:13;2237:5;2230:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:89;:::o;4236:166::-;4319:4;4335:39;4344:12;:10;:12::i;:::-;4358:7;4367:6;4335:8;:39::i;:::-;4391:4;4384:11;;4236:166;;;;:::o;3227:106::-;3288:7;3314:12;;3307:19;;3227:106;:::o;4869:317::-;4975:4;4991:36;5001:6;5009:9;5020:6;4991:9;:36::i;:::-;5037:121;5046:6;5054:12;:10;:12::i;:::-;5068:89;5106:6;5068:89;;;;;;;;;;;;;;;;;:11;:19;5080:6;5068:19;;;;;;;;;;;;;;;:33;5088:12;:10;:12::i;:::-;5068:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5037:8;:121::i;:::-;5175:4;5168:11;;4869:317;;;;;:::o;3078:89::-;3127:5;3151:9;;;;;;;;;;;3144:16;;3078:89;:::o;5581:215::-;5669:4;5685:83;5694:12;:10;:12::i;:::-;5708:7;5717:50;5756:10;5717:11;:25;5729:12;:10;:12::i;:::-;5717:25;;;;;;;;;;;;;;;:34;5743:7;5717:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5685:8;:83::i;:::-;5785:4;5778:11;;5581:215;;;;:::o;3391:125::-;3465:7;3491:9;:18;3501:7;3491:18;;;;;;;;;;;;;;;;3484:25;;3391:125;;;:::o;2362:93::-;2409:13;2441:7;2434:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:93;:::o;6283:266::-;6376:4;6392:129;6401:12;:10;:12::i;:::-;6415:7;6424:96;6463:15;6424:96;;;;;;;;;;;;;;;;;:11;:25;6436:12;:10;:12::i;:::-;6424:25;;;;;;;;;;;;;;;:34;6450:7;6424:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6392:8;:129::i;:::-;6538:4;6531:11;;6283:266;;;;:::o;3719:172::-;3805:4;3821:42;3831:12;:10;:12::i;:::-;3845:9;3856:6;3821:9;:42::i;:::-;3880:4;3873:11;;3719:172;;;;:::o;3949:149::-;4038:7;4064:11;:18;4076:5;4064:18;;;;;;;;;;;;;;;:27;4083:7;4064:27;;;;;;;;;;;;;;;;4057:34;;3949:149;;;;:::o;590:96:9:-;643:7;669:10;662:17;;590:96;:::o;9347:340:4:-;9465:1;9448:19;;:5;:19;;;9440:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9545:1;9526:21;;:7;:21;;;9518:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9627:6;9597:11;:18;9609:5;9597:18;;;;;;;;;;;;;;;:27;9616:7;9597:27;;;;;;;;;;;;;;;:36;;;;9664:7;9648:32;;9657:5;9648:32;;;9673:6;9648:32;;;;;;:::i;:::-;;;;;;;;9347:340;;;:::o;7023:530::-;7146:1;7128:20;;:6;:20;;;7120:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7229:1;7208:23;;:9;:23;;;7200:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7282:47;7303:6;7311:9;7322:6;7282:20;:47::i;:::-;7360:71;7382:6;7360:71;;;;;;;;;;;;;;;;;:9;:17;7370:6;7360:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7340:9;:17;7350:6;7340:17;;;;;;;;;;;;;;;:91;;;;7464:32;7489:6;7464:9;:20;7474:9;7464:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7441:9;:20;7451:9;7441:20;;;;;;;;;;;;;;;:55;;;;7528:9;7511:35;;7520:6;7511:35;;;7539:6;7511:35;;;;;;:::i;:::-;;;;;;;;7023:530;;;:::o;5424:163:3:-;5510:7;5542:1;5537;:6;;5545:12;5529:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5579:1;5575;:5;;;;:::i;:::-;5568:12;;5424:163;;;;;:::o;2682:175::-;2740:7;2759:9;2775:1;2771;:5;;;;:::i;:::-;2759:17;;2799:1;2794;:6;;2786:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2849:1;2842:8;;;2682:175;;;;:::o;10693:92:4:-;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:223::-;6320:34;6316:1;6308:6;6304:14;6297:58;6389:6;6384:2;6376:6;6372:15;6365:31;6180:223;:::o;6409:366::-;6551:3;6572:67;6636:2;6631:3;6572:67;:::i;:::-;6565:74;;6648:93;6737:3;6648:93;:::i;:::-;6766:2;6761:3;6757:12;6750:19;;6409:366;;;:::o;6781:419::-;6947:4;6985:2;6974:9;6970:18;6962:26;;7034:9;7028:4;7024:20;7020:1;7009:9;7005:17;6998:47;7062:131;7188:4;7062:131;:::i;:::-;7054:139;;6781:419;;;:::o;7206:221::-;7346:34;7342:1;7334:6;7330:14;7323:58;7415:4;7410:2;7402:6;7398:15;7391:29;7206:221;:::o;7433:366::-;7575:3;7596:67;7660:2;7655:3;7596:67;:::i;:::-;7589:74;;7672:93;7761:3;7672:93;:::i;:::-;7790:2;7785:3;7781:12;7774:19;;7433:366;;;:::o;7805:419::-;7971:4;8009:2;7998:9;7994:18;7986:26;;8058:9;8052:4;8048:20;8044:1;8033:9;8029:17;8022:47;8086:131;8212:4;8086:131;:::i;:::-;8078:139;;7805:419;;;:::o;8230:224::-;8370:34;8366:1;8358:6;8354:14;8347:58;8439:7;8434:2;8426:6;8422:15;8415:32;8230:224;:::o;8460:366::-;8602:3;8623:67;8687:2;8682:3;8623:67;:::i;:::-;8616:74;;8699:93;8788:3;8699:93;:::i;:::-;8817:2;8812:3;8808:12;8801:19;;8460:366;;;:::o;8832:419::-;8998:4;9036:2;9025:9;9021:18;9013:26;;9085:9;9079:4;9075:20;9071:1;9060:9;9056:17;9049:47;9113:131;9239:4;9113:131;:::i;:::-;9105:139;;8832:419;;;:::o;9257:222::-;9397:34;9393:1;9385:6;9381:14;9374:58;9466:5;9461:2;9453:6;9449:15;9442:30;9257:222;:::o;9485:366::-;9627:3;9648:67;9712:2;9707:3;9648:67;:::i;:::-;9641:74;;9724:93;9813:3;9724:93;:::i;:::-;9842:2;9837:3;9833:12;9826:19;;9485:366;;;:::o;9857:419::-;10023:4;10061:2;10050:9;10046:18;10038:26;;10110:9;10104:4;10100:20;10096:1;10085:9;10081:17;10074:47;10138:131;10264:4;10138:131;:::i;:::-;10130:139;;9857:419;;;:::o;10282:180::-;10330:77;10327:1;10320:88;10427:4;10424:1;10417:15;10451:4;10448:1;10441:15;10468:194;10508:4;10528:20;10546:1;10528:20;:::i;:::-;10523:25;;10562:20;10580:1;10562:20;:::i;:::-;10557:25;;10606:1;10603;10599:9;10591:17;;10630:1;10624:4;10621:11;10618:37;;;10635:18;;:::i;:::-;10618:37;10468:194;;;;:::o;10668:191::-;10708:3;10727:20;10745:1;10727:20;:::i;:::-;10722:25;;10761:20;10779:1;10761:20;:::i;:::-;10756:25;;10804:1;10801;10797:9;10790:16;;10825:3;10822:1;10819:10;10816:36;;;10832:18;;:::i;:::-;10816:36;10668:191;;;;:::o;10865:177::-;11005:29;11001:1;10993:6;10989:14;10982:53;10865:177;:::o;11048:366::-;11190:3;11211:67;11275:2;11270:3;11211:67;:::i;:::-;11204:74;;11287:93;11376:3;11287:93;:::i;:::-;11405:2;11400:3;11396:12;11389:19;;11048:366;;;:::o;11420:419::-;11586:4;11624:2;11613:9;11609:18;11601:26;;11673:9;11667:4;11663:20;11659:1;11648:9;11644:17;11637:47;11701:131;11827:4;11701:131;:::i;:::-;11693:139;;11420:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"997200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"2568","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_setupDecimals(uint8)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x5fc67ab74022e86c5b8a21762a3375a8ddeab5c249b1568805837eca718badbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":813,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":819,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":821,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":823,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":825,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":827,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x5fc67ab74022e86c5b8a21762a3375a8ddeab5c249b1568805837eca718badbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa885fd668f62491c8eb5f888dc973862fdefc5f73ef540b4bb5d857b79a5c7bf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":813,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":819,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":821,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":823,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":825,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":827,"contract":"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061860acdfdfa139036def32341ae45ac00f551421f6f76333d8d1ad98c6d06af64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x860A 0xCD REVERT STATICCALL SGT SWAP1 CALLDATASIZE 0xDE RETURN 0x23 COINBASE 0xAE GASLIMIT 0xAC STOP CREATE2 MLOAD TIMESTAMP 0x1F PUSH16 0x76333D8D1AD98C6D06AF64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"608:3104:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061860acdfdfa139036def32341ae45ac00f551421f6f76333d8d1ad98c6d06af64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x860A 0xCD REVERT STATICCALL SGT SWAP1 CALLDATASIZE 0xDE RETURN 0x23 COINBASE 0xAE GASLIMIT 0xAC STOP CREATE2 MLOAD TIMESTAMP 0x1F PUSH16 0x76333D8D1AD98C6D06AF64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"608:3104:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x171a9b614bed004394c8c004271abae184a961c0c3d4c345b5e24823e836c524\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f218842e2406d531b33399f63190e5c475ae34dd4234bc5c766a4e072878356764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE XOR DUP5 0x2E 0x24 MOD 0xD5 BALANCE 0xB3 CALLER SWAP10 0xF6 BALANCE SWAP1 0xE5 0xC4 PUSH22 0xAE34DD4234BC5C766A4E072878356764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"126:7684:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f218842e2406d531b33399f63190e5c475ae34dd4234bc5c766a4e072878356764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE XOR DUP5 0x2E 0x24 MOD 0xD5 BALANCE 0xB3 CALLER SWAP10 0xF6 BALANCE SWAP1 0xE5 0xC4 PUSH22 0xAE34DD4234BC5C766A4E072878356764736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"126:7684:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_verifyCallResult(bool,bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220beda6c71c23ee062b39f9634aa47d5f4330c51851d5bf57c1ee31c75eaf9df8064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDA PUSH13 0x71C23EE062B39F9634AA47D5F4 CALLER 0xC MLOAD DUP6 SAR JUMPDEST CREATE2 PUSH29 0x1EE31C75EAF9DF8064736F6C6343000814003300000000000000000000 ","sourceMap":"745:8634:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220beda6c71c23ee062b39f9634aa47d5f4330c51851d5bf57c1ee31c75eaf9df8064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDA PUSH13 0x71C23EE062B39F9634AA47D5F4 CALLER 0xC MLOAD DUP6 SAR JUMPDEST CREATE2 PUSH29 0x1EE31C75EAF9DF8064736F6C6343000814003300000000000000000000 ","sourceMap":"745:8634:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2500,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AUSD.sol":{"AUSD":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2584":{"entryPoint":null,"id":2584,"parameterSlots":0,"returnSlots":0},"@_367":{"entryPoint":null,"id":367,"parameterSlots":0,"returnSlots":0},"@_848":{"entryPoint":null,"id":848,"parameterSlots":2,"returnSlots":0},"@_add_2027":{"entryPoint":721,"id":2027,"parameterSlots":2,"returnSlots":1},"@_contains_2127":{"entryPoint":843,"id":2127,"parameterSlots":2,"returnSlots":1},"@_grantRole_306":{"entryPoint":506,"id":306,"parameterSlots":2,"returnSlots":0},"@_msgSender_1962":{"entryPoint":476,"id":1962,"parameterSlots":0,"returnSlots":1},"@_setupRole_257":{"entryPoint":484,"id":257,"parameterSlots":2,"returnSlots":0},"@add_2289":{"entryPoint":665,"id":2289,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1036,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1357,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":1172,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1318,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1192,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1512,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1057,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1482,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1182,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1450,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":936,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":889,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1232,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1073,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1437,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1290,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1086,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1242,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1285,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"140:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:14"},"nodeType":"YulFunctionCall","src":"150:88:14"},"nodeType":"YulExpressionStatement","src":"150:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:14"},"nodeType":"YulFunctionCall","src":"247:15:14"},"nodeType":"YulExpressionStatement","src":"247:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:14"},"nodeType":"YulFunctionCall","src":"271:15:14"},"nodeType":"YulExpressionStatement","src":"271:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:14"},{"body":{"nodeType":"YulBlock","src":"326:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:14"},"nodeType":"YulFunctionCall","src":"336:88:14"},"nodeType":"YulExpressionStatement","src":"336:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:14"},"nodeType":"YulFunctionCall","src":"433:15:14"},"nodeType":"YulExpressionStatement","src":"433:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:14"},"nodeType":"YulFunctionCall","src":"457:15:14"},"nodeType":"YulExpressionStatement","src":"457:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:14"},{"body":{"nodeType":"YulBlock","src":"535:269:14","statements":[{"nodeType":"YulAssignment","src":"545:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:14"},"nodeType":"YulFunctionCall","src":"555:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:14"},"nodeType":"YulFunctionCall","src":"602:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:14","statements":[{"nodeType":"YulAssignment","src":"667:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:14"},"nodeType":"YulFunctionCall","src":"677:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:14"},"nodeType":"YulFunctionCall","src":"626:26:14"},"nodeType":"YulIf","src":"623:81:14"},{"body":{"nodeType":"YulBlock","src":"756:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:14"},"nodeType":"YulFunctionCall","src":"770:18:14"},"nodeType":"YulExpressionStatement","src":"770:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:14"},"nodeType":"YulFunctionCall","src":"740:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:14"},"nodeType":"YulFunctionCall","src":"717:38:14"},"nodeType":"YulIf","src":"714:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:14","type":""}],"src":"484:320:14"},{"body":{"nodeType":"YulBlock","src":"864:87:14","statements":[{"nodeType":"YulAssignment","src":"874:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:14"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:14"},"nodeType":"YulFunctionCall","src":"895:14:14"},"nodeType":"YulExpressionStatement","src":"895:14:14"},{"nodeType":"YulAssignment","src":"918:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:14"},"nodeType":"YulFunctionCall","src":"926:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:14"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:14","type":""}],"src":"810:141:14"},{"body":{"nodeType":"YulBlock","src":"1001:49:14","statements":[{"nodeType":"YulAssignment","src":"1011:33:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:14"},"nodeType":"YulFunctionCall","src":"1025:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:14","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:14"},"nodeType":"YulFunctionCall","src":"1021:23:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:14"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:14","type":""}],"src":"957:93:14"},{"body":{"nodeType":"YulBlock","src":"1109:54:14","statements":[{"nodeType":"YulAssignment","src":"1119:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:14"},"nodeType":"YulFunctionCall","src":"1140:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:14"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:14","type":""}],"src":"1056:107:14"},{"body":{"nodeType":"YulBlock","src":"1245:317:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:14","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:14"},"nodeType":"YulFunctionCall","src":"1272:18:14"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:14"},"nodeType":"YulFunctionCall","src":"1311:97:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:14","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:14"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:14"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:14"},"nodeType":"YulFunctionCall","src":"1429:39:14"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:14"}]},{"nodeType":"YulAssignment","src":"1477:30:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:14"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:14"},"nodeType":"YulFunctionCall","src":"1497:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:14"},"nodeType":"YulFunctionCall","src":"1486:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:14"}]},{"nodeType":"YulAssignment","src":"1516:40:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:14"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:14"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:14"},"nodeType":"YulFunctionCall","src":"1536:19:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:14"},"nodeType":"YulFunctionCall","src":"1526:30:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:14"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:14","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:14","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:14","type":""}],"src":"1169:393:14"},{"body":{"nodeType":"YulBlock","src":"1613:32:14","statements":[{"nodeType":"YulAssignment","src":"1623:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:14","type":""}],"src":"1568:77:14"},{"body":{"nodeType":"YulBlock","src":"1683:28:14","statements":[{"nodeType":"YulAssignment","src":"1693:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:14","type":""}],"src":"1651:60:14"},{"body":{"nodeType":"YulBlock","src":"1777:82:14","statements":[{"nodeType":"YulAssignment","src":"1787:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:14"},"nodeType":"YulFunctionCall","src":"1827:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:14"},"nodeType":"YulFunctionCall","src":"1818:34:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:14"},"nodeType":"YulFunctionCall","src":"1800:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:14","type":""}],"src":"1717:142:14"},{"body":{"nodeType":"YulBlock","src":"1912:28:14","statements":[{"nodeType":"YulAssignment","src":"1922:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:14"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:14","type":""}],"src":"1865:75:14"},{"body":{"nodeType":"YulBlock","src":"2022:193:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:14","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:14"},"nodeType":"YulFunctionCall","src":"2056:39:14"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:14"},"nodeType":"YulFunctionCall","src":"2145:11:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:14"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:14"},"nodeType":"YulFunctionCall","src":"2166:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:14"},"nodeType":"YulFunctionCall","src":"2117:91:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:14"},"nodeType":"YulFunctionCall","src":"2104:105:14"},"nodeType":"YulExpressionStatement","src":"2104:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:14","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:14","type":""}],"src":"1946:269:14"},{"body":{"nodeType":"YulBlock","src":"2270:24:14","statements":[{"nodeType":"YulAssignment","src":"2280:8:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:14","type":""}],"src":"2221:73:14"},{"body":{"nodeType":"YulBlock","src":"2353:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:14"},"nodeType":"YulFunctionCall","src":"2377:32:14"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:14"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:14"},"nodeType":"YulFunctionCall","src":"2418:65:14"},"nodeType":"YulExpressionStatement","src":"2418:65:14"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:14","type":""}],"src":"2300:189:14"},{"body":{"nodeType":"YulBlock","src":"2545:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:14"},"nodeType":"YulFunctionCall","src":"2626:39:14"},"nodeType":"YulExpressionStatement","src":"2626:39:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:14"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:14"},"nodeType":"YulFunctionCall","src":"2562:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:14","statements":[{"nodeType":"YulAssignment","src":"2579:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:14"},"nodeType":"YulFunctionCall","src":"2588:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:14","statements":[]},"src":"2555:120:14"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:14","type":""}],"src":"2495:186:14"},{"body":{"nodeType":"YulBlock","src":"2766:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:14"},"nodeType":"YulFunctionCall","src":"2822:38:14"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:14","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:14"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:14"},"nodeType":"YulFunctionCall","src":"2906:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:14"},"nodeType":"YulFunctionCall","src":"2892:44:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:14","statements":[{"nodeType":"YulAssignment","src":"3095:23:14","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:14"},"nodeType":"YulFunctionCall","src":"3074:18:14"},"nodeType":"YulIf","src":"3071:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:14"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:14"},"nodeType":"YulFunctionCall","src":"3189:22:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:14"},"nodeType":"YulFunctionCall","src":"3175:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:14"},"nodeType":"YulFunctionCall","src":"3133:80:14"},"nodeType":"YulExpressionStatement","src":"3133:80:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:14"},"nodeType":"YulFunctionCall","src":"2780:11:14"},"nodeType":"YulIf","src":"2777:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:14","type":""}],"src":"2687:543:14"},{"body":{"nodeType":"YulBlock","src":"3299:54:14","statements":[{"nodeType":"YulAssignment","src":"3309:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:14"},"nodeType":"YulFunctionCall","src":"3330:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:14","type":""}],"src":"3236:117:14"},{"body":{"nodeType":"YulBlock","src":"3410:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:14","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:14"},"nodeType":"YulFunctionCall","src":"3465:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:14"},"nodeType":"YulFunctionCall","src":"3480:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:14"},"nodeType":"YulFunctionCall","src":"3436:51:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:14"},"nodeType":"YulFunctionCall","src":"3432:56:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:14","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:14"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:14"},"nodeType":"YulFunctionCall","src":"3507:15:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:14"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:14","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:14","type":""}],"src":"3359:169:14"},{"body":{"nodeType":"YulBlock","src":"3614:214:14","statements":[{"nodeType":"YulAssignment","src":"3747:37:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:14"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:14"},"nodeType":"YulFunctionCall","src":"3755:29:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:14"}]},{"nodeType":"YulAssignment","src":"3793:29:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:14","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:14"},"nodeType":"YulFunctionCall","src":"3810:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:14"},"nodeType":"YulFunctionCall","src":"3801:21:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:14","type":""}],"src":"3533:295:14"},{"body":{"nodeType":"YulBlock","src":"3925:1303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:14"},"nodeType":"YulFunctionCall","src":"3950:37:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:14"},"nodeType":"YulFunctionCall","src":"4074:18:14"},"nodeType":"YulExpressionStatement","src":"4074:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:14"},"nodeType":"YulFunctionCall","src":"4041:30:14"},"nodeType":"YulIf","src":"4038:56:14"},{"nodeType":"YulVariableDeclaration","src":"4104:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:14"},"nodeType":"YulFunctionCall","src":"4144:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:14"},"nodeType":"YulFunctionCall","src":"4118:38:14"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:14"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:14"},"nodeType":"YulFunctionCall","src":"4203:67:14"},"nodeType":"YulExpressionStatement","src":"4203:67:14"},{"nodeType":"YulVariableDeclaration","src":"4280:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:14","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:14"},"nodeType":"YulFunctionCall","src":"4413:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:14"},"nodeType":"YulFunctionCall","src":"4401:22:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:14"},"nodeType":"YulFunctionCall","src":"4451:37:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:14"},"nodeType":"YulFunctionCall","src":"4608:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:14"},"nodeType":"YulFunctionCall","src":"4602:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:14"},"nodeType":"YulFunctionCall","src":"4587:42:14"},"nodeType":"YulExpressionStatement","src":"4587:42:14"},{"nodeType":"YulAssignment","src":"4646:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:14"},"nodeType":"YulFunctionCall","src":"4656:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:14"}]},{"nodeType":"YulAssignment","src":"4687:31:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:14"},"nodeType":"YulFunctionCall","src":"4700:18:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:14"},"nodeType":"YulFunctionCall","src":"4532:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:14","statements":[{"nodeType":"YulAssignment","src":"4549:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:14"},"nodeType":"YulFunctionCall","src":"4554:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:14","statements":[]},"src":"4524:208:14"},{"body":{"nodeType":"YulBlock","src":"4768:156:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:14"},"nodeType":"YulFunctionCall","src":"4809:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:14"},"nodeType":"YulFunctionCall","src":"4803:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:14"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:14"},"nodeType":"YulFunctionCall","src":"4891:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:14"},"nodeType":"YulFunctionCall","src":"4861:48:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:14"},"nodeType":"YulFunctionCall","src":"4846:64:14"},"nodeType":"YulExpressionStatement","src":"4846:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:14"},"nodeType":"YulFunctionCall","src":"4748:19:14"},"nodeType":"YulIf","src":"4745:179:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:14"},"nodeType":"YulFunctionCall","src":"4954:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:14"},"nodeType":"YulFunctionCall","src":"4950:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:14"},"nodeType":"YulFunctionCall","src":"4937:36:14"},"nodeType":"YulExpressionStatement","src":"4937:36:14"}]},"nodeType":"YulCase","src":"4365:618:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:14","statements":[{"nodeType":"YulAssignment","src":"5069:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:14"},"nodeType":"YulFunctionCall","src":"5084:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:14"},"nodeType":"YulFunctionCall","src":"5078:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:14"},"nodeType":"YulIf","src":"5041:77:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:14"},"nodeType":"YulFunctionCall","src":"5144:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:14"},"nodeType":"YulFunctionCall","src":"5131:81:14"},"nodeType":"YulExpressionStatement","src":"5131:81:14"}]},"nodeType":"YulCase","src":"4992:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:14"},"nodeType":"YulFunctionCall","src":"4342:14:14"},"nodeType":"YulSwitch","src":"4335:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:14","type":""}],"src":"3833:1395:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f4155534420537461626c650000000000000000000000000000000000000000008152506040518060400160405280600481526020017f415553440000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620005e8565b508060049081620000a19190620005e8565b506012600560006101000a81548160ff021916908360ff16021790555050506000620000d2620001dc60201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620001956000801b62000189620001dc60201b60201c565b620001e460201b60201c565b620001d67f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08620001ca620001dc60201b60201c565b620001e460201b60201c565b620006cf565b600033905090565b620001f68282620001fa60201b60201c565b5050565b6200022481600660008581526020019081526020016000206000016200029960201b90919060201c565b1562000295576200023a620001dc60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002c9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002d160201b60201c565b905092915050565b6000620002e583836200034b60201b60201c565b6200034057826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000345565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f057607f821691505b602082108103620004065762000405620003a8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000431565b6200047c868362000431565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004c9620004c3620004bd8462000494565b6200049e565b62000494565b9050919050565b6000819050919050565b620004e583620004a8565b620004fd620004f482620004d0565b8484546200043e565b825550505050565b600090565b6200051462000505565b62000521818484620004da565b505050565b5b8181101562000549576200053d6000826200050a565b60018101905062000527565b5050565b601f821115620005985762000562816200040c565b6200056d8462000421565b810160208510156200057d578190505b620005956200058c8562000421565b83018262000526565b50505b505050565b600082821c905092915050565b6000620005bd600019846008026200059d565b1980831691505092915050565b6000620005d88383620005aa565b9150826002028217905092915050565b620005f3826200036e565b67ffffffffffffffff8111156200060f576200060e62000379565b5b6200061b8254620003d7565b620006288282856200054d565b600060209050601f8311600181146200066057600084156200064b578287015190505b620006578582620005ca565b865550620006c7565b601f19841662000670866200040c565b60005b828110156200069a5784890151825560018201915060208501945060208101905062000673565b86831015620006ba5784890151620006b6601f891682620005aa565b8355505b6001600288020188555050505b505050505050565b612c1180620006df6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063a457c2d711610097578063d547741f11610071578063d547741f146104bd578063dd62ed3e146104d9578063ec87621c14610509578063f2fde38b146105275761018e565b8063a457c2d71461042d578063a9059cbb1461045d578063ca15c8731461048d5761018e565b80638da5cb5b146103575780639010d07c1461037557806391d14854146103a557806395d89b41146103d5578063a0712d68146103f3578063a217fddf1461040f5761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146102e557806370a0823114610301578063715018a61461033157806379cc67901461033b5761018e565b8063313ce5671461027b57806336568abe1461029957806339509351146102b55761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff578063248a9ca31461022f5780632f2ff15d1461025f575b600080fd5b61019b610543565b6040516101a89190611e47565b60405180910390f35b6101cb60048036038101906101c69190611f02565b6105d5565b6040516101d89190611f5d565b60405180910390f35b6101e96105f3565b6040516101f69190611f87565b60405180910390f35b61021960048036038101906102149190611fa2565b6105fd565b6040516102269190611f5d565b60405180910390f35b6102496004803603810190610244919061202b565b6106d6565b6040516102569190612067565b60405180910390f35b61027960048036038101906102749190612082565b6106f6565b005b61028361076a565b60405161029091906120de565b60405180910390f35b6102b360048036038101906102ae9190612082565b610781565b005b6102cf60048036038101906102ca9190611f02565b610804565b6040516102dc9190611f5d565b60405180910390f35b6102ff60048036038101906102fa91906120f9565b6108b7565b005b61031b60048036038101906103169190612126565b6108cb565b6040516103289190611f87565b60405180910390f35b610339610913565b005b61035560048036038101906103509190611f02565b610a50565b005b61035f610ab2565b60405161036c9190612162565b60405180910390f35b61038f600480360381019061038a919061217d565b610adc565b60405161039c9190612162565b60405180910390f35b6103bf60048036038101906103ba9190612082565b610b0e565b6040516103cc9190611f5d565b60405180910390f35b6103dd610b40565b6040516103ea9190611e47565b60405180910390f35b61040d600480360381019061040891906120f9565b610bd2565b005b610417610cff565b6040516104249190612067565b60405180910390f35b61044760048036038101906104429190611f02565b610d06565b6040516104549190611f5d565b60405180910390f35b61047760048036038101906104729190611f02565b610dd3565b6040516104849190611f5d565b60405180910390f35b6104a760048036038101906104a2919061202b565b610df1565b6040516104b49190611f87565b60405180910390f35b6104d760048036038101906104d29190612082565b610e18565b005b6104f360048036038101906104ee91906121bd565b610e8c565b6040516105009190611f87565b60405180910390f35b610511610f13565b60405161051e9190612067565b60405180910390f35b610541600480360381019061053c9190612126565b610f37565b005b6060600380546105529061222c565b80601f016020809104026020016040519081016040528092919081815260200182805461057e9061222c565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b60006105e96105e26110e2565b84846110ea565b6001905092915050565b6000600254905090565b600061060a8484846112b3565b6106cb846106166110e2565b6106c685604051806060016040528060288152602001612b6b60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061067c6110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6110ea565b600190509392505050565b600060066000838152602001908152602001600020600201549050919050565b61071d60066000848152602001908152602001600020600201546107186110e2565b610b0e565b61075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906122cf565b60405180910390fd5b61076682826115a4565b5050565b6000600560009054906101000a900460ff16905090565b6107896110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90612361565b60405180910390fd5b6108008282611638565b5050565b60006108ad6108116110e2565b846108a885600160006108226110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6110ea565b6001905092915050565b6108c86108c26110e2565b8261172a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61091b6110e2565b73ffffffffffffffffffffffffffffffffffffffff16610939610ab2565b73ffffffffffffffffffffffffffffffffffffffff161461098f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610986906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610a8f82604051806060016040528060248152602001612b9360249139610a8086610a7b6110e2565b610e8c565b6115469092919063ffffffff16565b9050610aa383610a9d6110e2565b836110ea565b610aad838361172a565b505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b0682600660008681526020019081526020016000206000016118d790919063ffffffff16565b905092915050565b6000610b3882600660008681526020019081526020016000206000016118f190919063ffffffff16565b905092915050565b606060048054610b4f9061222c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b9061222c565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b5050505050905090565b610c037f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610bfe6110e2565b610b0e565b610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3990612439565b60405180910390fd5b610c57816008546116cc90919063ffffffff16565b600881905550610caf81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cfc3382611921565b50565b6000801b81565b6000610dc9610d136110e2565b84610dc485604051806060016040528060258152602001612bb76025913960016000610d3d6110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6110ea565b6001905092915050565b6000610de7610de06110e2565b84846112b3565b6001905092915050565b6000610e1160066000848152602001908152602001600020600001611ab4565b9050919050565b610e3f6006600084815260200190815260200160002060020154610e3a6110e2565b610b0e565b610e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e75906124cb565b60405180910390fd5b610e888282611638565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b610f3f6110e2565b73ffffffffffffffffffffffffffffffffffffffff16610f5d610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110199061255d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611159576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611150906125ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bf90612681565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112a69190611f87565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131990612713565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611391576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611388906127a5565b60405180910390fd5b61139c838383611ac9565b61140781604051806060016040528060268152602001612b45602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061149a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115399190611f87565b60405180910390a3505050565b600083831115829061158e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115859190611e47565b60405180910390fd5b50828461159b91906127f4565b90509392505050565b6115cc8160066000858152602001908152602001600020600001611ace90919063ffffffff16565b15611634576115d96110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6116608160066000858152602001908152602001600020600001611afe90919063ffffffff16565b156116c85761166d6110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008082846116db9190612828565b905083811015611720576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611717906128a8565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611799576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117909061293a565b60405180910390fd5b6117a582600083611ac9565b61181081604051806060016040528060228152602001612b23602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061186781600254611b2e90919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118cb9190611f87565b60405180910390a35050565b60006118e68360000183611b87565b60001c905092915050565b6000611919836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611bfb565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611990576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611987906129a6565b60405180910390fd5b61199c60008383611ac9565b6119b1816002546116cc90919063ffffffff16565b600281905550611a08816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611aa89190611f87565b60405180910390a35050565b6000611ac282600001611c1e565b9050919050565b505050565b6000611af6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c2f565b905092915050565b6000611b26836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c9f565b905092915050565b600082821115611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90612a12565b60405180910390fd5b8183611b7f91906127f4565b905092915050565b600081836000018054905011611bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc990612aa4565b60405180910390fd5b826000018281548110611be857611be7612ac4565b5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000611c3b8383611bfb565b611c94578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611c99565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611dab576000600182611cd191906127f4565b9050600060018660000180549050611ce991906127f4565b90506000866000018281548110611d0357611d02612ac4565b5b9060005260206000200154905080876000018481548110611d2757611d26612ac4565b5b9060005260206000200181905550600183611d429190612828565b8760010160008381526020019081526020016000208190555086600001805480611d6f57611d6e612af3565b5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611db1565b60009150505b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611df1578082015181840152602081019050611dd6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e1982611db7565b611e238185611dc2565b9350611e33818560208601611dd3565b611e3c81611dfd565b840191505092915050565b60006020820190508181036000830152611e618184611e0e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e9982611e6e565b9050919050565b611ea981611e8e565b8114611eb457600080fd5b50565b600081359050611ec681611ea0565b92915050565b6000819050919050565b611edf81611ecc565b8114611eea57600080fd5b50565b600081359050611efc81611ed6565b92915050565b60008060408385031215611f1957611f18611e69565b5b6000611f2785828601611eb7565b9250506020611f3885828601611eed565b9150509250929050565b60008115159050919050565b611f5781611f42565b82525050565b6000602082019050611f726000830184611f4e565b92915050565b611f8181611ecc565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b600080600060608486031215611fbb57611fba611e69565b5b6000611fc986828701611eb7565b9350506020611fda86828701611eb7565b9250506040611feb86828701611eed565b9150509250925092565b6000819050919050565b61200881611ff5565b811461201357600080fd5b50565b60008135905061202581611fff565b92915050565b60006020828403121561204157612040611e69565b5b600061204f84828501612016565b91505092915050565b61206181611ff5565b82525050565b600060208201905061207c6000830184612058565b92915050565b6000806040838503121561209957612098611e69565b5b60006120a785828601612016565b92505060206120b885828601611eb7565b9150509250929050565b600060ff82169050919050565b6120d8816120c2565b82525050565b60006020820190506120f360008301846120cf565b92915050565b60006020828403121561210f5761210e611e69565b5b600061211d84828501611eed565b91505092915050565b60006020828403121561213c5761213b611e69565b5b600061214a84828501611eb7565b91505092915050565b61215c81611e8e565b82525050565b60006020820190506121776000830184612153565b92915050565b6000806040838503121561219457612193611e69565b5b60006121a285828601612016565b92505060206121b385828601611eed565b9150509250929050565b600080604083850312156121d4576121d3611e69565b5b60006121e285828601611eb7565b92505060206121f385828601611eb7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224457607f821691505b602082108103612257576122566121fd565b5b50919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b60006122b9602f83611dc2565b91506122c48261225d565b604082019050919050565b600060208201905081810360008301526122e8816122ac565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061234b602f83611dc2565b9150612356826122ef565b604082019050919050565b6000602082019050818103600083015261237a8161233e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123b7602083611dc2565b91506123c282612381565b602082019050919050565b600060208201905081810360008301526123e6816123aa565b9050919050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b6000612423600b83611dc2565b915061242e826123ed565b602082019050919050565b6000602082019050818103600083015261245281612416565b9050919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b60006124b5603083611dc2565b91506124c082612459565b604082019050919050565b600060208201905081810360008301526124e4816124a8565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612547602683611dc2565b9150612552826124eb565b604082019050919050565b600060208201905081810360008301526125768161253a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006125d9602483611dc2565b91506125e48261257d565b604082019050919050565b60006020820190508181036000830152612608816125cc565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061266b602283611dc2565b91506126768261260f565b604082019050919050565b6000602082019050818103600083015261269a8161265e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006126fd602583611dc2565b9150612708826126a1565b604082019050919050565b6000602082019050818103600083015261272c816126f0565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061278f602383611dc2565b915061279a82612733565b604082019050919050565b600060208201905081810360008301526127be81612782565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127ff82611ecc565b915061280a83611ecc565b9250828203905081811115612822576128216127c5565b5b92915050565b600061283382611ecc565b915061283e83611ecc565b9250828201905080821115612856576128556127c5565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000612892601b83611dc2565b915061289d8261285c565b602082019050919050565b600060208201905081810360008301526128c181612885565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612924602183611dc2565b915061292f826128c8565b604082019050919050565b6000602082019050818103600083015261295381612917565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612990601f83611dc2565b915061299b8261295a565b602082019050919050565b600060208201905081810360008301526129bf81612983565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b60006129fc601e83611dc2565b9150612a07826129c6565b602082019050919050565b60006020820190508181036000830152612a2b816129ef565b9050919050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612a8e602283611dc2565b9150612a9982612a32565b604082019050919050565b60006020820190508181036000830152612abd81612a81565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a7c895267bc37b2b1e73482e141f5d4725e8c94fc18c52bf00868b469cc55f9164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4155534420537461626C65000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4155534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x5E8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x5E8 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH3 0xD2 PUSH3 0x1DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x195 PUSH1 0x0 DUP1 SHL PUSH3 0x189 PUSH3 0x1DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D6 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH3 0x1CA PUSH3 0x1DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1E4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6CF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1F6 DUP3 DUP3 PUSH3 0x1FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x224 DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH3 0x299 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x295 JUMPI PUSH3 0x23A PUSH3 0x1DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C9 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x2D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E5 DUP4 DUP4 PUSH3 0x34B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x340 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x345 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x406 JUMPI PUSH3 0x405 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x470 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x431 JUMP JUMPDEST PUSH3 0x47C DUP7 DUP4 PUSH3 0x431 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C9 PUSH3 0x4C3 PUSH3 0x4BD DUP5 PUSH3 0x494 JUMP JUMPDEST PUSH3 0x49E JUMP JUMPDEST PUSH3 0x494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4E5 DUP4 PUSH3 0x4A8 JUMP JUMPDEST PUSH3 0x4FD PUSH3 0x4F4 DUP3 PUSH3 0x4D0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x43E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x514 PUSH3 0x505 JUMP JUMPDEST PUSH3 0x521 DUP2 DUP5 DUP5 PUSH3 0x4DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x549 JUMPI PUSH3 0x53D PUSH1 0x0 DUP3 PUSH3 0x50A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x527 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x598 JUMPI PUSH3 0x562 DUP2 PUSH3 0x40C JUMP JUMPDEST PUSH3 0x56D DUP5 PUSH3 0x421 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x57D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x595 PUSH3 0x58C DUP6 PUSH3 0x421 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x526 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5BD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x59D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5D8 DUP4 DUP4 PUSH3 0x5AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5F3 DUP3 PUSH3 0x36E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x60F JUMPI PUSH3 0x60E PUSH3 0x379 JUMP JUMPDEST JUMPDEST PUSH3 0x61B DUP3 SLOAD PUSH3 0x3D7 JUMP JUMPDEST PUSH3 0x628 DUP3 DUP3 DUP6 PUSH3 0x54D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x660 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x64B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x657 DUP6 DUP3 PUSH3 0x5CA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6C7 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x670 DUP7 PUSH3 0x40C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x69A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x673 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6BA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6B6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2C11 DUP1 PUSH3 0x6DF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x527 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x48D JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x40F JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x33B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B5 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x552 SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57E SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 PUSH2 0x5E2 PUSH2 0x10E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP5 DUP5 DUP5 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x6CB DUP5 PUSH2 0x616 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x67C PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71D PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x718 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP3 DUP3 PUSH2 0x15A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x789 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP1 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x800 DUP3 DUP3 PUSH2 0x1638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0x811 PUSH2 0x10E2 JUMP JUMPDEST DUP5 PUSH2 0x8A8 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x822 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C8 PUSH2 0x8C2 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH2 0x172A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x939 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B93 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xA80 DUP7 PUSH2 0xA7B PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA3 DUP4 PUSH2 0xA9D PUSH2 0x10E2 JUMP JUMPDEST DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0xAAD DUP4 DUP4 PUSH2 0x172A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB06 DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x18F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7B SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC03 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xBFE PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 DUP2 PUSH1 0x8 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xCAF DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCFC CALLER DUP3 PUSH2 0x1921 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC9 PUSH2 0xD13 PUSH2 0x10E2 JUMP JUMPDEST DUP5 PUSH2 0xDC4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xD3D PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE7 PUSH2 0xDE0 PUSH2 0x10E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xE3A PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE88 DUP3 DUP3 PUSH2 0x1638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0xF3F PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5D PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BF SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP1 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1388 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139C DUP4 DUP4 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B45 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x149A DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 PUSH2 0x159B SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1ACE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1634 JUMPI PUSH2 0x15D9 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1660 DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1AFE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x166D PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x16DB SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1717 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1790 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B23 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1867 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1B2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1919 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1987 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199C PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH1 0x2 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1A08 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP3 PUSH1 0x0 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x1BD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC9 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP4 DUP4 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x1C94 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1DAB JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH2 0x1D42 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x2AF3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E19 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST PUSH2 0x1E23 DUP2 DUP6 PUSH2 0x1DC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E61 DUP2 DUP5 PUSH2 0x1E0E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E99 DUP3 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDF DUP2 PUSH2 0x1ECC JUMP JUMPDEST DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFC DUP2 PUSH2 0x1ED6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F27 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F38 DUP6 DUP3 DUP7 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP2 PUSH2 0x1F42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1ECC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH2 0x1FBA PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FDA DUP7 DUP3 DUP8 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FEB DUP7 DUP3 DUP8 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2008 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2013 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2025 DUP2 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP5 DUP3 DUP6 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2061 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2058 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211D DUP5 DUP3 DUP6 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214A DUP5 DUP3 DUP6 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2177 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A2 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B9 PUSH1 0x2F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C4 DUP3 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E8 DUP2 PUSH2 0x22AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234B PUSH1 0x2F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2356 DUP3 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237A DUP2 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B7 PUSH1 0x20 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C2 DUP3 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23E6 DUP2 PUSH2 0x23AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0xB DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B5 PUSH1 0x30 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C0 DUP3 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24E4 DUP2 PUSH2 0x24A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 PUSH1 0x26 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP3 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2576 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D9 PUSH1 0x24 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E4 DUP3 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2608 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B PUSH1 0x22 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2676 DUP3 PUSH2 0x260F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x269A DUP2 PUSH2 0x265E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FD PUSH1 0x25 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2708 DUP3 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272C DUP2 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278F PUSH1 0x23 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 PUSH2 0x2782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27FF DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x280A DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2822 JUMPI PUSH2 0x2821 PUSH2 0x27C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2833 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x283E DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2856 JUMPI PUSH2 0x2855 PUSH2 0x27C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2892 PUSH1 0x1B DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x289D DUP3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C1 DUP2 PUSH2 0x2885 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2924 PUSH1 0x21 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x292F DUP3 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 PUSH2 0x2917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2990 PUSH1 0x1F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x299B DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BF DUP2 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29FC PUSH1 0x1E DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A07 DUP3 PUSH2 0x29C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A2B DUP2 PUSH2 0x29EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8E PUSH1 0x22 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A99 DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABD DUP2 PUSH2 0x2A81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A7C8 SWAP6 0x26 PUSH28 0xC37B2B1E73482E141F5D4725E8C94FC18C52BF00868B469CC55F9164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"487:742:12:-:0;;;791:156;;;;;;;;;;1950:145:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2032:5;2024;:13;;;;;;:::i;:::-;;2057:7;2047;:17;;;;;;:::i;:::-;;2086:2;2074:9;;:14;;;;;;;;;;;;;;;;;;1950:145;;867:17:2;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;857:135;846:44:12::1;1764:4:1;857:18:12::0;::::1;877:12;:10;;;:12;;:::i;:::-;846:10;;;:44;;:::i;:::-;901:38;757:25;926:12;:10;;;:12;;:::i;:::-;901:10;;;:38;;:::i;:::-;487:742:::0;;590:96:9;643:7;669:10;662:17;;590:96;:::o;6580:110:1:-;6658:25;6669:4;6675:7;6658:10;;;:25;;:::i;:::-;6580:110;;:::o;7017:184::-;7090:33;7115:7;7090:6;:12;7097:4;7090:12;;;;;;;;;;;:20;;:24;;;;:33;;;;:::i;:::-;7086:109;;;7171:12;:10;;;:12;;:::i;:::-;7144:40;;7162:7;7144:40;;7156:4;7144:40;;;;;;;;;;7086:109;7017:184;;:::o;6421:150:10:-;6491:4;6514:50;6519:3;:10;;6555:5;6539:23;;6531:32;;6514:4;;;:50;;:::i;:::-;6507:57;;6421:150;;;;:::o;1632:404::-;1695:4;1716:21;1726:3;1731:5;1716:9;;;:21;;:::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;3797:127::-;3870:4;3916:1;3893:3;:12;;:19;3906:5;3893:19;;;;;;;;;;;;:24;;3886:31;;3797:127;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;487:742:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_74":{"entryPoint":3327,"id":74,"parameterSlots":0,"returnSlots":0},"@MANAGER_ROLE_2564":{"entryPoint":3859,"id":2564,"parameterSlots":0,"returnSlots":0},"@_add_2027":{"entryPoint":7215,"id":2027,"parameterSlots":2,"returnSlots":1},"@_approve_1276":{"entryPoint":4330,"id":1276,"parameterSlots":3,"returnSlots":0},"@_at_2167":{"entryPoint":7047,"id":2167,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_1298":{"entryPoint":6857,"id":1298,"parameterSlots":3,"returnSlots":0},"@_burn_1231":{"entryPoint":5930,"id":1231,"parameterSlots":2,"returnSlots":0},"@_contains_2127":{"entryPoint":7163,"id":2127,"parameterSlots":2,"returnSlots":1},"@_grantRole_306":{"entryPoint":5540,"id":306,"parameterSlots":2,"returnSlots":0},"@_length_2141":{"entryPoint":7198,"id":2141,"parameterSlots":1,"returnSlots":1},"@_mint_1175":{"entryPoint":6433,"id":1175,"parameterSlots":2,"returnSlots":0},"@_msgSender_1962":{"entryPoint":4322,"id":1962,"parameterSlots":0,"returnSlots":1},"@_remove_2108":{"entryPoint":7327,"id":2108,"parameterSlots":2,"returnSlots":1},"@_revokeRole_330":{"entryPoint":5688,"id":330,"parameterSlots":2,"returnSlots":0},"@_transfer_1120":{"entryPoint":4787,"id":1120,"parameterSlots":3,"returnSlots":0},"@add_2289":{"entryPoint":6862,"id":2289,"parameterSlots":2,"returnSlots":1},"@add_623":{"entryPoint":5836,"id":623,"parameterSlots":2,"returnSlots":1},"@allowance_938":{"entryPoint":3724,"id":938,"parameterSlots":2,"returnSlots":1},"@approve_959":{"entryPoint":1493,"id":959,"parameterSlots":2,"returnSlots":1},"@at_2385":{"entryPoint":6359,"id":2385,"parameterSlots":2,"returnSlots":1},"@balanceOf_899":{"entryPoint":2251,"id":899,"parameterSlots":1,"returnSlots":1},"@burnFrom_1357":{"entryPoint":2640,"id":1357,"parameterSlots":2,"returnSlots":0},"@burn_1324":{"entryPoint":2231,"id":1324,"parameterSlots":1,"returnSlots":0},"@contains_2343":{"entryPoint":6385,"id":2343,"parameterSlots":2,"returnSlots":1},"@decimals_875":{"entryPoint":1898,"id":875,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1054":{"entryPoint":3334,"id":1054,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_169":{"entryPoint":1750,"id":169,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_136":{"entryPoint":3569,"id":136,"parameterSlots":1,"returnSlots":1},"@getRoleMember_155":{"entryPoint":2780,"id":155,"parameterSlots":2,"returnSlots":1},"@grantRole_195":{"entryPoint":1782,"id":195,"parameterSlots":2,"returnSlots":0},"@hasRole_120":{"entryPoint":2830,"id":120,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1025":{"entryPoint":2052,"id":1025,"parameterSlots":2,"returnSlots":1},"@length_2358":{"entryPoint":6836,"id":2358,"parameterSlots":1,"returnSlots":1},"@mint_2625":{"entryPoint":3026,"id":2625,"parameterSlots":1,"returnSlots":0},"@name_857":{"entryPoint":1347,"id":857,"parameterSlots":0,"returnSlots":1},"@owner_376":{"entryPoint":2738,"id":376,"parameterSlots":0,"returnSlots":1},"@remove_2316":{"entryPoint":6910,"id":2316,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_412":{"entryPoint":2323,"id":412,"parameterSlots":0,"returnSlots":0},"@renounceRole_243":{"entryPoint":1921,"id":243,"parameterSlots":2,"returnSlots":0},"@revokeRole_221":{"entryPoint":3608,"id":221,"parameterSlots":2,"returnSlots":0},"@sub_645":{"entryPoint":6958,"id":645,"parameterSlots":2,"returnSlots":1},"@sub_747":{"entryPoint":5446,"id":747,"parameterSlots":3,"returnSlots":1},"@symbol_866":{"entryPoint":2880,"id":866,"parameterSlots":0,"returnSlots":1},"@totalSupply_885":{"entryPoint":1523,"id":885,"parameterSlots":0,"returnSlots":1},"@transferFrom_997":{"entryPoint":1533,"id":997,"parameterSlots":3,"returnSlots":1},"@transferOwnership_440":{"entryPoint":3895,"id":440,"parameterSlots":1,"returnSlots":0},"@transfer_920":{"entryPoint":3539,"id":920,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8637,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8098,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7938,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8322,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":8573,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":8441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8531,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8014,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack":{"entryPoint":10881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":10114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack":{"entryPoint":8876,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":9530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":9822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack":{"entryPoint":10373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack":{"entryPoint":10735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack":{"entryPoint":9384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack":{"entryPoint":9238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":9130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":10519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":9968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":9676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":9022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":10627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8056,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8414,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7607,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7618,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10280,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10228,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7822,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8002,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8181,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7790,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7884,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8386,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7635,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8748,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10181,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8701,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10995,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10948,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7785,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7677,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb":{"entryPoint":10802,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":10035,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811":{"entryPoint":8797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":9451,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":9743,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a":{"entryPoint":10332,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862":{"entryPoint":10694,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3":{"entryPoint":9305,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd":{"entryPoint":9197,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":9089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":10440,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":9889,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":9597,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":8943,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":10586,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7840,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8191,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7894,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25007:14","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:14","statements":[{"nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:14"},"nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nodeType":"YulBlock","src":"208:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:14"},"nodeType":"YulFunctionCall","src":"218:19:14"},"nodeType":"YulExpressionStatement","src":"218:19:14"},{"nodeType":"YulAssignment","src":"246:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:14"},"nodeType":"YulFunctionCall","src":"261:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:14","type":""}],"src":"112:169:14"},{"body":{"nodeType":"YulBlock","src":"349:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:14"},"nodeType":"YulFunctionCall","src":"449:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:14"},"nodeType":"YulFunctionCall","src":"468:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:14"},"nodeType":"YulFunctionCall","src":"462:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:14"},"nodeType":"YulFunctionCall","src":"442:39:14"},"nodeType":"YulExpressionStatement","src":"442:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:14"},"nodeType":"YulFunctionCall","src":"386:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:14","statements":[{"nodeType":"YulAssignment","src":"402:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:14"},"nodeType":"YulFunctionCall","src":"407:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:14","statements":[]},"src":"378:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:14"},"nodeType":"YulFunctionCall","src":"507:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:14"},"nodeType":"YulFunctionCall","src":"500:27:14"},"nodeType":"YulExpressionStatement","src":"500:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:14","type":""}],"src":"287:246:14"},{"body":{"nodeType":"YulBlock","src":"587:54:14","statements":[{"nodeType":"YulAssignment","src":"597:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:14"},"nodeType":"YulFunctionCall","src":"627:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:14"},"nodeType":"YulFunctionCall","src":"607:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:14","type":""}],"src":"539:102:14"},{"body":{"nodeType":"YulBlock","src":"739:285:14","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:14"},"nodeType":"YulFunctionCall","src":"763:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:14","type":""}]},{"nodeType":"YulAssignment","src":"811:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:14"},"nodeType":"YulFunctionCall","src":"818:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:14"},"nodeType":"YulFunctionCall","src":"933:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:14"},"nodeType":"YulFunctionCall","src":"898:65:14"},"nodeType":"YulExpressionStatement","src":"898:65:14"},{"nodeType":"YulAssignment","src":"972:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:14"},"nodeType":"YulFunctionCall","src":"988:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:14"},"nodeType":"YulFunctionCall","src":"979:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:14","type":""}],"src":"647:377:14"},{"body":{"nodeType":"YulBlock","src":"1148:195:14","statements":[{"nodeType":"YulAssignment","src":"1158:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:14"},"nodeType":"YulFunctionCall","src":"1166:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:14"},"nodeType":"YulFunctionCall","src":"1201:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:14"},"nodeType":"YulFunctionCall","src":"1220:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:14"},"nodeType":"YulFunctionCall","src":"1194:47:14"},"nodeType":"YulExpressionStatement","src":"1194:47:14"},{"nodeType":"YulAssignment","src":"1250:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:14"},"nodeType":"YulFunctionCall","src":"1258:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:14","type":""}],"src":"1030:313:14"},{"body":{"nodeType":"YulBlock","src":"1389:35:14","statements":[{"nodeType":"YulAssignment","src":"1399:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:14"},"nodeType":"YulFunctionCall","src":"1409:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:14","type":""}],"src":"1349:75:14"},{"body":{"nodeType":"YulBlock","src":"1519:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:14"},"nodeType":"YulFunctionCall","src":"1529:12:14"},"nodeType":"YulExpressionStatement","src":"1529:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:14"},{"body":{"nodeType":"YulBlock","src":"1642:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:14"},"nodeType":"YulFunctionCall","src":"1652:12:14"},"nodeType":"YulExpressionStatement","src":"1652:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:14"},{"body":{"nodeType":"YulBlock","src":"1721:81:14","statements":[{"nodeType":"YulAssignment","src":"1731:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1676:126:14"},{"body":{"nodeType":"YulBlock","src":"1853:51:14","statements":[{"nodeType":"YulAssignment","src":"1863:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:14"},"nodeType":"YulFunctionCall","src":"1874:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:14","type":""}],"src":"1808:96:14"},{"body":{"nodeType":"YulBlock","src":"1953:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:14"},"nodeType":"YulFunctionCall","src":"1983:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:14"},"nodeType":"YulFunctionCall","src":"1973:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:14"},"nodeType":"YulFunctionCall","src":"1966:43:14"},"nodeType":"YulIf","src":"1963:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:14","type":""}],"src":"1910:122:14"},{"body":{"nodeType":"YulBlock","src":"2090:87:14","statements":[{"nodeType":"YulAssignment","src":"2100:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:14"},"nodeType":"YulFunctionCall","src":"2109:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:14"},"nodeType":"YulFunctionCall","src":"2138:33:14"},"nodeType":"YulExpressionStatement","src":"2138:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:14","type":""}],"src":"2038:139:14"},{"body":{"nodeType":"YulBlock","src":"2228:32:14","statements":[{"nodeType":"YulAssignment","src":"2238:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:14","type":""}],"src":"2183:77:14"},{"body":{"nodeType":"YulBlock","src":"2309:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:14"},"nodeType":"YulFunctionCall","src":"2368:12:14"},"nodeType":"YulExpressionStatement","src":"2368:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:14"},"nodeType":"YulFunctionCall","src":"2339:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:14"},"nodeType":"YulFunctionCall","src":"2329:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:14"},"nodeType":"YulFunctionCall","src":"2322:43:14"},"nodeType":"YulIf","src":"2319:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:14","type":""}],"src":"2266:122:14"},{"body":{"nodeType":"YulBlock","src":"2446:87:14","statements":[{"nodeType":"YulAssignment","src":"2456:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:14"},"nodeType":"YulFunctionCall","src":"2465:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:14"},"nodeType":"YulFunctionCall","src":"2494:33:14"},"nodeType":"YulExpressionStatement","src":"2494:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:14","type":""}],"src":"2394:139:14"},{"body":{"nodeType":"YulBlock","src":"2622:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:14"},"nodeType":"YulFunctionCall","src":"2670:79:14"},"nodeType":"YulExpressionStatement","src":"2670:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:14"},"nodeType":"YulFunctionCall","src":"2639:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:14"},"nodeType":"YulFunctionCall","src":"2635:32:14"},"nodeType":"YulIf","src":"2632:119:14"},{"nodeType":"YulBlock","src":"2761:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:14"},"nodeType":"YulFunctionCall","src":"2836:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:14"},"nodeType":"YulFunctionCall","src":"2815:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:14"}]}]},{"nodeType":"YulBlock","src":"2888:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:14"},"nodeType":"YulFunctionCall","src":"2964:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:14"},"nodeType":"YulFunctionCall","src":"2943:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:14","type":""}],"src":"2539:474:14"},{"body":{"nodeType":"YulBlock","src":"3061:48:14","statements":[{"nodeType":"YulAssignment","src":"3071:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:14"},"nodeType":"YulFunctionCall","src":"3089:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:14"},"nodeType":"YulFunctionCall","src":"3082:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:14","type":""}],"src":"3019:90:14"},{"body":{"nodeType":"YulBlock","src":"3174:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:14"},"nodeType":"YulFunctionCall","src":"3196:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:14"},"nodeType":"YulFunctionCall","src":"3184:34:14"},"nodeType":"YulExpressionStatement","src":"3184:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:14","type":""}],"src":"3115:109:14"},{"body":{"nodeType":"YulBlock","src":"3322:118:14","statements":[{"nodeType":"YulAssignment","src":"3332:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:14"},"nodeType":"YulFunctionCall","src":"3340:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:14"},"nodeType":"YulFunctionCall","src":"3415:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:14"},"nodeType":"YulFunctionCall","src":"3368:65:14"},"nodeType":"YulExpressionStatement","src":"3368:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:14","type":""}],"src":"3230:210:14"},{"body":{"nodeType":"YulBlock","src":"3511:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:14"},"nodeType":"YulFunctionCall","src":"3533:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:14"},"nodeType":"YulFunctionCall","src":"3521:37:14"},"nodeType":"YulExpressionStatement","src":"3521:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:14","type":""}],"src":"3446:118:14"},{"body":{"nodeType":"YulBlock","src":"3668:124:14","statements":[{"nodeType":"YulAssignment","src":"3678:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:14"},"nodeType":"YulFunctionCall","src":"3686:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:14"},"nodeType":"YulFunctionCall","src":"3767:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:14"},"nodeType":"YulFunctionCall","src":"3714:71:14"},"nodeType":"YulExpressionStatement","src":"3714:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:14","type":""}],"src":"3570:222:14"},{"body":{"nodeType":"YulBlock","src":"3898:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:14"},"nodeType":"YulFunctionCall","src":"3946:79:14"},"nodeType":"YulExpressionStatement","src":"3946:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:14"},"nodeType":"YulFunctionCall","src":"3915:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:14"},"nodeType":"YulFunctionCall","src":"3911:32:14"},"nodeType":"YulIf","src":"3908:119:14"},{"nodeType":"YulBlock","src":"4037:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:14"},"nodeType":"YulFunctionCall","src":"4112:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:14"},"nodeType":"YulFunctionCall","src":"4091:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:14"}]}]},{"nodeType":"YulBlock","src":"4164:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:14"},"nodeType":"YulFunctionCall","src":"4240:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:14"},"nodeType":"YulFunctionCall","src":"4219:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:14"}]}]},{"nodeType":"YulBlock","src":"4292:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:14"},"nodeType":"YulFunctionCall","src":"4368:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:14"},"nodeType":"YulFunctionCall","src":"4347:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:14","type":""}],"src":"3798:619:14"},{"body":{"nodeType":"YulBlock","src":"4468:32:14","statements":[{"nodeType":"YulAssignment","src":"4478:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4489:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4478:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4450:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4460:7:14","type":""}],"src":"4423:77:14"},{"body":{"nodeType":"YulBlock","src":"4549:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"4606:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4615:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4618:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4608:6:14"},"nodeType":"YulFunctionCall","src":"4608:12:14"},"nodeType":"YulExpressionStatement","src":"4608:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4572:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4597:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4579:17:14"},"nodeType":"YulFunctionCall","src":"4579:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4569:2:14"},"nodeType":"YulFunctionCall","src":"4569:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4562:6:14"},"nodeType":"YulFunctionCall","src":"4562:43:14"},"nodeType":"YulIf","src":"4559:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4542:5:14","type":""}],"src":"4506:122:14"},{"body":{"nodeType":"YulBlock","src":"4686:87:14","statements":[{"nodeType":"YulAssignment","src":"4696:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4718:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4705:12:14"},"nodeType":"YulFunctionCall","src":"4705:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4696:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4761:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4734:26:14"},"nodeType":"YulFunctionCall","src":"4734:33:14"},"nodeType":"YulExpressionStatement","src":"4734:33:14"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4664:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4672:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4680:5:14","type":""}],"src":"4634:139:14"},{"body":{"nodeType":"YulBlock","src":"4845:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"4891:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4893:77:14"},"nodeType":"YulFunctionCall","src":"4893:79:14"},"nodeType":"YulExpressionStatement","src":"4893:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4866:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4862:3:14"},"nodeType":"YulFunctionCall","src":"4862:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4858:3:14"},"nodeType":"YulFunctionCall","src":"4858:32:14"},"nodeType":"YulIf","src":"4855:119:14"},{"nodeType":"YulBlock","src":"4984:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4999:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5013:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5003:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5028:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5074:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:14"},"nodeType":"YulFunctionCall","src":"5059:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5083:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5038:20:14"},"nodeType":"YulFunctionCall","src":"5038:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5028:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4815:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4826:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4838:6:14","type":""}],"src":"4779:329:14"},{"body":{"nodeType":"YulBlock","src":"5179:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5196:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5219:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5201:17:14"},"nodeType":"YulFunctionCall","src":"5201:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5189:6:14"},"nodeType":"YulFunctionCall","src":"5189:37:14"},"nodeType":"YulExpressionStatement","src":"5189:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5167:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5174:3:14","type":""}],"src":"5114:118:14"},{"body":{"nodeType":"YulBlock","src":"5336:124:14","statements":[{"nodeType":"YulAssignment","src":"5346:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5358:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5369:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5354:3:14"},"nodeType":"YulFunctionCall","src":"5354:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5346:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5426:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5439:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5450:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5435:3:14"},"nodeType":"YulFunctionCall","src":"5435:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5382:43:14"},"nodeType":"YulFunctionCall","src":"5382:71:14"},"nodeType":"YulExpressionStatement","src":"5382:71:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5308:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5320:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5331:4:14","type":""}],"src":"5238:222:14"},{"body":{"nodeType":"YulBlock","src":"5549:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5595:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5597:77:14"},"nodeType":"YulFunctionCall","src":"5597:79:14"},"nodeType":"YulExpressionStatement","src":"5597:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5570:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5579:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5566:3:14"},"nodeType":"YulFunctionCall","src":"5566:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5562:3:14"},"nodeType":"YulFunctionCall","src":"5562:32:14"},"nodeType":"YulIf","src":"5559:119:14"},{"nodeType":"YulBlock","src":"5688:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5703:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5717:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5707:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5732:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5778:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:14"},"nodeType":"YulFunctionCall","src":"5763:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5787:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5742:20:14"},"nodeType":"YulFunctionCall","src":"5742:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5732:6:14"}]}]},{"nodeType":"YulBlock","src":"5815:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5830:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5860:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5895:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5906:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5891:3:14"},"nodeType":"YulFunctionCall","src":"5891:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5915:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5870:20:14"},"nodeType":"YulFunctionCall","src":"5870:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5860:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5511:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5522:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5534:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5542:6:14","type":""}],"src":"5466:474:14"},{"body":{"nodeType":"YulBlock","src":"5989:43:14","statements":[{"nodeType":"YulAssignment","src":"5999:27:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6014:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6021:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6010:3:14"},"nodeType":"YulFunctionCall","src":"6010:16:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5999:7:14"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5971:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5981:7:14","type":""}],"src":"5946:86:14"},{"body":{"nodeType":"YulBlock","src":"6099:51:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6116:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6137:5:14"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6121:15:14"},"nodeType":"YulFunctionCall","src":"6121:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6109:6:14"},"nodeType":"YulFunctionCall","src":"6109:35:14"},"nodeType":"YulExpressionStatement","src":"6109:35:14"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6087:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6094:3:14","type":""}],"src":"6038:112:14"},{"body":{"nodeType":"YulBlock","src":"6250:120:14","statements":[{"nodeType":"YulAssignment","src":"6260:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6283:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6268:3:14"},"nodeType":"YulFunctionCall","src":"6268:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6260:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6336:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6349:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6360:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:14"},"nodeType":"YulFunctionCall","src":"6345:17:14"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"6296:39:14"},"nodeType":"YulFunctionCall","src":"6296:67:14"},"nodeType":"YulExpressionStatement","src":"6296:67:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6222:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6234:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6245:4:14","type":""}],"src":"6156:214:14"},{"body":{"nodeType":"YulBlock","src":"6442:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6488:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6490:77:14"},"nodeType":"YulFunctionCall","src":"6490:79:14"},"nodeType":"YulExpressionStatement","src":"6490:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6463:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6472:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6459:3:14"},"nodeType":"YulFunctionCall","src":"6459:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6484:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6455:3:14"},"nodeType":"YulFunctionCall","src":"6455:32:14"},"nodeType":"YulIf","src":"6452:119:14"},{"nodeType":"YulBlock","src":"6581:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6596:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6610:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6600:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6625:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6660:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6671:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6656:3:14"},"nodeType":"YulFunctionCall","src":"6656:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6680:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6635:20:14"},"nodeType":"YulFunctionCall","src":"6635:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6625:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6412:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6423:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6435:6:14","type":""}],"src":"6376:329:14"},{"body":{"nodeType":"YulBlock","src":"6777:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6823:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6825:77:14"},"nodeType":"YulFunctionCall","src":"6825:79:14"},"nodeType":"YulExpressionStatement","src":"6825:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6798:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6807:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6794:3:14"},"nodeType":"YulFunctionCall","src":"6794:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6819:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6790:3:14"},"nodeType":"YulFunctionCall","src":"6790:32:14"},"nodeType":"YulIf","src":"6787:119:14"},{"nodeType":"YulBlock","src":"6916:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6931:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6945:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6935:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6960:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6995:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7006:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:14"},"nodeType":"YulFunctionCall","src":"6991:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7015:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6970:20:14"},"nodeType":"YulFunctionCall","src":"6970:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6960:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6747:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6758:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6770:6:14","type":""}],"src":"6711:329:14"},{"body":{"nodeType":"YulBlock","src":"7111:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7128:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7151:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7133:17:14"},"nodeType":"YulFunctionCall","src":"7133:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7121:6:14"},"nodeType":"YulFunctionCall","src":"7121:37:14"},"nodeType":"YulExpressionStatement","src":"7121:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7099:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7106:3:14","type":""}],"src":"7046:118:14"},{"body":{"nodeType":"YulBlock","src":"7268:124:14","statements":[{"nodeType":"YulAssignment","src":"7278:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7290:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7301:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7286:3:14"},"nodeType":"YulFunctionCall","src":"7286:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7278:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7358:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7371:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7382:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:14"},"nodeType":"YulFunctionCall","src":"7367:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7314:43:14"},"nodeType":"YulFunctionCall","src":"7314:71:14"},"nodeType":"YulExpressionStatement","src":"7314:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7240:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7252:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7263:4:14","type":""}],"src":"7170:222:14"},{"body":{"nodeType":"YulBlock","src":"7481:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"7527:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7529:77:14"},"nodeType":"YulFunctionCall","src":"7529:79:14"},"nodeType":"YulExpressionStatement","src":"7529:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7502:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7511:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7498:3:14"},"nodeType":"YulFunctionCall","src":"7498:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7523:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7494:3:14"},"nodeType":"YulFunctionCall","src":"7494:32:14"},"nodeType":"YulIf","src":"7491:119:14"},{"nodeType":"YulBlock","src":"7620:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7635:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7649:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7639:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7664:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7699:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7710:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7695:3:14"},"nodeType":"YulFunctionCall","src":"7695:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7719:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7674:20:14"},"nodeType":"YulFunctionCall","src":"7674:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7664:6:14"}]}]},{"nodeType":"YulBlock","src":"7747:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7762:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7776:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7766:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7792:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7827:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7838:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:14"},"nodeType":"YulFunctionCall","src":"7823:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7847:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7802:20:14"},"nodeType":"YulFunctionCall","src":"7802:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7792:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7443:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7454:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7466:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7474:6:14","type":""}],"src":"7398:474:14"},{"body":{"nodeType":"YulBlock","src":"7961:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"8007:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8009:77:14"},"nodeType":"YulFunctionCall","src":"8009:79:14"},"nodeType":"YulExpressionStatement","src":"8009:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7982:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7991:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7978:3:14"},"nodeType":"YulFunctionCall","src":"7978:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"8003:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7974:3:14"},"nodeType":"YulFunctionCall","src":"7974:32:14"},"nodeType":"YulIf","src":"7971:119:14"},{"nodeType":"YulBlock","src":"8100:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8115:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8129:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8119:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8144:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8179:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8190:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8175:3:14"},"nodeType":"YulFunctionCall","src":"8175:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8199:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8154:20:14"},"nodeType":"YulFunctionCall","src":"8154:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8144:6:14"}]}]},{"nodeType":"YulBlock","src":"8227:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8242:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8256:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8246:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8272:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8318:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8303:3:14"},"nodeType":"YulFunctionCall","src":"8303:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8327:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8282:20:14"},"nodeType":"YulFunctionCall","src":"8282:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8272:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7923:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7934:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7946:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7954:6:14","type":""}],"src":"7878:474:14"},{"body":{"nodeType":"YulBlock","src":"8386:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:14"},"nodeType":"YulFunctionCall","src":"8396:88:14"},"nodeType":"YulExpressionStatement","src":"8396:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8500:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8503:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8493:6:14"},"nodeType":"YulFunctionCall","src":"8493:15:14"},"nodeType":"YulExpressionStatement","src":"8493:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8524:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8527:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8517:6:14"},"nodeType":"YulFunctionCall","src":"8517:15:14"},"nodeType":"YulExpressionStatement","src":"8517:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8358:180:14"},{"body":{"nodeType":"YulBlock","src":"8595:269:14","statements":[{"nodeType":"YulAssignment","src":"8605:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8619:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8615:3:14"},"nodeType":"YulFunctionCall","src":"8615:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8605:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"8636:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8666:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8672:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8662:3:14"},"nodeType":"YulFunctionCall","src":"8662:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8640:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8713:51:14","statements":[{"nodeType":"YulAssignment","src":"8727:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8741:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8749:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8737:3:14"},"nodeType":"YulFunctionCall","src":"8737:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8727:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8693:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8686:6:14"},"nodeType":"YulFunctionCall","src":"8686:26:14"},"nodeType":"YulIf","src":"8683:81:14"},{"body":{"nodeType":"YulBlock","src":"8816:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8830:16:14"},"nodeType":"YulFunctionCall","src":"8830:18:14"},"nodeType":"YulExpressionStatement","src":"8830:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8780:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8803:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8811:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8800:2:14"},"nodeType":"YulFunctionCall","src":"8800:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8777:2:14"},"nodeType":"YulFunctionCall","src":"8777:38:14"},"nodeType":"YulIf","src":"8774:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8579:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8588:6:14","type":""}],"src":"8544:320:14"},{"body":{"nodeType":"YulBlock","src":"8976:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8998:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9006:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8994:3:14"},"nodeType":"YulFunctionCall","src":"8994:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e","kind":"string","nodeType":"YulLiteral","src":"9010:34:14","type":"","value":"AccessControl: sender must be an"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:14"},"nodeType":"YulFunctionCall","src":"8987:58:14"},"nodeType":"YulExpressionStatement","src":"8987:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9066:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9074:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9062:3:14"},"nodeType":"YulFunctionCall","src":"9062:15:14"},{"hexValue":"2061646d696e20746f206772616e74","kind":"string","nodeType":"YulLiteral","src":"9079:17:14","type":"","value":" admin to grant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9055:6:14"},"nodeType":"YulFunctionCall","src":"9055:42:14"},"nodeType":"YulExpressionStatement","src":"9055:42:14"}]},"name":"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8968:6:14","type":""}],"src":"8870:234:14"},{"body":{"nodeType":"YulBlock","src":"9256:220:14","statements":[{"nodeType":"YulAssignment","src":"9266:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9332:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9337:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9273:58:14"},"nodeType":"YulFunctionCall","src":"9273:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9266:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9438:3:14"}],"functionName":{"name":"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","nodeType":"YulIdentifier","src":"9349:88:14"},"nodeType":"YulFunctionCall","src":"9349:93:14"},"nodeType":"YulExpressionStatement","src":"9349:93:14"},{"nodeType":"YulAssignment","src":"9451:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9462:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9467:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9458:3:14"},"nodeType":"YulFunctionCall","src":"9458:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9451:3:14"}]}]},"name":"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9244:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9252:3:14","type":""}],"src":"9110:366:14"},{"body":{"nodeType":"YulBlock","src":"9653:248:14","statements":[{"nodeType":"YulAssignment","src":"9663:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9675:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9686:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:14"},"nodeType":"YulFunctionCall","src":"9671:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9663:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9710:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9721:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9706:3:14"},"nodeType":"YulFunctionCall","src":"9706:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9729:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9735:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9725:3:14"},"nodeType":"YulFunctionCall","src":"9725:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9699:6:14"},"nodeType":"YulFunctionCall","src":"9699:47:14"},"nodeType":"YulExpressionStatement","src":"9699:47:14"},{"nodeType":"YulAssignment","src":"9755:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9889:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9763:124:14"},"nodeType":"YulFunctionCall","src":"9763:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9755:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9633:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9648:4:14","type":""}],"src":"9482:419:14"},{"body":{"nodeType":"YulBlock","src":"10013:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10035:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10043:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10031:3:14"},"nodeType":"YulFunctionCall","src":"10031:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"10047:34:14","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10024:6:14"},"nodeType":"YulFunctionCall","src":"10024:58:14"},"nodeType":"YulExpressionStatement","src":"10024:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10103:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10111:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10099:3:14"},"nodeType":"YulFunctionCall","src":"10099:15:14"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"10116:17:14","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10092:6:14"},"nodeType":"YulFunctionCall","src":"10092:42:14"},"nodeType":"YulExpressionStatement","src":"10092:42:14"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10005:6:14","type":""}],"src":"9907:234:14"},{"body":{"nodeType":"YulBlock","src":"10293:220:14","statements":[{"nodeType":"YulAssignment","src":"10303:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10369:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10374:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10310:58:14"},"nodeType":"YulFunctionCall","src":"10310:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10303:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10475:3:14"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"10386:88:14"},"nodeType":"YulFunctionCall","src":"10386:93:14"},"nodeType":"YulExpressionStatement","src":"10386:93:14"},{"nodeType":"YulAssignment","src":"10488:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10499:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10504:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10495:3:14"},"nodeType":"YulFunctionCall","src":"10495:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10488:3:14"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10281:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10289:3:14","type":""}],"src":"10147:366:14"},{"body":{"nodeType":"YulBlock","src":"10690:248:14","statements":[{"nodeType":"YulAssignment","src":"10700:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10712:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10723:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10708:3:14"},"nodeType":"YulFunctionCall","src":"10708:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10700:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10747:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10743:3:14"},"nodeType":"YulFunctionCall","src":"10743:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10772:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10762:3:14"},"nodeType":"YulFunctionCall","src":"10762:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10736:6:14"},"nodeType":"YulFunctionCall","src":"10736:47:14"},"nodeType":"YulExpressionStatement","src":"10736:47:14"},{"nodeType":"YulAssignment","src":"10792:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10926:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10800:124:14"},"nodeType":"YulFunctionCall","src":"10800:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10792:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10670:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10685:4:14","type":""}],"src":"10519:419:14"},{"body":{"nodeType":"YulBlock","src":"11050:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11072:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11080:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11068:3:14"},"nodeType":"YulFunctionCall","src":"11068:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11084:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11061:6:14"},"nodeType":"YulFunctionCall","src":"11061:58:14"},"nodeType":"YulExpressionStatement","src":"11061:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11042:6:14","type":""}],"src":"10944:182:14"},{"body":{"nodeType":"YulBlock","src":"11278:220:14","statements":[{"nodeType":"YulAssignment","src":"11288:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11354:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11359:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11295:58:14"},"nodeType":"YulFunctionCall","src":"11295:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11288:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11460:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"11371:88:14"},"nodeType":"YulFunctionCall","src":"11371:93:14"},"nodeType":"YulExpressionStatement","src":"11371:93:14"},{"nodeType":"YulAssignment","src":"11473:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11484:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11489:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11480:3:14"},"nodeType":"YulFunctionCall","src":"11480:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11473:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11266:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11274:3:14","type":""}],"src":"11132:366:14"},{"body":{"nodeType":"YulBlock","src":"11675:248:14","statements":[{"nodeType":"YulAssignment","src":"11685:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11693:3:14"},"nodeType":"YulFunctionCall","src":"11693:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11685:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11732:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11743:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11728:3:14"},"nodeType":"YulFunctionCall","src":"11728:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11751:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11757:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11747:3:14"},"nodeType":"YulFunctionCall","src":"11747:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11721:6:14"},"nodeType":"YulFunctionCall","src":"11721:47:14"},"nodeType":"YulExpressionStatement","src":"11721:47:14"},{"nodeType":"YulAssignment","src":"11777:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11911:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11785:124:14"},"nodeType":"YulFunctionCall","src":"11785:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11777:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11655:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11670:4:14","type":""}],"src":"11504:419:14"},{"body":{"nodeType":"YulBlock","src":"12035:55:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12057:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12065:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:14"},"nodeType":"YulFunctionCall","src":"12053:14:14"},{"hexValue":"4e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"12069:13:14","type":"","value":"Not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12046:6:14"},"nodeType":"YulFunctionCall","src":"12046:37:14"},"nodeType":"YulExpressionStatement","src":"12046:37:14"}]},"name":"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12027:6:14","type":""}],"src":"11929:161:14"},{"body":{"nodeType":"YulBlock","src":"12242:220:14","statements":[{"nodeType":"YulAssignment","src":"12252:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12318:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12323:2:14","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12259:58:14"},"nodeType":"YulFunctionCall","src":"12259:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12252:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12424:3:14"}],"functionName":{"name":"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","nodeType":"YulIdentifier","src":"12335:88:14"},"nodeType":"YulFunctionCall","src":"12335:93:14"},"nodeType":"YulExpressionStatement","src":"12335:93:14"},{"nodeType":"YulAssignment","src":"12437:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12448:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12444:3:14"},"nodeType":"YulFunctionCall","src":"12444:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12437:3:14"}]}]},"name":"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12230:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12238:3:14","type":""}],"src":"12096:366:14"},{"body":{"nodeType":"YulBlock","src":"12639:248:14","statements":[{"nodeType":"YulAssignment","src":"12649:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12661:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12672:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12657:3:14"},"nodeType":"YulFunctionCall","src":"12657:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12649:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12696:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12707:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12692:3:14"},"nodeType":"YulFunctionCall","src":"12692:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12715:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12721:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12711:3:14"},"nodeType":"YulFunctionCall","src":"12711:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12685:6:14"},"nodeType":"YulFunctionCall","src":"12685:47:14"},"nodeType":"YulExpressionStatement","src":"12685:47:14"},{"nodeType":"YulAssignment","src":"12741:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12875:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12749:124:14"},"nodeType":"YulFunctionCall","src":"12749:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12741:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12619:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12634:4:14","type":""}],"src":"12468:419:14"},{"body":{"nodeType":"YulBlock","src":"12999:129:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13021:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13029:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13017:3:14"},"nodeType":"YulFunctionCall","src":"13017:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e","kind":"string","nodeType":"YulLiteral","src":"13033:34:14","type":"","value":"AccessControl: sender must be an"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13010:6:14"},"nodeType":"YulFunctionCall","src":"13010:58:14"},"nodeType":"YulExpressionStatement","src":"13010:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13089:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13097:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13085:3:14"},"nodeType":"YulFunctionCall","src":"13085:15:14"},{"hexValue":"2061646d696e20746f207265766f6b65","kind":"string","nodeType":"YulLiteral","src":"13102:18:14","type":"","value":" admin to revoke"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13078:6:14"},"nodeType":"YulFunctionCall","src":"13078:43:14"},"nodeType":"YulExpressionStatement","src":"13078:43:14"}]},"name":"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12991:6:14","type":""}],"src":"12893:235:14"},{"body":{"nodeType":"YulBlock","src":"13280:220:14","statements":[{"nodeType":"YulAssignment","src":"13290:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13356:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13361:2:14","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13297:58:14"},"nodeType":"YulFunctionCall","src":"13297:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13290:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13462:3:14"}],"functionName":{"name":"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","nodeType":"YulIdentifier","src":"13373:88:14"},"nodeType":"YulFunctionCall","src":"13373:93:14"},"nodeType":"YulExpressionStatement","src":"13373:93:14"},{"nodeType":"YulAssignment","src":"13475:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13486:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13491:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13482:3:14"},"nodeType":"YulFunctionCall","src":"13482:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13475:3:14"}]}]},"name":"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13268:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13276:3:14","type":""}],"src":"13134:366:14"},{"body":{"nodeType":"YulBlock","src":"13677:248:14","statements":[{"nodeType":"YulAssignment","src":"13687:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13699:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13710:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13695:3:14"},"nodeType":"YulFunctionCall","src":"13695:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13687:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13734:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13745:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13730:3:14"},"nodeType":"YulFunctionCall","src":"13730:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13753:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13759:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13749:3:14"},"nodeType":"YulFunctionCall","src":"13749:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13723:6:14"},"nodeType":"YulFunctionCall","src":"13723:47:14"},"nodeType":"YulExpressionStatement","src":"13723:47:14"},{"nodeType":"YulAssignment","src":"13779:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13913:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13787:124:14"},"nodeType":"YulFunctionCall","src":"13787:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13779:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13657:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13672:4:14","type":""}],"src":"13506:419:14"},{"body":{"nodeType":"YulBlock","src":"14037:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14059:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14067:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:14"},"nodeType":"YulFunctionCall","src":"14055:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"14071:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14048:6:14"},"nodeType":"YulFunctionCall","src":"14048:58:14"},"nodeType":"YulExpressionStatement","src":"14048:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14127:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14135:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14123:3:14"},"nodeType":"YulFunctionCall","src":"14123:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"14140:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14116:6:14"},"nodeType":"YulFunctionCall","src":"14116:33:14"},"nodeType":"YulExpressionStatement","src":"14116:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14029:6:14","type":""}],"src":"13931:225:14"},{"body":{"nodeType":"YulBlock","src":"14308:220:14","statements":[{"nodeType":"YulAssignment","src":"14318:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14384:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14389:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14325:58:14"},"nodeType":"YulFunctionCall","src":"14325:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14318:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14490:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"14401:88:14"},"nodeType":"YulFunctionCall","src":"14401:93:14"},"nodeType":"YulExpressionStatement","src":"14401:93:14"},{"nodeType":"YulAssignment","src":"14503:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14514:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14519:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14510:3:14"},"nodeType":"YulFunctionCall","src":"14510:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14503:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14296:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14304:3:14","type":""}],"src":"14162:366:14"},{"body":{"nodeType":"YulBlock","src":"14705:248:14","statements":[{"nodeType":"YulAssignment","src":"14715:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14727:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14738:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14723:3:14"},"nodeType":"YulFunctionCall","src":"14723:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14715:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14762:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14773:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14758:3:14"},"nodeType":"YulFunctionCall","src":"14758:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14781:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14787:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14777:3:14"},"nodeType":"YulFunctionCall","src":"14777:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14751:6:14"},"nodeType":"YulFunctionCall","src":"14751:47:14"},"nodeType":"YulExpressionStatement","src":"14751:47:14"},{"nodeType":"YulAssignment","src":"14807:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14941:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14815:124:14"},"nodeType":"YulFunctionCall","src":"14815:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14807:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14685:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14700:4:14","type":""}],"src":"14534:419:14"},{"body":{"nodeType":"YulBlock","src":"15065:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15087:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15095:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15083:3:14"},"nodeType":"YulFunctionCall","src":"15083:14:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"15099:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15076:6:14"},"nodeType":"YulFunctionCall","src":"15076:58:14"},"nodeType":"YulExpressionStatement","src":"15076:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15155:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15151:3:14"},"nodeType":"YulFunctionCall","src":"15151:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"15168:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15144:6:14"},"nodeType":"YulFunctionCall","src":"15144:31:14"},"nodeType":"YulExpressionStatement","src":"15144:31:14"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15057:6:14","type":""}],"src":"14959:223:14"},{"body":{"nodeType":"YulBlock","src":"15334:220:14","statements":[{"nodeType":"YulAssignment","src":"15344:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15410:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15415:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15351:58:14"},"nodeType":"YulFunctionCall","src":"15351:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15344:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15516:3:14"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"15427:88:14"},"nodeType":"YulFunctionCall","src":"15427:93:14"},"nodeType":"YulExpressionStatement","src":"15427:93:14"},{"nodeType":"YulAssignment","src":"15529:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15540:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15545:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15536:3:14"},"nodeType":"YulFunctionCall","src":"15536:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15529:3:14"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15322:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15330:3:14","type":""}],"src":"15188:366:14"},{"body":{"nodeType":"YulBlock","src":"15731:248:14","statements":[{"nodeType":"YulAssignment","src":"15741:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15753:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15764:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15749:3:14"},"nodeType":"YulFunctionCall","src":"15749:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15741:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15799:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15784:3:14"},"nodeType":"YulFunctionCall","src":"15784:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15807:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15813:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15803:3:14"},"nodeType":"YulFunctionCall","src":"15803:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15777:6:14"},"nodeType":"YulFunctionCall","src":"15777:47:14"},"nodeType":"YulExpressionStatement","src":"15777:47:14"},{"nodeType":"YulAssignment","src":"15833:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15967:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15841:124:14"},"nodeType":"YulFunctionCall","src":"15841:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15833:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15711:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15726:4:14","type":""}],"src":"15560:419:14"},{"body":{"nodeType":"YulBlock","src":"16091:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16113:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16121:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:14"},"nodeType":"YulFunctionCall","src":"16109:14:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"16125:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16102:6:14"},"nodeType":"YulFunctionCall","src":"16102:58:14"},"nodeType":"YulExpressionStatement","src":"16102:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16181:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16189:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16177:3:14"},"nodeType":"YulFunctionCall","src":"16177:15:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"16194:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16170:6:14"},"nodeType":"YulFunctionCall","src":"16170:29:14"},"nodeType":"YulExpressionStatement","src":"16170:29:14"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16083:6:14","type":""}],"src":"15985:221:14"},{"body":{"nodeType":"YulBlock","src":"16358:220:14","statements":[{"nodeType":"YulAssignment","src":"16368:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16434:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16439:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16375:58:14"},"nodeType":"YulFunctionCall","src":"16375:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16368:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16540:3:14"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"16451:88:14"},"nodeType":"YulFunctionCall","src":"16451:93:14"},"nodeType":"YulExpressionStatement","src":"16451:93:14"},{"nodeType":"YulAssignment","src":"16553:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16564:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16569:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16560:3:14"},"nodeType":"YulFunctionCall","src":"16560:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16553:3:14"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16346:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16354:3:14","type":""}],"src":"16212:366:14"},{"body":{"nodeType":"YulBlock","src":"16755:248:14","statements":[{"nodeType":"YulAssignment","src":"16765:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16777:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16788:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16773:3:14"},"nodeType":"YulFunctionCall","src":"16773:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16765:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16812:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16823:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:14"},"nodeType":"YulFunctionCall","src":"16808:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16831:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16837:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16827:3:14"},"nodeType":"YulFunctionCall","src":"16827:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16801:6:14"},"nodeType":"YulFunctionCall","src":"16801:47:14"},"nodeType":"YulExpressionStatement","src":"16801:47:14"},{"nodeType":"YulAssignment","src":"16857:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16991:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16865:124:14"},"nodeType":"YulFunctionCall","src":"16865:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16857:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16735:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16750:4:14","type":""}],"src":"16584:419:14"},{"body":{"nodeType":"YulBlock","src":"17115:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17137:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17145:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17133:3:14"},"nodeType":"YulFunctionCall","src":"17133:14:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"17149:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17126:6:14"},"nodeType":"YulFunctionCall","src":"17126:58:14"},"nodeType":"YulExpressionStatement","src":"17126:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17205:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17213:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17201:3:14"},"nodeType":"YulFunctionCall","src":"17201:15:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"17218:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17194:6:14"},"nodeType":"YulFunctionCall","src":"17194:32:14"},"nodeType":"YulExpressionStatement","src":"17194:32:14"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17107:6:14","type":""}],"src":"17009:224:14"},{"body":{"nodeType":"YulBlock","src":"17385:220:14","statements":[{"nodeType":"YulAssignment","src":"17395:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17461:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17466:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17402:58:14"},"nodeType":"YulFunctionCall","src":"17402:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17395:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17567:3:14"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"17478:88:14"},"nodeType":"YulFunctionCall","src":"17478:93:14"},"nodeType":"YulExpressionStatement","src":"17478:93:14"},{"nodeType":"YulAssignment","src":"17580:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17591:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17596:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17587:3:14"},"nodeType":"YulFunctionCall","src":"17587:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17580:3:14"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17373:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17381:3:14","type":""}],"src":"17239:366:14"},{"body":{"nodeType":"YulBlock","src":"17782:248:14","statements":[{"nodeType":"YulAssignment","src":"17792:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17804:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17815:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17800:3:14"},"nodeType":"YulFunctionCall","src":"17800:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17792:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17839:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17850:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17835:3:14"},"nodeType":"YulFunctionCall","src":"17835:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17858:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17864:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17854:3:14"},"nodeType":"YulFunctionCall","src":"17854:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17828:6:14"},"nodeType":"YulFunctionCall","src":"17828:47:14"},"nodeType":"YulExpressionStatement","src":"17828:47:14"},{"nodeType":"YulAssignment","src":"17884:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18018:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17892:124:14"},"nodeType":"YulFunctionCall","src":"17892:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17884:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17762:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17777:4:14","type":""}],"src":"17611:419:14"},{"body":{"nodeType":"YulBlock","src":"18142:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18164:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18172:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18160:3:14"},"nodeType":"YulFunctionCall","src":"18160:14:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"18176:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18153:6:14"},"nodeType":"YulFunctionCall","src":"18153:58:14"},"nodeType":"YulExpressionStatement","src":"18153:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18232:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18240:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18228:3:14"},"nodeType":"YulFunctionCall","src":"18228:15:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"18245:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18221:6:14"},"nodeType":"YulFunctionCall","src":"18221:30:14"},"nodeType":"YulExpressionStatement","src":"18221:30:14"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18134:6:14","type":""}],"src":"18036:222:14"},{"body":{"nodeType":"YulBlock","src":"18410:220:14","statements":[{"nodeType":"YulAssignment","src":"18420:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18486:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18491:2:14","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18427:58:14"},"nodeType":"YulFunctionCall","src":"18427:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18420:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18592:3:14"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"18503:88:14"},"nodeType":"YulFunctionCall","src":"18503:93:14"},"nodeType":"YulExpressionStatement","src":"18503:93:14"},{"nodeType":"YulAssignment","src":"18605:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18616:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18621:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18612:3:14"},"nodeType":"YulFunctionCall","src":"18612:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18605:3:14"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18398:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18406:3:14","type":""}],"src":"18264:366:14"},{"body":{"nodeType":"YulBlock","src":"18807:248:14","statements":[{"nodeType":"YulAssignment","src":"18817:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18829:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18840:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18825:3:14"},"nodeType":"YulFunctionCall","src":"18825:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18817:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18864:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18875:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18860:3:14"},"nodeType":"YulFunctionCall","src":"18860:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18883:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"18889:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18879:3:14"},"nodeType":"YulFunctionCall","src":"18879:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18853:6:14"},"nodeType":"YulFunctionCall","src":"18853:47:14"},"nodeType":"YulExpressionStatement","src":"18853:47:14"},{"nodeType":"YulAssignment","src":"18909:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19043:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18917:124:14"},"nodeType":"YulFunctionCall","src":"18917:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18909:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18787:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18802:4:14","type":""}],"src":"18636:419:14"},{"body":{"nodeType":"YulBlock","src":"19089:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19106:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19109:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19099:6:14"},"nodeType":"YulFunctionCall","src":"19099:88:14"},"nodeType":"YulExpressionStatement","src":"19099:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19203:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19206:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19196:6:14"},"nodeType":"YulFunctionCall","src":"19196:15:14"},"nodeType":"YulExpressionStatement","src":"19196:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19227:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19230:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19220:6:14"},"nodeType":"YulFunctionCall","src":"19220:15:14"},"nodeType":"YulExpressionStatement","src":"19220:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19061:180:14"},{"body":{"nodeType":"YulBlock","src":"19292:149:14","statements":[{"nodeType":"YulAssignment","src":"19302:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19325:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19307:17:14"},"nodeType":"YulFunctionCall","src":"19307:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19302:1:14"}]},{"nodeType":"YulAssignment","src":"19336:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19359:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19341:17:14"},"nodeType":"YulFunctionCall","src":"19341:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19336:1:14"}]},{"nodeType":"YulAssignment","src":"19370:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19382:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"19385:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19378:3:14"},"nodeType":"YulFunctionCall","src":"19378:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19370:4:14"}]},{"body":{"nodeType":"YulBlock","src":"19412:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19414:16:14"},"nodeType":"YulFunctionCall","src":"19414:18:14"},"nodeType":"YulExpressionStatement","src":"19414:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"19403:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"19409:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19400:2:14"},"nodeType":"YulFunctionCall","src":"19400:11:14"},"nodeType":"YulIf","src":"19397:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19278:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"19281:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19287:4:14","type":""}],"src":"19247:194:14"},{"body":{"nodeType":"YulBlock","src":"19491:147:14","statements":[{"nodeType":"YulAssignment","src":"19501:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19524:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19506:17:14"},"nodeType":"YulFunctionCall","src":"19506:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19501:1:14"}]},{"nodeType":"YulAssignment","src":"19535:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19558:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19540:17:14"},"nodeType":"YulFunctionCall","src":"19540:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19535:1:14"}]},{"nodeType":"YulAssignment","src":"19569:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19580:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"19583:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19576:3:14"},"nodeType":"YulFunctionCall","src":"19576:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19569:3:14"}]},{"body":{"nodeType":"YulBlock","src":"19609:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19611:16:14"},"nodeType":"YulFunctionCall","src":"19611:18:14"},"nodeType":"YulExpressionStatement","src":"19611:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19601:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"19604:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19598:2:14"},"nodeType":"YulFunctionCall","src":"19598:10:14"},"nodeType":"YulIf","src":"19595:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19478:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"19481:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19487:3:14","type":""}],"src":"19447:191:14"},{"body":{"nodeType":"YulBlock","src":"19750:71:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19772:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19780:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19768:3:14"},"nodeType":"YulFunctionCall","src":"19768:14:14"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"19784:29:14","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19761:6:14"},"nodeType":"YulFunctionCall","src":"19761:53:14"},"nodeType":"YulExpressionStatement","src":"19761:53:14"}]},"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19742:6:14","type":""}],"src":"19644:177:14"},{"body":{"nodeType":"YulBlock","src":"19973:220:14","statements":[{"nodeType":"YulAssignment","src":"19983:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20049:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20054:2:14","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19990:58:14"},"nodeType":"YulFunctionCall","src":"19990:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19983:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20155:3:14"}],"functionName":{"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulIdentifier","src":"20066:88:14"},"nodeType":"YulFunctionCall","src":"20066:93:14"},"nodeType":"YulExpressionStatement","src":"20066:93:14"},{"nodeType":"YulAssignment","src":"20168:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20179:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20184:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20175:3:14"},"nodeType":"YulFunctionCall","src":"20175:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20168:3:14"}]}]},"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19961:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19969:3:14","type":""}],"src":"19827:366:14"},{"body":{"nodeType":"YulBlock","src":"20370:248:14","statements":[{"nodeType":"YulAssignment","src":"20380:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20392:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20403:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20388:3:14"},"nodeType":"YulFunctionCall","src":"20388:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20380:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20427:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20438:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20423:3:14"},"nodeType":"YulFunctionCall","src":"20423:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20446:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20452:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20442:3:14"},"nodeType":"YulFunctionCall","src":"20442:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20416:6:14"},"nodeType":"YulFunctionCall","src":"20416:47:14"},"nodeType":"YulExpressionStatement","src":"20416:47:14"},{"nodeType":"YulAssignment","src":"20472:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20606:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20480:124:14"},"nodeType":"YulFunctionCall","src":"20480:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20472:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20350:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20365:4:14","type":""}],"src":"20199:419:14"},{"body":{"nodeType":"YulBlock","src":"20730:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20752:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20760:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20748:3:14"},"nodeType":"YulFunctionCall","src":"20748:14:14"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"20764:34:14","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20741:6:14"},"nodeType":"YulFunctionCall","src":"20741:58:14"},"nodeType":"YulExpressionStatement","src":"20741:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20820:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20828:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20816:3:14"},"nodeType":"YulFunctionCall","src":"20816:15:14"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"20833:3:14","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20809:6:14"},"nodeType":"YulFunctionCall","src":"20809:28:14"},"nodeType":"YulExpressionStatement","src":"20809:28:14"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20722:6:14","type":""}],"src":"20624:220:14"},{"body":{"nodeType":"YulBlock","src":"20996:220:14","statements":[{"nodeType":"YulAssignment","src":"21006:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21072:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21077:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21013:58:14"},"nodeType":"YulFunctionCall","src":"21013:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21006:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21178:3:14"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"21089:88:14"},"nodeType":"YulFunctionCall","src":"21089:93:14"},"nodeType":"YulExpressionStatement","src":"21089:93:14"},{"nodeType":"YulAssignment","src":"21191:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21202:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21207:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21198:3:14"},"nodeType":"YulFunctionCall","src":"21198:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21191:3:14"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20984:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20992:3:14","type":""}],"src":"20850:366:14"},{"body":{"nodeType":"YulBlock","src":"21393:248:14","statements":[{"nodeType":"YulAssignment","src":"21403:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21415:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21426:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21411:3:14"},"nodeType":"YulFunctionCall","src":"21411:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21403:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21450:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21461:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21446:3:14"},"nodeType":"YulFunctionCall","src":"21446:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21469:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21475:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21465:3:14"},"nodeType":"YulFunctionCall","src":"21465:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21439:6:14"},"nodeType":"YulFunctionCall","src":"21439:47:14"},"nodeType":"YulExpressionStatement","src":"21439:47:14"},{"nodeType":"YulAssignment","src":"21495:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21629:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21503:124:14"},"nodeType":"YulFunctionCall","src":"21503:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21495:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21373:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21388:4:14","type":""}],"src":"21222:419:14"},{"body":{"nodeType":"YulBlock","src":"21753:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21775:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21783:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21771:3:14"},"nodeType":"YulFunctionCall","src":"21771:14:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"21787:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21764:6:14"},"nodeType":"YulFunctionCall","src":"21764:57:14"},"nodeType":"YulExpressionStatement","src":"21764:57:14"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21745:6:14","type":""}],"src":"21647:181:14"},{"body":{"nodeType":"YulBlock","src":"21980:220:14","statements":[{"nodeType":"YulAssignment","src":"21990:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22056:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22061:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21997:58:14"},"nodeType":"YulFunctionCall","src":"21997:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21990:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22162:3:14"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"22073:88:14"},"nodeType":"YulFunctionCall","src":"22073:93:14"},"nodeType":"YulExpressionStatement","src":"22073:93:14"},{"nodeType":"YulAssignment","src":"22175:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22186:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22191:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22182:3:14"},"nodeType":"YulFunctionCall","src":"22182:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22175:3:14"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21968:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21976:3:14","type":""}],"src":"21834:366:14"},{"body":{"nodeType":"YulBlock","src":"22377:248:14","statements":[{"nodeType":"YulAssignment","src":"22387:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22399:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22410:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22395:3:14"},"nodeType":"YulFunctionCall","src":"22395:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22387:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22434:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22445:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22430:3:14"},"nodeType":"YulFunctionCall","src":"22430:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22453:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"22459:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22449:3:14"},"nodeType":"YulFunctionCall","src":"22449:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22423:6:14"},"nodeType":"YulFunctionCall","src":"22423:47:14"},"nodeType":"YulExpressionStatement","src":"22423:47:14"},{"nodeType":"YulAssignment","src":"22479:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22613:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22487:124:14"},"nodeType":"YulFunctionCall","src":"22487:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22479:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22357:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22372:4:14","type":""}],"src":"22206:419:14"},{"body":{"nodeType":"YulBlock","src":"22737:74:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22759:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22767:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22755:3:14"},"nodeType":"YulFunctionCall","src":"22755:14:14"},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"22771:32:14","type":"","value":"SafeMath: subtraction overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22748:6:14"},"nodeType":"YulFunctionCall","src":"22748:56:14"},"nodeType":"YulExpressionStatement","src":"22748:56:14"}]},"name":"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22729:6:14","type":""}],"src":"22631:180:14"},{"body":{"nodeType":"YulBlock","src":"22963:220:14","statements":[{"nodeType":"YulAssignment","src":"22973:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23039:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23044:2:14","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22980:58:14"},"nodeType":"YulFunctionCall","src":"22980:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22973:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23145:3:14"}],"functionName":{"name":"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","nodeType":"YulIdentifier","src":"23056:88:14"},"nodeType":"YulFunctionCall","src":"23056:93:14"},"nodeType":"YulExpressionStatement","src":"23056:93:14"},{"nodeType":"YulAssignment","src":"23158:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23169:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23174:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23165:3:14"},"nodeType":"YulFunctionCall","src":"23165:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23158:3:14"}]}]},"name":"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22951:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22959:3:14","type":""}],"src":"22817:366:14"},{"body":{"nodeType":"YulBlock","src":"23360:248:14","statements":[{"nodeType":"YulAssignment","src":"23370:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23382:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23393:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23378:3:14"},"nodeType":"YulFunctionCall","src":"23378:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23370:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23417:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23428:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23413:3:14"},"nodeType":"YulFunctionCall","src":"23413:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23436:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"23442:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23432:3:14"},"nodeType":"YulFunctionCall","src":"23432:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23406:6:14"},"nodeType":"YulFunctionCall","src":"23406:47:14"},"nodeType":"YulExpressionStatement","src":"23406:47:14"},{"nodeType":"YulAssignment","src":"23462:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23596:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23470:124:14"},"nodeType":"YulFunctionCall","src":"23470:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23462:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23340:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23355:4:14","type":""}],"src":"23189:419:14"},{"body":{"nodeType":"YulBlock","src":"23720:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23742:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23750:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23738:3:14"},"nodeType":"YulFunctionCall","src":"23738:14:14"},{"hexValue":"456e756d657261626c655365743a20696e646578206f7574206f6620626f756e","kind":"string","nodeType":"YulLiteral","src":"23754:34:14","type":"","value":"EnumerableSet: index out of boun"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23731:6:14"},"nodeType":"YulFunctionCall","src":"23731:58:14"},"nodeType":"YulExpressionStatement","src":"23731:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23810:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23818:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23806:3:14"},"nodeType":"YulFunctionCall","src":"23806:15:14"},{"hexValue":"6473","kind":"string","nodeType":"YulLiteral","src":"23823:4:14","type":"","value":"ds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23799:6:14"},"nodeType":"YulFunctionCall","src":"23799:29:14"},"nodeType":"YulExpressionStatement","src":"23799:29:14"}]},"name":"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23712:6:14","type":""}],"src":"23614:221:14"},{"body":{"nodeType":"YulBlock","src":"23987:220:14","statements":[{"nodeType":"YulAssignment","src":"23997:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24063:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24068:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24004:58:14"},"nodeType":"YulFunctionCall","src":"24004:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23997:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24169:3:14"}],"functionName":{"name":"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","nodeType":"YulIdentifier","src":"24080:88:14"},"nodeType":"YulFunctionCall","src":"24080:93:14"},"nodeType":"YulExpressionStatement","src":"24080:93:14"},{"nodeType":"YulAssignment","src":"24182:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24193:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24198:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24189:3:14"},"nodeType":"YulFunctionCall","src":"24189:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24182:3:14"}]}]},"name":"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23975:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23983:3:14","type":""}],"src":"23841:366:14"},{"body":{"nodeType":"YulBlock","src":"24384:248:14","statements":[{"nodeType":"YulAssignment","src":"24394:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24406:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24417:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24402:3:14"},"nodeType":"YulFunctionCall","src":"24402:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24394:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24441:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24452:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24437:3:14"},"nodeType":"YulFunctionCall","src":"24437:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24460:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24466:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24456:3:14"},"nodeType":"YulFunctionCall","src":"24456:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24430:6:14"},"nodeType":"YulFunctionCall","src":"24430:47:14"},"nodeType":"YulExpressionStatement","src":"24430:47:14"},{"nodeType":"YulAssignment","src":"24486:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24620:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24494:124:14"},"nodeType":"YulFunctionCall","src":"24494:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24486:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24364:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24379:4:14","type":""}],"src":"24213:419:14"},{"body":{"nodeType":"YulBlock","src":"24666:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24683:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24686:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24676:6:14"},"nodeType":"YulFunctionCall","src":"24676:88:14"},"nodeType":"YulExpressionStatement","src":"24676:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24780:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24783:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24773:6:14"},"nodeType":"YulFunctionCall","src":"24773:15:14"},"nodeType":"YulExpressionStatement","src":"24773:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24804:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24807:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24797:6:14"},"nodeType":"YulFunctionCall","src":"24797:15:14"},"nodeType":"YulExpressionStatement","src":"24797:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24638:180:14"},{"body":{"nodeType":"YulBlock","src":"24852:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24869:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24872:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24862:6:14"},"nodeType":"YulFunctionCall","src":"24862:88:14"},"nodeType":"YulExpressionStatement","src":"24862:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24966:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24969:4:14","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24959:6:14"},"nodeType":"YulFunctionCall","src":"24959:15:14"},"nodeType":"YulExpressionStatement","src":"24959:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24990:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24993:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24983:6:14"},"nodeType":"YulFunctionCall","src":"24983:15:14"},"nodeType":"YulExpressionStatement","src":"24983:15:14"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"24824:180:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: sender must be an\")\n\n        mstore(add(memPtr, 32), \" admin to grant\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: sender must be an\")\n\n        mstore(add(memPtr, 32), \" admin to revoke\")\n\n    }\n\n    function abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: subtraction overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"EnumerableSet: index out of boun\")\n\n        mstore(add(memPtr, 32), \"ds\")\n\n    }\n\n    function abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063a457c2d711610097578063d547741f11610071578063d547741f146104bd578063dd62ed3e146104d9578063ec87621c14610509578063f2fde38b146105275761018e565b8063a457c2d71461042d578063a9059cbb1461045d578063ca15c8731461048d5761018e565b80638da5cb5b146103575780639010d07c1461037557806391d14854146103a557806395d89b41146103d5578063a0712d68146103f3578063a217fddf1461040f5761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146102e557806370a0823114610301578063715018a61461033157806379cc67901461033b5761018e565b8063313ce5671461027b57806336568abe1461029957806339509351146102b55761018e565b806306fdde0314610193578063095ea7b3146101b157806318160ddd146101e157806323b872dd146101ff578063248a9ca31461022f5780632f2ff15d1461025f575b600080fd5b61019b610543565b6040516101a89190611e47565b60405180910390f35b6101cb60048036038101906101c69190611f02565b6105d5565b6040516101d89190611f5d565b60405180910390f35b6101e96105f3565b6040516101f69190611f87565b60405180910390f35b61021960048036038101906102149190611fa2565b6105fd565b6040516102269190611f5d565b60405180910390f35b6102496004803603810190610244919061202b565b6106d6565b6040516102569190612067565b60405180910390f35b61027960048036038101906102749190612082565b6106f6565b005b61028361076a565b60405161029091906120de565b60405180910390f35b6102b360048036038101906102ae9190612082565b610781565b005b6102cf60048036038101906102ca9190611f02565b610804565b6040516102dc9190611f5d565b60405180910390f35b6102ff60048036038101906102fa91906120f9565b6108b7565b005b61031b60048036038101906103169190612126565b6108cb565b6040516103289190611f87565b60405180910390f35b610339610913565b005b61035560048036038101906103509190611f02565b610a50565b005b61035f610ab2565b60405161036c9190612162565b60405180910390f35b61038f600480360381019061038a919061217d565b610adc565b60405161039c9190612162565b60405180910390f35b6103bf60048036038101906103ba9190612082565b610b0e565b6040516103cc9190611f5d565b60405180910390f35b6103dd610b40565b6040516103ea9190611e47565b60405180910390f35b61040d600480360381019061040891906120f9565b610bd2565b005b610417610cff565b6040516104249190612067565b60405180910390f35b61044760048036038101906104429190611f02565b610d06565b6040516104549190611f5d565b60405180910390f35b61047760048036038101906104729190611f02565b610dd3565b6040516104849190611f5d565b60405180910390f35b6104a760048036038101906104a2919061202b565b610df1565b6040516104b49190611f87565b60405180910390f35b6104d760048036038101906104d29190612082565b610e18565b005b6104f360048036038101906104ee91906121bd565b610e8c565b6040516105009190611f87565b60405180910390f35b610511610f13565b60405161051e9190612067565b60405180910390f35b610541600480360381019061053c9190612126565b610f37565b005b6060600380546105529061222c565b80601f016020809104026020016040519081016040528092919081815260200182805461057e9061222c565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b60006105e96105e26110e2565b84846110ea565b6001905092915050565b6000600254905090565b600061060a8484846112b3565b6106cb846106166110e2565b6106c685604051806060016040528060288152602001612b6b60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061067c6110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6110ea565b600190509392505050565b600060066000838152602001908152602001600020600201549050919050565b61071d60066000848152602001908152602001600020600201546107186110e2565b610b0e565b61075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906122cf565b60405180910390fd5b61076682826115a4565b5050565b6000600560009054906101000a900460ff16905090565b6107896110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90612361565b60405180910390fd5b6108008282611638565b5050565b60006108ad6108116110e2565b846108a885600160006108226110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6110ea565b6001905092915050565b6108c86108c26110e2565b8261172a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61091b6110e2565b73ffffffffffffffffffffffffffffffffffffffff16610939610ab2565b73ffffffffffffffffffffffffffffffffffffffff161461098f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610986906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610a8f82604051806060016040528060248152602001612b9360249139610a8086610a7b6110e2565b610e8c565b6115469092919063ffffffff16565b9050610aa383610a9d6110e2565b836110ea565b610aad838361172a565b505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b0682600660008681526020019081526020016000206000016118d790919063ffffffff16565b905092915050565b6000610b3882600660008681526020019081526020016000206000016118f190919063ffffffff16565b905092915050565b606060048054610b4f9061222c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b9061222c565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b5050505050905090565b610c037f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610bfe6110e2565b610b0e565b610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3990612439565b60405180910390fd5b610c57816008546116cc90919063ffffffff16565b600881905550610caf81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cfc3382611921565b50565b6000801b81565b6000610dc9610d136110e2565b84610dc485604051806060016040528060258152602001612bb76025913960016000610d3d6110e2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6110ea565b6001905092915050565b6000610de7610de06110e2565b84846112b3565b6001905092915050565b6000610e1160066000848152602001908152602001600020600001611ab4565b9050919050565b610e3f6006600084815260200190815260200160002060020154610e3a6110e2565b610b0e565b610e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e75906124cb565b60405180910390fd5b610e888282611638565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b610f3f6110e2565b73ffffffffffffffffffffffffffffffffffffffff16610f5d610ab2565b73ffffffffffffffffffffffffffffffffffffffff1614610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110199061255d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611159576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611150906125ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bf90612681565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112a69190611f87565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131990612713565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611391576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611388906127a5565b60405180910390fd5b61139c838383611ac9565b61140781604051806060016040528060268152602001612b45602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061149a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115399190611f87565b60405180910390a3505050565b600083831115829061158e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115859190611e47565b60405180910390fd5b50828461159b91906127f4565b90509392505050565b6115cc8160066000858152602001908152602001600020600001611ace90919063ffffffff16565b15611634576115d96110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6116608160066000858152602001908152602001600020600001611afe90919063ffffffff16565b156116c85761166d6110e2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008082846116db9190612828565b905083811015611720576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611717906128a8565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611799576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117909061293a565b60405180910390fd5b6117a582600083611ac9565b61181081604051806060016040528060228152602001612b23602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115469092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061186781600254611b2e90919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118cb9190611f87565b60405180910390a35050565b60006118e68360000183611b87565b60001c905092915050565b6000611919836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611bfb565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611990576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611987906129a6565b60405180910390fd5b61199c60008383611ac9565b6119b1816002546116cc90919063ffffffff16565b600281905550611a08816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116cc90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611aa89190611f87565b60405180910390a35050565b6000611ac282600001611c1e565b9050919050565b505050565b6000611af6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c2f565b905092915050565b6000611b26836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611c9f565b905092915050565b600082821115611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90612a12565b60405180910390fd5b8183611b7f91906127f4565b905092915050565b600081836000018054905011611bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc990612aa4565b60405180910390fd5b826000018281548110611be857611be7612ac4565b5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000611c3b8383611bfb565b611c94578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611c99565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611dab576000600182611cd191906127f4565b9050600060018660000180549050611ce991906127f4565b90506000866000018281548110611d0357611d02612ac4565b5b9060005260206000200154905080876000018481548110611d2757611d26612ac4565b5b9060005260206000200181905550600183611d429190612828565b8760010160008381526020019081526020016000208190555086600001805480611d6f57611d6e612af3565b5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611db1565b60009150505b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611df1578082015181840152602081019050611dd6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e1982611db7565b611e238185611dc2565b9350611e33818560208601611dd3565b611e3c81611dfd565b840191505092915050565b60006020820190508181036000830152611e618184611e0e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e9982611e6e565b9050919050565b611ea981611e8e565b8114611eb457600080fd5b50565b600081359050611ec681611ea0565b92915050565b6000819050919050565b611edf81611ecc565b8114611eea57600080fd5b50565b600081359050611efc81611ed6565b92915050565b60008060408385031215611f1957611f18611e69565b5b6000611f2785828601611eb7565b9250506020611f3885828601611eed565b9150509250929050565b60008115159050919050565b611f5781611f42565b82525050565b6000602082019050611f726000830184611f4e565b92915050565b611f8181611ecc565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b600080600060608486031215611fbb57611fba611e69565b5b6000611fc986828701611eb7565b9350506020611fda86828701611eb7565b9250506040611feb86828701611eed565b9150509250925092565b6000819050919050565b61200881611ff5565b811461201357600080fd5b50565b60008135905061202581611fff565b92915050565b60006020828403121561204157612040611e69565b5b600061204f84828501612016565b91505092915050565b61206181611ff5565b82525050565b600060208201905061207c6000830184612058565b92915050565b6000806040838503121561209957612098611e69565b5b60006120a785828601612016565b92505060206120b885828601611eb7565b9150509250929050565b600060ff82169050919050565b6120d8816120c2565b82525050565b60006020820190506120f360008301846120cf565b92915050565b60006020828403121561210f5761210e611e69565b5b600061211d84828501611eed565b91505092915050565b60006020828403121561213c5761213b611e69565b5b600061214a84828501611eb7565b91505092915050565b61215c81611e8e565b82525050565b60006020820190506121776000830184612153565b92915050565b6000806040838503121561219457612193611e69565b5b60006121a285828601612016565b92505060206121b385828601611eed565b9150509250929050565b600080604083850312156121d4576121d3611e69565b5b60006121e285828601611eb7565b92505060206121f385828601611eb7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224457607f821691505b602082108103612257576122566121fd565b5b50919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b60006122b9602f83611dc2565b91506122c48261225d565b604082019050919050565b600060208201905081810360008301526122e8816122ac565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061234b602f83611dc2565b9150612356826122ef565b604082019050919050565b6000602082019050818103600083015261237a8161233e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123b7602083611dc2565b91506123c282612381565b602082019050919050565b600060208201905081810360008301526123e6816123aa565b9050919050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b6000612423600b83611dc2565b915061242e826123ed565b602082019050919050565b6000602082019050818103600083015261245281612416565b9050919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b60006124b5603083611dc2565b91506124c082612459565b604082019050919050565b600060208201905081810360008301526124e4816124a8565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612547602683611dc2565b9150612552826124eb565b604082019050919050565b600060208201905081810360008301526125768161253a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006125d9602483611dc2565b91506125e48261257d565b604082019050919050565b60006020820190508181036000830152612608816125cc565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061266b602283611dc2565b91506126768261260f565b604082019050919050565b6000602082019050818103600083015261269a8161265e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006126fd602583611dc2565b9150612708826126a1565b604082019050919050565b6000602082019050818103600083015261272c816126f0565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061278f602383611dc2565b915061279a82612733565b604082019050919050565b600060208201905081810360008301526127be81612782565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127ff82611ecc565b915061280a83611ecc565b9250828203905081811115612822576128216127c5565b5b92915050565b600061283382611ecc565b915061283e83611ecc565b9250828201905080821115612856576128556127c5565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000612892601b83611dc2565b915061289d8261285c565b602082019050919050565b600060208201905081810360008301526128c181612885565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612924602183611dc2565b915061292f826128c8565b604082019050919050565b6000602082019050818103600083015261295381612917565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612990601f83611dc2565b915061299b8261295a565b602082019050919050565b600060208201905081810360008301526129bf81612983565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b60006129fc601e83611dc2565b9150612a07826129c6565b602082019050919050565b60006020820190508181036000830152612a2b816129ef565b9050919050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612a8e602283611dc2565b9150612a9982612a32565b604082019050919050565b60006020820190508181036000830152612abd81612a81565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a7c895267bc37b2b1e73482e141f5d4725e8c94fc18c52bf00868b469cc55f9164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x527 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x48D JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x40F JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x33B JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B5 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0xF37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x552 SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57E SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E9 PUSH2 0x5E2 PUSH2 0x10E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP5 DUP5 DUP5 PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x6CB DUP5 PUSH2 0x616 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6C6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x67C PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71D PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x718 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x766 DUP3 DUP3 PUSH2 0x15A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x789 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7ED SWAP1 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x800 DUP3 DUP3 PUSH2 0x1638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD PUSH2 0x811 PUSH2 0x10E2 JUMP JUMPDEST DUP5 PUSH2 0x8A8 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x822 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C8 PUSH2 0x8C2 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH2 0x172A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x939 PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B93 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xA80 DUP7 PUSH2 0xA7B PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA3 DUP4 PUSH2 0xA9D PUSH2 0x10E2 JUMP JUMPDEST DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0xAAD DUP4 DUP4 PUSH2 0x172A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB06 DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x18D7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP3 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x18F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB4F SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7B SWAP1 PUSH2 0x222C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC03 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xBFE PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 DUP2 PUSH1 0x8 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xCAF DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCFC CALLER DUP3 PUSH2 0x1921 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC9 PUSH2 0xD13 PUSH2 0x10E2 JUMP JUMPDEST DUP5 PUSH2 0xDC4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BB7 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xD3D PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE7 PUSH2 0xDE0 PUSH2 0x10E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xE3A PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xE7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE88 DUP3 DUP3 PUSH2 0x1638 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0xF3F PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5D PUSH2 0xAB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP1 PUSH2 0x255D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BF SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1322 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1319 SWAP1 PUSH2 0x2713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1388 SWAP1 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139C DUP4 DUP4 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1407 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B45 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x149A DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1585 SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 PUSH2 0x159B SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15CC DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1ACE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x1634 JUMPI PUSH2 0x15D9 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1660 DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1AFE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x166D PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x16DB SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1717 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1790 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B23 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1546 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1867 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1B2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1919 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1987 SWAP1 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199C PUSH1 0x0 DUP4 DUP4 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH1 0x2 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1A08 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC2 DUP3 PUSH1 0x0 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1C2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x1BD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC9 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP4 DUP4 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x1C94 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1DAB JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D27 JUMPI PUSH2 0x1D26 PUSH2 0x2AC4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH2 0x1D42 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x2AF3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E19 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST PUSH2 0x1E23 DUP2 DUP6 PUSH2 0x1DC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E33 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0x1DFD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E61 DUP2 DUP5 PUSH2 0x1E0E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E99 DUP3 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC6 DUP2 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDF DUP2 PUSH2 0x1ECC JUMP JUMPDEST DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFC DUP2 PUSH2 0x1ED6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F19 JUMPI PUSH2 0x1F18 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F27 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F38 DUP6 DUP3 DUP7 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP2 PUSH2 0x1F42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1ECC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH2 0x1FBA PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FDA DUP7 DUP3 DUP8 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FEB DUP7 DUP3 DUP8 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2008 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2013 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2025 DUP2 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP5 DUP3 DUP6 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2061 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x207C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2058 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A7 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D8 DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x210F JUMPI PUSH2 0x210E PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211D DUP5 DUP3 DUP6 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214A DUP5 DUP3 DUP6 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2177 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A2 DUP6 DUP3 DUP7 ADD PUSH2 0x2016 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1EED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1E69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B9 PUSH1 0x2F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C4 DUP3 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22E8 DUP2 PUSH2 0x22AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234B PUSH1 0x2F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2356 DUP3 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237A DUP2 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B7 PUSH1 0x20 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C2 DUP3 PUSH2 0x2381 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23E6 DUP2 PUSH2 0x23AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0xB DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B5 PUSH1 0x30 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C0 DUP3 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24E4 DUP2 PUSH2 0x24A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 PUSH1 0x26 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP3 PUSH2 0x24EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2576 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D9 PUSH1 0x24 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E4 DUP3 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2608 DUP2 PUSH2 0x25CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B PUSH1 0x22 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2676 DUP3 PUSH2 0x260F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x269A DUP2 PUSH2 0x265E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FD PUSH1 0x25 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2708 DUP3 PUSH2 0x26A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x272C DUP2 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278F PUSH1 0x23 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x279A DUP3 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27BE DUP2 PUSH2 0x2782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27FF DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x280A DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2822 JUMPI PUSH2 0x2821 PUSH2 0x27C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2833 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x283E DUP4 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2856 JUMPI PUSH2 0x2855 PUSH2 0x27C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2892 PUSH1 0x1B DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x289D DUP3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C1 DUP2 PUSH2 0x2885 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2924 PUSH1 0x21 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x292F DUP3 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 PUSH2 0x2917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2990 PUSH1 0x1F DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x299B DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BF DUP2 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29FC PUSH1 0x1E DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A07 DUP3 PUSH2 0x29C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A2B DUP2 PUSH2 0x29EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8E PUSH1 0x22 DUP4 PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A99 DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABD DUP2 PUSH2 0x2A81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636545524332303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A7C8 SWAP6 0x26 PUSH28 0xC37B2B1E73482E141F5D4725E8C94FC18C52BF00868B469CC55F9164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"487:742:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4236:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3227:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4869:317;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4274:112:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4636:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3078:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5810:205:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5581:215:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;516:89:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3391:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:2;;;:::i;:::-;;911:290:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1068:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3957:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2942:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2362:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;955:271:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1719:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6283:266:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3719:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3247:125:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5093:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3949:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;718:64:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2160:89:4;2205:13;2237:5;2230:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:89;:::o;4236:166::-;4319:4;4335:39;4344:12;:10;:12::i;:::-;4358:7;4367:6;4335:8;:39::i;:::-;4391:4;4384:11;;4236:166;;;;:::o;3227:106::-;3288:7;3314:12;;3307:19;;3227:106;:::o;4869:317::-;4975:4;4991:36;5001:6;5009:9;5020:6;4991:9;:36::i;:::-;5037:121;5046:6;5054:12;:10;:12::i;:::-;5068:89;5106:6;5068:89;;;;;;;;;;;;;;;;;:11;:19;5080:6;5068:19;;;;;;;;;;;;;;;:33;5088:12;:10;:12::i;:::-;5068:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5037:8;:121::i;:::-;5175:4;5168:11;;4869:317;;;;;:::o;4274:112:1:-;4331:7;4357:6;:12;4364:4;4357:12;;;;;;;;;;;:22;;;4350:29;;4274:112;;;:::o;4636:223::-;4719:45;4727:6;:12;4734:4;4727:12;;;;;;;;;;;:22;;;4751:12;:10;:12::i;:::-;4719:7;:45::i;:::-;4711:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4827:25;4838:4;4844:7;4827:10;:25::i;:::-;4636:223;;:::o;3078:89:4:-;3127:5;3151:9;;;;;;;;;;;3144:16;;3078:89;:::o;5810:205:1:-;5907:12;:10;:12::i;:::-;5896:23;;:7;:23;;;5888:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5982:26;5994:4;6000:7;5982:11;:26::i;:::-;5810:205;;:::o;5581:215:4:-;5669:4;5685:83;5694:12;:10;:12::i;:::-;5708:7;5717:50;5756:10;5717:11;:25;5729:12;:10;:12::i;:::-;5717:25;;;;;;;;;;;;;;;:34;5743:7;5717:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5685:8;:83::i;:::-;5785:4;5778:11;;5581:215;;;;:::o;516:89:5:-;571:27;577:12;:10;:12::i;:::-;591:6;571:5;:27::i;:::-;516:89;:::o;3391:125:4:-;3465:7;3491:9;:18;3501:7;3491:18;;;;;;;;;;;;;;;;3484:25;;3391:125;;;:::o;1700:145:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;;;;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6;;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;911:290:5:-;987:26;1016:84;1053:6;1016:84;;;;;;;;;;;;;;;;;:32;1026:7;1035:12;:10;:12::i;:::-;1016:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;987:113;;1111:51;1120:7;1129:12;:10;:12::i;:::-;1143:18;1111:8;:51::i;:::-;1172:22;1178:7;1187:6;1172:5;:22::i;:::-;977:224;911:290;;:::o;1068:85:2:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;3957:136:1:-;4030:7;4056:30;4080:5;4056:6;:12;4063:4;4056:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4049:37;;3957:136;;;;:::o;2942:137::-;3011:4;3034:38;3064:7;3034:6;:12;3041:4;3034:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3027:45;;2942:137;;;;:::o;2362:93:4:-;2409:13;2441:7;2434:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:93;:::o;955:271:12:-;1013:35;757:25;1035:12;:10;:12::i;:::-;1013:7;:35::i;:::-;1005:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1090:24;1107:6;1090:12;;:16;;:24;;;;:::i;:::-;1075:12;:39;;;;1149:33;1175:6;1149:9;:21;1159:10;1149:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;1125:9;:21;1135:10;1125:21;;;;;;;;;;;;;;;:57;;;;1193:25;1199:10;1211:6;1193:5;:25::i;:::-;955:271;:::o;1719:49:1:-;1764:4;1719:49;;;:::o;6283:266:4:-;6376:4;6392:129;6401:12;:10;:12::i;:::-;6415:7;6424:96;6463:15;6424:96;;;;;;;;;;;;;;;;;:11;:25;6436:12;:10;:12::i;:::-;6424:25;;;;;;;;;;;;;;;:34;6450:7;6424:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6392:8;:129::i;:::-;6538:4;6531:11;;6283:266;;;;:::o;3719:172::-;3805:4;3821:42;3831:12;:10;:12::i;:::-;3845:9;3856:6;3821:9;:42::i;:::-;3880:4;3873:11;;3719:172;;;;:::o;3247:125:1:-;3310:7;3336:29;:6;:12;3343:4;3336:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3329:36;;3247:125;;;:::o;5093:226::-;5177:45;5185:6;:12;5192:4;5185:12;;;;;;;;;;;:22;;;5209:12;:10;:12::i;:::-;5177:7;:45::i;:::-;5169:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;5286:26;5298:4;5304:7;5286:11;:26::i;:::-;5093:226;;:::o;3949:149:4:-;4038:7;4064:11;:18;4076:5;4064:18;;;;;;;;;;;;;;;:27;4083:7;4064:27;;;;;;;;;;;;;;;;4057:34;;3949:149;;;;:::o;718:64:12:-;757:25;718:64;:::o;1994:240:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;::::0;2074:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;;;;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;;:17;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;590:96:9:-;643:7;669:10;662:17;;590:96;:::o;9347:340:4:-;9465:1;9448:19;;:5;:19;;;9440:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9545:1;9526:21;;:7;:21;;;9518:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9627:6;9597:11;:18;9609:5;9597:18;;;;;;;;;;;;;;;:27;9616:7;9597:27;;;;;;;;;;;;;;;:36;;;;9664:7;9648:32;;9657:5;9648:32;;;9673:6;9648:32;;;;;;:::i;:::-;;;;;;;;9347:340;;;:::o;7023:530::-;7146:1;7128:20;;:6;:20;;;7120:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7229:1;7208:23;;:9;:23;;;7200:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7282:47;7303:6;7311:9;7322:6;7282:20;:47::i;:::-;7360:71;7382:6;7360:71;;;;;;;;;;;;;;;;;:9;:17;7370:6;7360:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7340:9;:17;7350:6;7340:17;;;;;;;;;;;;;;;:91;;;;7464:32;7489:6;7464:9;:20;7474:9;7464:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7441:9;:20;7451:9;7441:20;;;;;;;;;;;;;;;:55;;;;7528:9;7511:35;;7520:6;7511:35;;;7539:6;7511:35;;;;;;:::i;:::-;;;;;;;;7023:530;;;:::o;5424:163:3:-;5510:7;5542:1;5537;:6;;5545:12;5529:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5579:1;5575;:5;;;;:::i;:::-;5568:12;;5424:163;;;;;:::o;7017:184:1:-;7090:33;7115:7;7090:6;:12;7097:4;7090:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7086:109;;;7171:12;:10;:12::i;:::-;7144:40;;7162:7;7144:40;;7156:4;7144:40;;;;;;;;;;7086:109;7017:184;;:::o;7207:188::-;7281:36;7309:7;7281:6;:12;7288:4;7281:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7277:112;;;7365:12;:10;:12::i;:::-;7338:40;;7356:7;7338:40;;7350:4;7338:40;;;;;;;;;;7277:112;7207:188;;:::o;2682:175:3:-;2740:7;2759:9;2775:1;2771;:5;;;;:::i;:::-;2759:17;;2799:1;2794;:6;;2786:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2849:1;2842:8;;;2682:175;;;;:::o;8514:410:4:-;8616:1;8597:21;;:7;:21;;;8589:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8667:49;8688:7;8705:1;8709:6;8667:20;:49::i;:::-;8748:68;8771:6;8748:68;;;;;;;;;;;;;;;;;:9;:18;8758:7;8748:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8727:9;:18;8737:7;8727:18;;;;;;;;;;;;;;;:89;;;;8841:24;8858:6;8841:12;;:16;;:24;;;;:::i;:::-;8826:12;:39;;;;8906:1;8880:37;;8889:7;8880:37;;;8910:6;8880:37;;;;;;:::i;:::-;;;;;;;;8514:410;;:::o;7669:156:10:-;7743:7;7793:22;7797:3;:10;;7809:5;7793:3;:22::i;:::-;7785:31;;7762:56;;7669:156;;;;:::o;6976:165::-;7056:4;7079:55;7089:3;:10;;7125:5;7109:23;;7101:32;;7079:9;:55::i;:::-;7072:62;;6976:165;;;;:::o;7824:370:4:-;7926:1;7907:21;;:7;:21;;;7899:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7975:49;8004:1;8008:7;8017:6;7975:20;:49::i;:::-;8050:24;8067:6;8050:12;;:16;;:24;;;;:::i;:::-;8035:12;:39;;;;8105:30;8128:6;8105:9;:18;8115:7;8105:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8084:9;:18;8094:7;8084:18;;;;;;;;;;;;;;;:51;;;;8171:7;8150:37;;8167:1;8150:37;;;8180:6;8150:37;;;;;;:::i;:::-;;;;;;;;7824:370;;:::o;7222:115:10:-;7285:7;7311:19;7319:3;:10;;7311:7;:19::i;:::-;7304:26;;7222:115;;;:::o;10693:92:4:-;;;;:::o;6421:150:10:-;6491:4;6514:50;6519:3;:10;;6555:5;6539:23;;6531:32;;6514:4;:50::i;:::-;6507:57;;6421:150;;;;:::o;6739:156::-;6812:4;6835:53;6843:3;:10;;6879:5;6863:23;;6855:32;;6835:7;:53::i;:::-;6828:60;;6739:156;;;;:::o;3128:155:3:-;3186:7;3218:1;3213;:6;;3205:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3275:1;3271;:5;;;;:::i;:::-;3264:12;;3128:155;;;;:::o;4444:201:10:-;4511:7;4559:5;4538:3;:11;;:18;;;;:26;4530:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4620:3;:11;;4632:5;4620:18;;;;;;;;:::i;:::-;;;;;;;;;;4613:25;;4444:201;;;;:::o;3797:127::-;3870:4;3916:1;3893:3;:12;;:19;3906:5;3893:19;;;;;;;;;;;;:24;;3886:31;;3797:127;;;;:::o;4005:107::-;4061:7;4087:3;:11;;:18;;;;4080:25;;4005:107;;;:::o;1632:404::-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;2204:1512::-;2270:4;2386:18;2407:3;:12;;:19;2420:5;2407:19;;;;;;;;;;;;2386:40;;2455:1;2441:10;:15;2437:1273;;2798:21;2835:1;2822:10;:14;;;;:::i;:::-;2798:38;;2850:17;2891:1;2870:3;:11;;:18;;;;:22;;;;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;;;:::i;:::-;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3412:1;3396:13;:17;;;;:::i;:::-;3370:3;:12;;:23;3383:9;3370:23;;;;;;;;;;;:43;;;;3519:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3611:3;:12;;:19;3624:5;3611:19;;;;;;;;;;;3604:26;;;3652:4;3645:11;;;;;;;;2437:1273;3694:5;3687:12;;;2204:1512;;;;;:::o;7:99:14:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:77::-;4460:7;4489:5;4478:16;;4423:77;;;:::o;4506:122::-;4579:24;4597:5;4579:24;:::i;:::-;4572:5;4569:35;4559:63;;4618:1;4615;4608:12;4559:63;4506:122;:::o;4634:139::-;4680:5;4718:6;4705:20;4696:29;;4734:33;4761:5;4734:33;:::i;:::-;4634:139;;;;:::o;4779:329::-;4838:6;4887:2;4875:9;4866:7;4862:23;4858:32;4855:119;;;4893:79;;:::i;:::-;4855:119;5013:1;5038:53;5083:7;5074:6;5063:9;5059:22;5038:53;:::i;:::-;5028:63;;4984:117;4779:329;;;;:::o;5114:118::-;5201:24;5219:5;5201:24;:::i;:::-;5196:3;5189:37;5114:118;;:::o;5238:222::-;5331:4;5369:2;5358:9;5354:18;5346:26;;5382:71;5450:1;5439:9;5435:17;5426:6;5382:71;:::i;:::-;5238:222;;;;:::o;5466:474::-;5534:6;5542;5591:2;5579:9;5570:7;5566:23;5562:32;5559:119;;;5597:79;;:::i;:::-;5559:119;5717:1;5742:53;5787:7;5778:6;5767:9;5763:22;5742:53;:::i;:::-;5732:63;;5688:117;5844:2;5870:53;5915:7;5906:6;5895:9;5891:22;5870:53;:::i;:::-;5860:63;;5815:118;5466:474;;;;;:::o;5946:86::-;5981:7;6021:4;6014:5;6010:16;5999:27;;5946:86;;;:::o;6038:112::-;6121:22;6137:5;6121:22;:::i;:::-;6116:3;6109:35;6038:112;;:::o;6156:214::-;6245:4;6283:2;6272:9;6268:18;6260:26;;6296:67;6360:1;6349:9;6345:17;6336:6;6296:67;:::i;:::-;6156:214;;;;:::o;6376:329::-;6435:6;6484:2;6472:9;6463:7;6459:23;6455:32;6452:119;;;6490:79;;:::i;:::-;6452:119;6610:1;6635:53;6680:7;6671:6;6660:9;6656:22;6635:53;:::i;:::-;6625:63;;6581:117;6376:329;;;;:::o;6711:::-;6770:6;6819:2;6807:9;6798:7;6794:23;6790:32;6787:119;;;6825:79;;:::i;:::-;6787:119;6945:1;6970:53;7015:7;7006:6;6995:9;6991:22;6970:53;:::i;:::-;6960:63;;6916:117;6711:329;;;;:::o;7046:118::-;7133:24;7151:5;7133:24;:::i;:::-;7128:3;7121:37;7046:118;;:::o;7170:222::-;7263:4;7301:2;7290:9;7286:18;7278:26;;7314:71;7382:1;7371:9;7367:17;7358:6;7314:71;:::i;:::-;7170:222;;;;:::o;7398:474::-;7466:6;7474;7523:2;7511:9;7502:7;7498:23;7494:32;7491:119;;;7529:79;;:::i;:::-;7491:119;7649:1;7674:53;7719:7;7710:6;7699:9;7695:22;7674:53;:::i;:::-;7664:63;;7620:117;7776:2;7802:53;7847:7;7838:6;7827:9;7823:22;7802:53;:::i;:::-;7792:63;;7747:118;7398:474;;;;;:::o;7878:::-;7946:6;7954;8003:2;7991:9;7982:7;7978:23;7974:32;7971:119;;;8009:79;;:::i;:::-;7971:119;8129:1;8154:53;8199:7;8190:6;8179:9;8175:22;8154:53;:::i;:::-;8144:63;;8100:117;8256:2;8282:53;8327:7;8318:6;8307:9;8303:22;8282:53;:::i;:::-;8272:63;;8227:118;7878:474;;;;;:::o;8358:180::-;8406:77;8403:1;8396:88;8503:4;8500:1;8493:15;8527:4;8524:1;8517:15;8544:320;8588:6;8625:1;8619:4;8615:12;8605:22;;8672:1;8666:4;8662:12;8693:18;8683:81;;8749:4;8741:6;8737:17;8727:27;;8683:81;8811:2;8803:6;8800:14;8780:18;8777:38;8774:84;;8830:18;;:::i;:::-;8774:84;8595:269;8544:320;;;:::o;8870:234::-;9010:34;9006:1;8998:6;8994:14;8987:58;9079:17;9074:2;9066:6;9062:15;9055:42;8870:234;:::o;9110:366::-;9252:3;9273:67;9337:2;9332:3;9273:67;:::i;:::-;9266:74;;9349:93;9438:3;9349:93;:::i;:::-;9467:2;9462:3;9458:12;9451:19;;9110:366;;;:::o;9482:419::-;9648:4;9686:2;9675:9;9671:18;9663:26;;9735:9;9729:4;9725:20;9721:1;9710:9;9706:17;9699:47;9763:131;9889:4;9763:131;:::i;:::-;9755:139;;9482:419;;;:::o;9907:234::-;10047:34;10043:1;10035:6;10031:14;10024:58;10116:17;10111:2;10103:6;10099:15;10092:42;9907:234;:::o;10147:366::-;10289:3;10310:67;10374:2;10369:3;10310:67;:::i;:::-;10303:74;;10386:93;10475:3;10386:93;:::i;:::-;10504:2;10499:3;10495:12;10488:19;;10147:366;;;:::o;10519:419::-;10685:4;10723:2;10712:9;10708:18;10700:26;;10772:9;10766:4;10762:20;10758:1;10747:9;10743:17;10736:47;10800:131;10926:4;10800:131;:::i;:::-;10792:139;;10519:419;;;:::o;10944:182::-;11084:34;11080:1;11072:6;11068:14;11061:58;10944:182;:::o;11132:366::-;11274:3;11295:67;11359:2;11354:3;11295:67;:::i;:::-;11288:74;;11371:93;11460:3;11371:93;:::i;:::-;11489:2;11484:3;11480:12;11473:19;;11132:366;;;:::o;11504:419::-;11670:4;11708:2;11697:9;11693:18;11685:26;;11757:9;11751:4;11747:20;11743:1;11732:9;11728:17;11721:47;11785:131;11911:4;11785:131;:::i;:::-;11777:139;;11504:419;;;:::o;11929:161::-;12069:13;12065:1;12057:6;12053:14;12046:37;11929:161;:::o;12096:366::-;12238:3;12259:67;12323:2;12318:3;12259:67;:::i;:::-;12252:74;;12335:93;12424:3;12335:93;:::i;:::-;12453:2;12448:3;12444:12;12437:19;;12096:366;;;:::o;12468:419::-;12634:4;12672:2;12661:9;12657:18;12649:26;;12721:9;12715:4;12711:20;12707:1;12696:9;12692:17;12685:47;12749:131;12875:4;12749:131;:::i;:::-;12741:139;;12468:419;;;:::o;12893:235::-;13033:34;13029:1;13021:6;13017:14;13010:58;13102:18;13097:2;13089:6;13085:15;13078:43;12893:235;:::o;13134:366::-;13276:3;13297:67;13361:2;13356:3;13297:67;:::i;:::-;13290:74;;13373:93;13462:3;13373:93;:::i;:::-;13491:2;13486:3;13482:12;13475:19;;13134:366;;;:::o;13506:419::-;13672:4;13710:2;13699:9;13695:18;13687:26;;13759:9;13753:4;13749:20;13745:1;13734:9;13730:17;13723:47;13787:131;13913:4;13787:131;:::i;:::-;13779:139;;13506:419;;;:::o;13931:225::-;14071:34;14067:1;14059:6;14055:14;14048:58;14140:8;14135:2;14127:6;14123:15;14116:33;13931:225;:::o;14162:366::-;14304:3;14325:67;14389:2;14384:3;14325:67;:::i;:::-;14318:74;;14401:93;14490:3;14401:93;:::i;:::-;14519:2;14514:3;14510:12;14503:19;;14162:366;;;:::o;14534:419::-;14700:4;14738:2;14727:9;14723:18;14715:26;;14787:9;14781:4;14777:20;14773:1;14762:9;14758:17;14751:47;14815:131;14941:4;14815:131;:::i;:::-;14807:139;;14534:419;;;:::o;14959:223::-;15099:34;15095:1;15087:6;15083:14;15076:58;15168:6;15163:2;15155:6;15151:15;15144:31;14959:223;:::o;15188:366::-;15330:3;15351:67;15415:2;15410:3;15351:67;:::i;:::-;15344:74;;15427:93;15516:3;15427:93;:::i;:::-;15545:2;15540:3;15536:12;15529:19;;15188:366;;;:::o;15560:419::-;15726:4;15764:2;15753:9;15749:18;15741:26;;15813:9;15807:4;15803:20;15799:1;15788:9;15784:17;15777:47;15841:131;15967:4;15841:131;:::i;:::-;15833:139;;15560:419;;;:::o;15985:221::-;16125:34;16121:1;16113:6;16109:14;16102:58;16194:4;16189:2;16181:6;16177:15;16170:29;15985:221;:::o;16212:366::-;16354:3;16375:67;16439:2;16434:3;16375:67;:::i;:::-;16368:74;;16451:93;16540:3;16451:93;:::i;:::-;16569:2;16564:3;16560:12;16553:19;;16212:366;;;:::o;16584:419::-;16750:4;16788:2;16777:9;16773:18;16765:26;;16837:9;16831:4;16827:20;16823:1;16812:9;16808:17;16801:47;16865:131;16991:4;16865:131;:::i;:::-;16857:139;;16584:419;;;:::o;17009:224::-;17149:34;17145:1;17137:6;17133:14;17126:58;17218:7;17213:2;17205:6;17201:15;17194:32;17009:224;:::o;17239:366::-;17381:3;17402:67;17466:2;17461:3;17402:67;:::i;:::-;17395:74;;17478:93;17567:3;17478:93;:::i;:::-;17596:2;17591:3;17587:12;17580:19;;17239:366;;;:::o;17611:419::-;17777:4;17815:2;17804:9;17800:18;17792:26;;17864:9;17858:4;17854:20;17850:1;17839:9;17835:17;17828:47;17892:131;18018:4;17892:131;:::i;:::-;17884:139;;17611:419;;;:::o;18036:222::-;18176:34;18172:1;18164:6;18160:14;18153:58;18245:5;18240:2;18232:6;18228:15;18221:30;18036:222;:::o;18264:366::-;18406:3;18427:67;18491:2;18486:3;18427:67;:::i;:::-;18420:74;;18503:93;18592:3;18503:93;:::i;:::-;18621:2;18616:3;18612:12;18605:19;;18264:366;;;:::o;18636:419::-;18802:4;18840:2;18829:9;18825:18;18817:26;;18889:9;18883:4;18879:20;18875:1;18864:9;18860:17;18853:47;18917:131;19043:4;18917:131;:::i;:::-;18909:139;;18636:419;;;:::o;19061:180::-;19109:77;19106:1;19099:88;19206:4;19203:1;19196:15;19230:4;19227:1;19220:15;19247:194;19287:4;19307:20;19325:1;19307:20;:::i;:::-;19302:25;;19341:20;19359:1;19341:20;:::i;:::-;19336:25;;19385:1;19382;19378:9;19370:17;;19409:1;19403:4;19400:11;19397:37;;;19414:18;;:::i;:::-;19397:37;19247:194;;;;:::o;19447:191::-;19487:3;19506:20;19524:1;19506:20;:::i;:::-;19501:25;;19540:20;19558:1;19540:20;:::i;:::-;19535:25;;19583:1;19580;19576:9;19569:16;;19604:3;19601:1;19598:10;19595:36;;;19611:18;;:::i;:::-;19595:36;19447:191;;;;:::o;19644:177::-;19784:29;19780:1;19772:6;19768:14;19761:53;19644:177;:::o;19827:366::-;19969:3;19990:67;20054:2;20049:3;19990:67;:::i;:::-;19983:74;;20066:93;20155:3;20066:93;:::i;:::-;20184:2;20179:3;20175:12;20168:19;;19827:366;;;:::o;20199:419::-;20365:4;20403:2;20392:9;20388:18;20380:26;;20452:9;20446:4;20442:20;20438:1;20427:9;20423:17;20416:47;20480:131;20606:4;20480:131;:::i;:::-;20472:139;;20199:419;;;:::o;20624:220::-;20764:34;20760:1;20752:6;20748:14;20741:58;20833:3;20828:2;20820:6;20816:15;20809:28;20624:220;:::o;20850:366::-;20992:3;21013:67;21077:2;21072:3;21013:67;:::i;:::-;21006:74;;21089:93;21178:3;21089:93;:::i;:::-;21207:2;21202:3;21198:12;21191:19;;20850:366;;;:::o;21222:419::-;21388:4;21426:2;21415:9;21411:18;21403:26;;21475:9;21469:4;21465:20;21461:1;21450:9;21446:17;21439:47;21503:131;21629:4;21503:131;:::i;:::-;21495:139;;21222:419;;;:::o;21647:181::-;21787:33;21783:1;21775:6;21771:14;21764:57;21647:181;:::o;21834:366::-;21976:3;21997:67;22061:2;22056:3;21997:67;:::i;:::-;21990:74;;22073:93;22162:3;22073:93;:::i;:::-;22191:2;22186:3;22182:12;22175:19;;21834:366;;;:::o;22206:419::-;22372:4;22410:2;22399:9;22395:18;22387:26;;22459:9;22453:4;22449:20;22445:1;22434:9;22430:17;22423:47;22487:131;22613:4;22487:131;:::i;:::-;22479:139;;22206:419;;;:::o;22631:180::-;22771:32;22767:1;22759:6;22755:14;22748:56;22631:180;:::o;22817:366::-;22959:3;22980:67;23044:2;23039:3;22980:67;:::i;:::-;22973:74;;23056:93;23145:3;23056:93;:::i;:::-;23174:2;23169:3;23165:12;23158:19;;22817:366;;;:::o;23189:419::-;23355:4;23393:2;23382:9;23378:18;23370:26;;23442:9;23436:4;23432:20;23428:1;23417:9;23413:17;23406:47;23470:131;23596:4;23470:131;:::i;:::-;23462:139;;23189:419;;;:::o;23614:221::-;23754:34;23750:1;23742:6;23738:14;23731:58;23823:4;23818:2;23810:6;23806:15;23799:29;23614:221;:::o;23841:366::-;23983:3;24004:67;24068:2;24063:3;24004:67;:::i;:::-;23997:74;;24080:93;24169:3;24080:93;:::i;:::-;24198:2;24193:3;24189:12;24182:19;;23841:366;;;:::o;24213:419::-;24379:4;24417:2;24406:9;24402:18;24394:26;;24466:9;24460:4;24456:20;24452:1;24441:9;24437:17;24430:47;24494:131;24620:4;24494:131;:::i;:::-;24486:139;;24213:419;;;:::o;24638:180::-;24686:77;24683:1;24676:88;24783:4;24780:1;24773:15;24807:4;24804:1;24797:15;24824:180;24872:77;24869:1;24862:88;24969:4;24966:1;24959:15;24993:4;24990:1;24983:15"},"gasEstimates":{"creation":{"codeDepositCost":"2256200","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_ADMIN_ROLE()":"468","MANAGER_ROLE()":"417","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2908","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decimals()":"2525","decreaseAllowance(address,uint256)":"infinite","getRoleAdmin(bytes32)":"infinite","getRoleMember(bytes32,uint256)":"infinite","getRoleMemberCount(bytes32)":"2981","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"infinite","increaseAllowance(address,uint256)":"infinite","mint(uint256)":"infinite","name()":"infinite","owner()":"2595","renounceOwnership()":"30571","renounceRole(bytes32,address)":"infinite","revokeRole(bytes32,address)":"infinite","symbol()":"infinite","totalSupply()":"2505","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30938"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MANAGER_ROLE()":"ec87621c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(uint256)":"a0712d68","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AUSD.sol\":\"AUSD\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e98c0d315f562a98d915414f948e041531138284dd633b4cdb0361a7172cd97\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x5fc67ab74022e86c5b8a21762a3375a8ddeab5c249b1568805837eca718badbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa885fd668f62491c8eb5f888dc973862fdefc5f73ef540b4bb5d857b79a5c7bf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x171a9b614bed004394c8c004271abae184a961c0c3d4c345b5e24823e836c524\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"contracts/AUSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT LICENSE\\r\\n\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\\\";\\r\\n\\r\\n\\r\\ncontract AUSD is IERC20, ERC20Burnable, Ownable, AccessControl {\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n    using SafeERC20 for ERC20;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    bytes32 public constant MANAGER_ROLE = keccak256(\\\"MANAGER_ROLE\\\");\\r\\n\\r\\n    constructor () ERC20(\\\"AUSD Stable\\\", \\\"AUSD\\\") {\\r\\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\\r\\n        _setupRole(MANAGER_ROLE, _msgSender());\\r\\n    }\\r\\n\\r\\n    function mint(uint256 amount) external {\\r\\n        require(hasRole(MANAGER_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\\r\\n        _mint(msg.sender, amount);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x96821069a5a34481f0a7acf50119e7f42f0c07095bcb8336a42cfc0c58c88a04\",\"license\":\"MIT LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":813,"contract":"contracts/AUSD.sol:AUSD","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":819,"contract":"contracts/AUSD.sol:AUSD","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":821,"contract":"contracts/AUSD.sol:AUSD","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":823,"contract":"contracts/AUSD.sol:AUSD","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":825,"contract":"contracts/AUSD.sol:AUSD","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":827,"contract":"contracts/AUSD.sol:AUSD","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":339,"contract":"contracts/AUSD.sol:AUSD","label":"_owner","offset":1,"slot":"5","type":"t_address"},{"astId":71,"contract":"contracts/AUSD.sol:AUSD","label":"_roles","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_struct(RoleData)66_storage)"},{"astId":2557,"contract":"contracts/AUSD.sol:AUSD","label":"_balances","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":2559,"contract":"contracts/AUSD.sol:AUSD","label":"_totalSupply","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)66_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)66_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)2262_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":2261,"contract":"contracts/AUSD.sol:AUSD","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1985_storage"}],"numberOfBytes":"64"},"t_struct(RoleData)66_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":63,"contract":"contracts/AUSD.sol:AUSD","label":"members","offset":0,"slot":"0","type":"t_struct(AddressSet)2262_storage"},{"astId":65,"contract":"contracts/AUSD.sol:AUSD","label":"adminRole","offset":0,"slot":"2","type":"t_bytes32"}],"numberOfBytes":"96"},"t_struct(Set)1985_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1980,"contract":"contracts/AUSD.sol:AUSD","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1984,"contract":"contracts/AUSD.sol:AUSD","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AUSDGovernance.sol":{"AUSDGovernance":{"abi":[{"inputs":[{"internalType":"contract AUSD","name":"_ausd","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RepegAction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GOVERN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_supplyChanges","outputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"blocknum","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"colcontract","type":"address"}],"name":"addColateralToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ausdsupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"datafeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchColPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reserveCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rsvList","outputs":[{"internalType":"contract IERC20","name":"colToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"setAUSDSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractaddress","type":"address"}],"name":"setDataFeedAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"}],"name":"setReserveContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stableColatAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stableColatPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"supplyChangeCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unstableColPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unstableColatAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatePeg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2508":{"entryPoint":null,"id":2508,"parameterSlots":0,"returnSlots":0},"@_2743":{"entryPoint":null,"id":2743,"parameterSlots":1,"returnSlots":0},"@_367":{"entryPoint":null,"id":367,"parameterSlots":0,"returnSlots":0},"@_add_2027":{"entryPoint":668,"id":2027,"parameterSlots":2,"returnSlots":1},"@_contains_2127":{"entryPoint":790,"id":2127,"parameterSlots":2,"returnSlots":1},"@_grantRole_306":{"entryPoint":453,"id":306,"parameterSlots":2,"returnSlots":0},"@_msgSender_1962":{"entryPoint":423,"id":1962,"parameterSlots":0,"returnSlots":1},"@_setupRole_257":{"entryPoint":431,"id":257,"parameterSlots":2,"returnSlots":0},"@add_2289":{"entryPoint":612,"id":2289,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_AUSD_$2626_fromMemory":{"entryPoint":928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_AUSD_$2626_fromMemory":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_AUSD_$2626":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":830,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":825,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_AUSD_$2626":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1392:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"626:51:14","statements":[{"nodeType":"YulAssignment","src":"636:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"665:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"647:17:14"},"nodeType":"YulFunctionCall","src":"647:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"636:7:14"}]}]},"name":"cleanup_t_contract$_AUSD_$2626","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"608:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"618:7:14","type":""}],"src":"568:109:14"},{"body":{"nodeType":"YulBlock","src":"739:92:14","statements":[{"body":{"nodeType":"YulBlock","src":"809:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"818:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"821:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"811:6:14"},"nodeType":"YulFunctionCall","src":"811:12:14"},"nodeType":"YulExpressionStatement","src":"811:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"762:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"800:5:14"}],"functionName":{"name":"cleanup_t_contract$_AUSD_$2626","nodeType":"YulIdentifier","src":"769:30:14"},"nodeType":"YulFunctionCall","src":"769:37:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"759:2:14"},"nodeType":"YulFunctionCall","src":"759:48:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"752:6:14"},"nodeType":"YulFunctionCall","src":"752:56:14"},"nodeType":"YulIf","src":"749:76:14"}]},"name":"validator_revert_t_contract$_AUSD_$2626","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"732:5:14","type":""}],"src":"683:148:14"},{"body":{"nodeType":"YulBlock","src":"913:93:14","statements":[{"nodeType":"YulAssignment","src":"923:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"938:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"932:5:14"},"nodeType":"YulFunctionCall","src":"932:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"923:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:14"}],"functionName":{"name":"validator_revert_t_contract$_AUSD_$2626","nodeType":"YulIdentifier","src":"954:39:14"},"nodeType":"YulFunctionCall","src":"954:46:14"},"nodeType":"YulExpressionStatement","src":"954:46:14"}]},"name":"abi_decode_t_contract$_AUSD_$2626_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"891:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"899:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"907:5:14","type":""}],"src":"837:169:14"},{"body":{"nodeType":"YulBlock","src":"1102:287:14","statements":[{"body":{"nodeType":"YulBlock","src":"1148:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1150:77:14"},"nodeType":"YulFunctionCall","src":"1150:79:14"},"nodeType":"YulExpressionStatement","src":"1150:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1123:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1119:3:14"},"nodeType":"YulFunctionCall","src":"1119:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1144:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1115:3:14"},"nodeType":"YulFunctionCall","src":"1115:32:14"},"nodeType":"YulIf","src":"1112:119:14"},{"nodeType":"YulBlock","src":"1241:141:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1256:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1270:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1260:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1285:87:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1344:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1355:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1340:3:14"},"nodeType":"YulFunctionCall","src":"1340:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1364:7:14"}],"functionName":{"name":"abi_decode_t_contract$_AUSD_$2626_fromMemory","nodeType":"YulIdentifier","src":"1295:44:14"},"nodeType":"YulFunctionCall","src":"1295:77:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1285:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_AUSD_$2626_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1072:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1083:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1095:6:14","type":""}],"src":"1012:377:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_AUSD_$2626(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_AUSD_$2626(value) {\n        if iszero(eq(value, cleanup_t_contract$_AUSD_$2626(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_AUSD_$2626_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_AUSD_$2626(value)\n    }\n\n    function abi_decode_tuple_t_contract$_AUSD_$2626_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_AUSD_$2626_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a7640000600b553480156200001d57600080fd5b50604051620033fb380380620033fb8339818101604052810190620000439190620003b7565b600062000055620001a760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506001808190555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015f6000801b62000153620001a760201b60201c565b620001af60201b60201c565b620001a07f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e62000194620001a760201b60201c565b620001af60201b60201c565b50620003e9565b600033905090565b620001c18282620001c560201b60201c565b5050565b620001ef81600260008581526020019081526020016000206000016200026460201b90919060201c565b15620002605762000205620001a760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000294836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200029c60201b60201c565b905092915050565b6000620002b083836200031660201b60201c565b6200030b57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000310565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200036b826200033e565b9050919050565b60006200037f826200035e565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf62000339565b5b6000620003e084828501620003a0565b91505092915050565b61300280620003f96000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063a217fddf116100a2578063d547741f11610071578063d547741f146104e9578063e0e9349b14610505578063eceab5c514610521578063f2fde38b1461053f576101cf565b8063a217fddf1461044a578063a6ef79b414610468578063bd7fe2171461049b578063ca15c873146104b9576101cf565b80638da5cb5b116100de5780638da5cb5b146103ae5780639010d07c146103cc57806391d14854146103fc5780639588e6141461042c576101cf565b8063715018a61461039057806381613f251461039a5780638a6e0169146103a4576101cf565b80632f2ff15d1161017157806338b7f4461161014b57806338b7f44614610308578063527a52c8146103265780635e6a4fb014610342578063669004f914610360576101cf565b80632f2ff15d146102b25780632f41ffd0146102ce57806336568abe146102ec576101cf565b806326ba7898116101ad57806326ba7898146102405780632d906e631461025c5780632dc47153146102785780632e1a7d4d14610296576101cf565b806316317c21146101d457806319cb170c146101f2578063248a9ca314610210575b600080fd5b6101dc61055b565b6040516101e99190611f1a565b60405180910390f35b6101fa610561565b6040516102079190611f1a565b60405180910390f35b61022a60048036038101906102259190611f70565b610567565b6040516102379190611fac565b60405180910390f35b61025a60048036038101906102559190612025565b610587565b005b6102766004803603810190610271919061207e565b61069e565b005b610280610718565b60405161028d91906120ba565b60405180910390f35b6102b060048036038101906102ab919061207e565b61073e565b005b6102cc60048036038101906102c791906120d5565b6108df565b005b6102d6610953565b6040516102e39190611f1a565b60405180910390f35b610306600480360381019061030191906120d5565b610959565b005b6103106109dc565b60405161031d9190611fac565b60405180910390f35b610340600480360381019061033b9190612025565b610a00565b005b61034a610b08565b6040516103579190611f1a565b60405180910390f35b61037a6004803603810190610375919061207e565b610b0e565b6040516103879190612174565b60405180910390f35b610398610b4c565b005b6103a2610c86565b005b6103ac610e0a565b005b6103b6611238565b6040516103c391906120ba565b60405180910390f35b6103e660048036038101906103e1919061218f565b611261565b6040516103f391906120ba565b60405180910390f35b610416600480360381019061041191906120d5565b611293565b60405161042391906121ea565b60405180910390f35b6104346112c5565b6040516104419190611f1a565b60405180910390f35b6104526112cb565b60405161045f9190611fac565b60405180910390f35b610482600480360381019061047d919061207e565b6112d2565b6040516104929493929190612295565b60405180910390f35b6104a361138a565b6040516104b09190611f1a565b60405180910390f35b6104d360048036038101906104ce9190611f70565b611390565b6040516104e09190611f1a565b60405180910390f35b61050360048036038101906104fe91906120d5565b6113b7565b005b61051f600480360381019061051a919061231f565b61142b565b005b610529611561565b6040516105369190611f1a565b60405180910390f35b61055960048036038101906105549190612025565b611567565b005b600f5481565b600b5481565b600060026000838152602001908152602001600020600201549050919050565b6105b87f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6105b361170f565b611293565b6105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90612398565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106cf7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6106ca61170f565b611293565b61070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612398565b60405180910390fd5b8060088190555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260015403610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90612404565b60405180910390fd5b60026001819055506107bc7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6107b761170f565b611293565b6107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f290612398565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610858929190612424565b6020604051808303816000875af1158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089b9190612479565b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c842826040516108cd9291906124a6565b60405180910390a16001808190555050565b610906600260008481526020019081526020016000206002015461090161170f565b611293565b610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c90612541565b60405180910390fd5b61094f8282611717565b5050565b600a5481565b61096161170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c5906125d3565b60405180910390fd5b6109d882826117ab565b5050565b7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e81565b600260015403610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c90612404565b60405180910390fd5b6002600181905550610a7e7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610a7961170f565b611293565b610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490612398565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808190555050565b600e5481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b610b5461170f565b73ffffffffffffffffffffffffffffffffffffffff16610b72611238565b73ffffffffffffffffffffffffffffffffffffffff1614610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf9061263f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260015403610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612404565b60405180910390fd5b6002600181905550610d047f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610cff61170f565b611293565b610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90612398565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd691906126b6565b5050509150506000610df66402540be4008361183f90919063ffffffff16565b905080600e81905550505060018081905550565b600260015403610e4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4690612404565b60405180910390fd5b6002600181905550610e887f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610e8361170f565b611293565b610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90612398565b60405180910390fd5b6000610ed16118b9565b905060019050801561122e576000610f24610ef9600e54600d5461183f90919063ffffffff16565b610f16670de0b6b3a7640000600c5461183f90919063ffffffff16565b611b0390919063ffffffff16565b90506000610f43670de0b6b3a764000083611b6190919063ffffffff16565b905060085481101561106f576000610f6682600854611bb990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610fc39190611f1a565b600060405180830381600087803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b505050506040518060400160405280600481526020017f4275726e0000000000000000000000000000000000000000000000000000000081525060046000600a548152602001908152602001600020600001908161104f9190612962565b508060046000600a54815260200190815260200160002060010181905550505b60085481111561119957600061109060085483611bb990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b81526004016110ed9190611f1a565b600060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505050506040518060400160405280600481526020017f4d696e740000000000000000000000000000000000000000000000000000000081525060046000600a54815260200190815260200160002060000190816111799190612962565b508060046000600a54815260200190815260200160002060010181905550505b806008819055504360046000600a548152602001908152602001600020600301819055504260046000600a54815260200190815260200160002060020181905550600a60008154809291906111ed90612a63565b91905055507f2a6a493f767ec856dcac2f52ecc7e244b432c2d615092ef532c22a94568ed99542826040516112239291906124a6565b60405180910390a150505b5060018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061128b8260026000868152602001908152602001600020600001611c1290919063ffffffff16565b905092915050565b60006112bd8260026000868152602001908152602001600020600001611c2c90919063ffffffff16565b905092915050565b600c5481565b6000801b81565b60046020528060005260406000206000915090508060000180546112f59061278f565b80601f01602080910402602001604051908101604052809291908181526020018280546113219061278f565b801561136e5780601f106113435761010080835404028352916020019161136e565b820191906000526020600020905b81548152906001019060200180831161135157829003601f168201915b5050505050908060010154908060020154908060030154905084565b60085481565b60006113b060026000848152602001908152602001600020600001611c5c565b9050919050565b6113de60026000848152602001908152602001600020600201546113d961170f565b611293565b61141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141490612b1d565b60405180910390fd5b61142782826117ab565b5050565b600260015403611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146790612404565b60405180910390fd5b60026001819055506114a97f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6114a461170f565b611293565b6114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df90612398565b60405180910390fd5b8060036000600f54815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f600081548092919061155290612a63565b91905055506001808190555050565b600d5481565b61156f61170f565b73ffffffffffffffffffffffffffffffffffffffff1661158d611238565b73ffffffffffffffffffffffffffffffffffffffff16146115e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115da9061263f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164990612baf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61173f8160026000858152602001908152602001600020600001611c7190919063ffffffff16565b156117a75761174c61170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6117d38160026000858152602001908152602001600020600001611ca190919063ffffffff16565b1561183b576117e061170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080830361185157600090506118b3565b6000828461185f9190612bcf565b905082848261186e9190612c40565b146118ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a590612ce3565b60405180910390fd5b809150505b92915050565b60006118ec7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6118e761170f565b611293565b61192b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192290612398565b60405180910390fd5b60006003600080815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016119be91906120ba565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff9190612d03565b90506000600360006001815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611a9591906120ba565b602060405180830381865afa158015611ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad69190612d03565b9050600c548214611ae95781600c819055505b600c548114611afa5780600d819055505b60019250505090565b6000808284611b129190612d30565b905083811015611b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4e90612db0565b60405180910390fd5b8091505092915050565b6000808211611ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9c90612e1c565b60405180910390fd5b8183611bb19190612c40565b905092915050565b600082821115611bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf590612e88565b60405180910390fd5b8183611c0a9190612ea8565b905092915050565b6000611c218360000183611cd1565b60001c905092915050565b6000611c54836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d45565b905092915050565b6000611c6a82600001611d68565b9050919050565b6000611c99836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d79565b905092915050565b6000611cc9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611de9565b905092915050565b600081836000018054905011611d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1390612f4e565b60405180910390fd5b826000018281548110611d3257611d31612f6e565b5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000611d858383611d45565b611dde578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611de3565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611ef5576000600182611e1b9190612ea8565b9050600060018660000180549050611e339190612ea8565b90506000866000018281548110611e4d57611e4c612f6e565b5b9060005260206000200154905080876000018481548110611e7157611e70612f6e565b5b9060005260206000200181905550600183611e8c9190612d30565b8760010160008381526020019081526020016000208190555086600001805480611eb957611eb8612f9d565b5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611efb565b60009150505b92915050565b6000819050919050565b611f1481611f01565b82525050565b6000602082019050611f2f6000830184611f0b565b92915050565b600080fd5b6000819050919050565b611f4d81611f3a565b8114611f5857600080fd5b50565b600081359050611f6a81611f44565b92915050565b600060208284031215611f8657611f85611f35565b5b6000611f9484828501611f5b565b91505092915050565b611fa681611f3a565b82525050565b6000602082019050611fc16000830184611f9d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ff282611fc7565b9050919050565b61200281611fe7565b811461200d57600080fd5b50565b60008135905061201f81611ff9565b92915050565b60006020828403121561203b5761203a611f35565b5b600061204984828501612010565b91505092915050565b61205b81611f01565b811461206657600080fd5b50565b60008135905061207881612052565b92915050565b60006020828403121561209457612093611f35565b5b60006120a284828501612069565b91505092915050565b6120b481611fe7565b82525050565b60006020820190506120cf60008301846120ab565b92915050565b600080604083850312156120ec576120eb611f35565b5b60006120fa85828601611f5b565b925050602061210b85828601612010565b9150509250929050565b6000819050919050565b600061213a61213561213084611fc7565b612115565b611fc7565b9050919050565b600061214c8261211f565b9050919050565b600061215e82612141565b9050919050565b61216e81612153565b82525050565b60006020820190506121896000830184612165565b92915050565b600080604083850312156121a6576121a5611f35565b5b60006121b485828601611f5b565b92505060206121c585828601612069565b9150509250929050565b60008115159050919050565b6121e4816121cf565b82525050565b60006020820190506121ff60008301846121db565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561223f578082015181840152602081019050612224565b60008484015250505050565b6000601f19601f8301169050919050565b600061226782612205565b6122718185612210565b9350612281818560208601612221565b61228a8161224b565b840191505092915050565b600060808201905081810360008301526122af818761225c565b90506122be6020830186611f0b565b6122cb6040830185611f0b565b6122d86060830184611f0b565b95945050505050565b60006122ec82611fe7565b9050919050565b6122fc816122e1565b811461230757600080fd5b50565b600081359050612319816122f3565b92915050565b60006020828403121561233557612334611f35565b5b60006123438482850161230a565b91505092915050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b6000612382600b83612210565b915061238d8261234c565b602082019050919050565b600060208201905081810360008301526123b181612375565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006123ee601f83612210565b91506123f9826123b8565b602082019050919050565b6000602082019050818103600083015261241d816123e1565b9050919050565b600060408201905061243960008301856120ab565b6124466020830184611f0b565b9392505050565b612456816121cf565b811461246157600080fd5b50565b6000815190506124738161244d565b92915050565b60006020828403121561248f5761248e611f35565b5b600061249d84828501612464565b91505092915050565b60006040820190506124bb6000830185611f0b565b6124c86020830184611f0b565b9392505050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b600061252b602f83612210565b9150612536826124cf565b604082019050919050565b6000602082019050818103600083015261255a8161251e565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006125bd602f83612210565b91506125c882612561565b604082019050919050565b600060208201905081810360008301526125ec816125b0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612629602083612210565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b600069ffffffffffffffffffff82169050919050565b61267e8161265f565b811461268957600080fd5b50565b60008151905061269b81612675565b92915050565b6000815190506126b081612052565b92915050565b600080600080600060a086880312156126d2576126d1611f35565b5b60006126e08882890161268c565b95505060206126f1888289016126a1565b9450506040612702888289016126a1565b9350506060612713888289016126a1565b92505060806127248882890161268c565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127a757607f821691505b6020821081036127ba576127b9612760565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128227fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127e5565b61282c86836127e5565b95508019841693508086168417925050509392505050565b600061285f61285a61285584611f01565b612115565b611f01565b9050919050565b6000819050919050565b61287983612844565b61288d61288582612866565b8484546127f2565b825550505050565b600090565b6128a2612895565b6128ad818484612870565b505050565b5b818110156128d1576128c660008261289a565b6001810190506128b3565b5050565b601f821115612916576128e7816127c0565b6128f0846127d5565b810160208510156128ff578190505b61291361290b856127d5565b8301826128b2565b50505b505050565b600082821c905092915050565b60006129396000198460080261291b565b1980831691505092915050565b60006129528383612928565b9150826002028217905092915050565b61296b82612205565b67ffffffffffffffff81111561298457612983612731565b5b61298e825461278f565b6129998282856128d5565b600060209050601f8311600181146129cc57600084156129ba578287015190505b6129c48582612946565b865550612a2c565b601f1984166129da866127c0565b60005b82811015612a02578489015182556001820191506020850194506020810190506129dd565b86831015612a1f5784890151612a1b601f891682612928565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a6e82611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612aa057612a9f612a34565b5b600182019050919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b6000612b07603083612210565b9150612b1282612aab565b604082019050919050565b60006020820190508181036000830152612b3681612afa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b99602683612210565b9150612ba482612b3d565b604082019050919050565b60006020820190508181036000830152612bc881612b8c565b9050919050565b6000612bda82611f01565b9150612be583611f01565b9250828202612bf381611f01565b91508282048414831517612c0a57612c09612a34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c4b82611f01565b9150612c5683611f01565b925082612c6657612c65612c11565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000612ccd602183612210565b9150612cd882612c71565b604082019050919050565b60006020820190508181036000830152612cfc81612cc0565b9050919050565b600060208284031215612d1957612d18611f35565b5b6000612d27848285016126a1565b91505092915050565b6000612d3b82611f01565b9150612d4683611f01565b9250828201905080821115612d5e57612d5d612a34565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000612d9a601b83612210565b9150612da582612d64565b602082019050919050565b60006020820190508181036000830152612dc981612d8d565b9050919050565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000600082015250565b6000612e06601a83612210565b9150612e1182612dd0565b602082019050919050565b60006020820190508181036000830152612e3581612df9565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b6000612e72601e83612210565b9150612e7d82612e3c565b602082019050919050565b60006020820190508181036000830152612ea181612e65565b9050919050565b6000612eb382611f01565b9150612ebe83611f01565b9250828203905081811115612ed657612ed5612a34565b5b92915050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f38602283612210565b9150612f4382612edc565b604082019050919050565b60006020820190508181036000830152612f6781612f2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220405e7bdecad9ffa002407a060a6b62670e3632a4618312d59b75ead84a8ca3ed64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x33FB CODESIZE SUB DUP1 PUSH3 0x33FB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x43 SWAP2 SWAP1 PUSH3 0x3B7 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55 PUSH3 0x1A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x15F PUSH1 0x0 DUP1 SHL PUSH3 0x153 PUSH3 0x1A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A0 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH3 0x194 PUSH3 0x1A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3E9 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x1C1 DUP3 DUP3 PUSH3 0x1C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x1EF DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH3 0x264 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x260 JUMPI PUSH3 0x205 PUSH3 0x1A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x294 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x29C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B0 DUP4 DUP4 PUSH3 0x316 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x30B JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x310 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36B DUP3 PUSH3 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37F DUP3 PUSH3 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x391 DUP2 PUSH3 0x372 JUMP JUMPDEST DUP2 EQ PUSH3 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3B1 DUP2 PUSH3 0x386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3D0 JUMPI PUSH3 0x3CF PUSH3 0x339 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3E0 DUP5 DUP3 DUP6 ADD PUSH3 0x3A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3002 DUP1 PUSH3 0x3F9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xE0E9349B EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xECEAB5C5 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6EF79B4 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xBD7FE217 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x4B9 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x9588E614 EQ PUSH2 0x42C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x81613F25 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x8A6E0169 EQ PUSH2 0x3A4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x38B7F446 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x38B7F446 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x527A52C8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x5E6A4FB0 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x669004F9 EQ PUSH2 0x360 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2F41FFD0 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x26BA7898 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x26BA7898 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x2D906E63 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x2DC47153 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x296 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x16317C21 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x19CB170C EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH2 0xC86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH2 0xE0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B6 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x142B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x529 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B8 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x5B3 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6CF PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x6CA PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x7BC PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x7B7 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP3 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x2479 JUMP JUMPDEST POP PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 TIMESTAMP DUP3 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP3 SWAP2 SWAP1 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x906 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x901 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP3 DUP3 PUSH2 0x1717 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x961 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D8 DUP3 DUP3 PUSH2 0x17AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xA7E PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xA79 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB72 PUSH2 0x1238 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBF SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xD04 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xCFF PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH2 0xDF6 PUSH5 0x2540BE400 DUP4 PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xE88 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xE83 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xED1 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP1 POP DUP1 ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 PUSH2 0xF24 PUSH2 0xEF9 PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF16 PUSH8 0xDE0B6B3A7640000 PUSH1 0xC SLOAD PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF43 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1B61 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1BB9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4275726E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x2962 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 PUSH2 0x1090 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1BB9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0712D68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x111B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D696E7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1179 SWAP2 SWAP1 PUSH2 0x2962 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11ED SWAP1 PUSH2 0x2A63 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x2A6A493F767EC856DCAC2F52ECC7E244B432C2D615092EF532C22A94568ED995 TIMESTAMP DUP3 PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12F5 SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1321 SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x136E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1343 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x136E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1351 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DE PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D9 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x141D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1427 DUP3 DUP3 PUSH2 0x17AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x14A9 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x14A4 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DF SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0xF SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1552 SWAP1 PUSH2 0x2A63 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156F PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158D PUSH2 0x1238 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DA SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1649 SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x17A7 JUMPI PUSH2 0x174C PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1CA1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x183B JUMPI PUSH2 0x17E0 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1851 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2BCF JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST EQ PUSH2 0x18AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A5 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x18E7 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1922 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP3 EQ PUSH2 0x1AE9 JUMPI DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xC SLOAD DUP2 EQ PUSH2 0x1AFA JUMPI DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4E SWAP1 PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1BA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9C SWAP1 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1BFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF5 SWAP1 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1C0A SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6A DUP3 PUSH1 0x0 ADD PUSH2 0x1D68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1DE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x1D1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D13 SWAP1 PUSH2 0x2F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D85 DUP4 DUP4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x1DDE JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1E1B SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E4D JUMPI PUSH2 0x1E4C PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH2 0x1E8C SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x2F9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4D DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6A DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FA6 DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2002 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x200D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x201F DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203A PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2049 DUP5 DUP3 DUP6 ADD PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2078 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH2 0x2093 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A2 DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210B DUP6 DUP3 DUP7 ADD PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A PUSH2 0x2135 PUSH2 0x2130 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214C DUP3 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216E DUP2 PUSH2 0x2153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2189 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C5 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x21CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x223F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2267 DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH2 0x2271 DUP2 DUP6 PUSH2 0x2210 JUMP JUMPDEST SWAP4 POP PUSH2 0x2281 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x228A DUP2 PUSH2 0x224B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 DUP8 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP PUSH2 0x22BE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x22CB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x22D8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EC DUP3 PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FC DUP2 PUSH2 0x22E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2319 DUP2 PUSH2 0x22F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2343 DUP5 DUP3 DUP6 ADD PUSH2 0x230A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2382 PUSH1 0xB DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x238D DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B1 DUP2 PUSH2 0x2375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE PUSH1 0x1F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241D DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2456 DUP2 PUSH2 0x21CF JUMP JUMPDEST DUP2 EQ PUSH2 0x2461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2473 DUP2 PUSH2 0x244D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248F JUMPI PUSH2 0x248E PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x249D DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x24C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252B PUSH1 0x2F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2536 DUP3 PUSH2 0x24CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255A DUP2 PUSH2 0x251E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25BD PUSH1 0x2F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP3 PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EC DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH1 0x20 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2634 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2658 DUP2 PUSH2 0x261C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267E DUP2 PUSH2 0x265F JUMP JUMPDEST DUP2 EQ PUSH2 0x2689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x269B DUP2 PUSH2 0x2675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B0 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D1 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E0 DUP9 DUP3 DUP10 ADD PUSH2 0x268C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x26F1 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2702 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2713 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2724 DUP9 DUP3 DUP10 ADD PUSH2 0x268C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2822 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x27E5 JUMP JUMPDEST PUSH2 0x282C DUP7 DUP4 PUSH2 0x27E5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285F PUSH2 0x285A PUSH2 0x2855 DUP5 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2879 DUP4 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x288D PUSH2 0x2885 DUP3 PUSH2 0x2866 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x27F2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x28A2 PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x28AD DUP2 DUP5 DUP5 PUSH2 0x2870 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28C6 PUSH1 0x0 DUP3 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x28E7 DUP2 PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0x28F0 DUP5 PUSH2 0x27D5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x28FF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2913 PUSH2 0x290B DUP6 PUSH2 0x27D5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x28B2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2939 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x291B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2952 DUP4 DUP4 PUSH2 0x2928 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296B DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2984 JUMPI PUSH2 0x2983 PUSH2 0x2731 JUMP JUMPDEST JUMPDEST PUSH2 0x298E DUP3 SLOAD PUSH2 0x278F JUMP JUMPDEST PUSH2 0x2999 DUP3 DUP3 DUP6 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29CC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x29BA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x29C4 DUP6 DUP3 PUSH2 0x2946 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x29DA DUP7 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A02 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A1F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A1B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2928 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A6E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2AA0 JUMPI PUSH2 0x2A9F PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 PUSH1 0x30 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B12 DUP3 PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B36 DUP2 PUSH2 0x2AFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B99 PUSH1 0x26 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA4 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BC8 DUP2 PUSH2 0x2B8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDA DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE5 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BF3 DUP2 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C0A JUMPI PUSH2 0x2C09 PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C56 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C66 JUMPI PUSH2 0x2C65 PUSH2 0x2C11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCD PUSH1 0x21 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFC DUP2 PUSH2 0x2CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D19 JUMPI PUSH2 0x2D18 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D27 DUP5 DUP3 DUP6 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3B DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D46 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D5E JUMPI PUSH2 0x2D5D PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9A PUSH1 0x1B DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA5 DUP3 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC9 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E06 PUSH1 0x1A DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E11 DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E35 DUP2 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E72 PUSH1 0x1E DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7D DUP3 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA1 DUP2 PUSH2 0x2E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EBE DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2ED6 JUMPI PUSH2 0x2ED5 PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F38 PUSH1 0x22 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F43 DUP3 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F67 DUP2 PUSH2 0x2F2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5E PUSH28 0xDECAD9FFA002407A060A6B62670E3632A4618312D59B75EAD84A8CA3 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"526:4570:13:-:0;;;1224:4;1190:38;;1670:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:2;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;857:135;1637:1:11;1743:7;:22;;;;1712:5:13;1705:4;;:12;;;;;;;;;;;;;;;;;;1728:44;1764:4:1;1739:18:13;;1759:12;:10;;;:12;;:::i;:::-;1728:10;;;:44;;:::i;:::-;1783:37;1530:24;1807:12;:10;;;:12;;:::i;:::-;1783:10;;;:37;;:::i;:::-;1670:158;526:4570;;590:96:9;643:7;669:10;662:17;;590:96;:::o;6580:110:1:-;6658:25;6669:4;6675:7;6658:10;;;:25;;:::i;:::-;6580:110;;:::o;7017:184::-;7090:33;7115:7;7090:6;:12;7097:4;7090:12;;;;;;;;;;;:20;;:24;;;;:33;;;;:::i;:::-;7086:109;;;7171:12;:10;;;:12;;:::i;:::-;7144:40;;7162:7;7144:40;;7156:4;7144:40;;;;;;;;;;7086:109;7017:184;;:::o;6421:150:10:-;6491:4;6514:50;6519:3;:10;;6555:5;6539:23;;6531:32;;6514:4;;;:50;;:::i;:::-;6507:57;;6421:150;;;;:::o;1632:404::-;1695:4;1716:21;1726:3;1731:5;1716:9;;;:21;;:::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;3797:127::-;3870:4;3916:1;3893:3;:12;;:19;3906:5;3893:19;;;;;;;;;;;;:24;;3886:31;;3797:127;;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:377::-;1095:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:119;;;1150:79;;:::i;:::-;1112:119;1270:1;1295:77;1364:7;1355:6;1344:9;1340:22;1295:77;:::i;:::-;1285:87;;1241:141;1012:377;;;;:::o;526:4570:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_74":{"entryPoint":4811,"id":74,"parameterSlots":0,"returnSlots":0},"@GOVERN_ROLE_2708":{"entryPoint":2524,"id":2708,"parameterSlots":0,"returnSlots":0},"@_add_2027":{"entryPoint":7545,"id":2027,"parameterSlots":2,"returnSlots":1},"@_at_2167":{"entryPoint":7377,"id":2167,"parameterSlots":2,"returnSlots":1},"@_contains_2127":{"entryPoint":7493,"id":2127,"parameterSlots":2,"returnSlots":1},"@_grantRole_306":{"entryPoint":5911,"id":306,"parameterSlots":2,"returnSlots":0},"@_length_2141":{"entryPoint":7528,"id":2141,"parameterSlots":1,"returnSlots":1},"@_msgSender_1962":{"entryPoint":5903,"id":1962,"parameterSlots":0,"returnSlots":1},"@_remove_2108":{"entryPoint":7657,"id":2108,"parameterSlots":2,"returnSlots":1},"@_revokeRole_330":{"entryPoint":6059,"id":330,"parameterSlots":2,"returnSlots":0},"@_supplyChanges_2672":{"entryPoint":4818,"id":2672,"parameterSlots":0,"returnSlots":0},"@addColateralToken_2796":{"entryPoint":5163,"id":2796,"parameterSlots":1,"returnSlots":0},"@add_2289":{"entryPoint":7281,"id":2289,"parameterSlots":2,"returnSlots":1},"@add_623":{"entryPoint":6915,"id":623,"parameterSlots":2,"returnSlots":1},"@at_2385":{"entryPoint":7186,"id":2385,"parameterSlots":2,"returnSlots":1},"@ausdsupply_2682":{"entryPoint":5002,"id":2682,"parameterSlots":0,"returnSlots":0},"@colateralReBalancing_2905":{"entryPoint":6329,"id":2905,"parameterSlots":0,"returnSlots":1},"@contains_2343":{"entryPoint":7212,"id":2343,"parameterSlots":2,"returnSlots":1},"@datafeed_2684":{"entryPoint":1816,"id":2684,"parameterSlots":0,"returnSlots":0},"@div_701":{"entryPoint":7009,"id":701,"parameterSlots":2,"returnSlots":1},"@fetchColPrice_2829":{"entryPoint":3206,"id":2829,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_169":{"entryPoint":1383,"id":169,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_136":{"entryPoint":5008,"id":136,"parameterSlots":1,"returnSlots":1},"@getRoleMember_155":{"entryPoint":4705,"id":155,"parameterSlots":2,"returnSlots":1},"@grantRole_195":{"entryPoint":2271,"id":195,"parameterSlots":2,"returnSlots":0},"@hasRole_120":{"entryPoint":4755,"id":120,"parameterSlots":2,"returnSlots":1},"@length_2358":{"entryPoint":7260,"id":2358,"parameterSlots":1,"returnSlots":1},"@mul_679":{"entryPoint":6207,"id":679,"parameterSlots":2,"returnSlots":1},"@owner_376":{"entryPoint":4664,"id":376,"parameterSlots":0,"returnSlots":1},"@remove_2316":{"entryPoint":7329,"id":2316,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_412":{"entryPoint":2892,"id":412,"parameterSlots":0,"returnSlots":0},"@renounceRole_243":{"entryPoint":2393,"id":243,"parameterSlots":2,"returnSlots":0},"@reserveCount_2703":{"entryPoint":1371,"id":2703,"parameterSlots":0,"returnSlots":0},"@revokeRole_221":{"entryPoint":5047,"id":221,"parameterSlots":2,"returnSlots":0},"@rsvList_2667":{"entryPoint":2830,"id":2667,"parameterSlots":0,"returnSlots":0},"@setAUSDSupply_2924":{"entryPoint":1694,"id":2924,"parameterSlots":1,"returnSlots":0},"@setDataFeedAddress_2768":{"entryPoint":1415,"id":2768,"parameterSlots":1,"returnSlots":0},"@setReserveContract_2850":{"entryPoint":2560,"id":2850,"parameterSlots":1,"returnSlots":0},"@stableColatAmount_2691":{"entryPoint":4805,"id":2691,"parameterSlots":0,"returnSlots":0},"@stableColatPrice_2689":{"entryPoint":1377,"id":2689,"parameterSlots":0,"returnSlots":0},"@sub_645":{"entryPoint":7097,"id":645,"parameterSlots":2,"returnSlots":1},"@supplyChangeCount_2686":{"entryPoint":2387,"id":2686,"parameterSlots":0,"returnSlots":0},"@transferOwnership_440":{"entryPoint":5479,"id":440,"parameterSlots":1,"returnSlots":0},"@unstableColPrice_2701":{"entryPoint":2824,"id":2701,"parameterSlots":0,"returnSlots":0},"@unstableColatAmount_2699":{"entryPoint":5473,"id":2699,"parameterSlots":0,"returnSlots":0},"@validatePeg_3063":{"entryPoint":3594,"id":3063,"parameterSlots":0,"returnSlots":0},"@withdraw_3097":{"entryPoint":1854,"id":3097,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":8208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$1436":{"entryPoint":8970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":9868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":8048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8405,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":8591,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_IERC20_$1436":{"entryPoint":8991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":9910,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8363,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8093,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$1436_to_t_address_fromStack":{"entryPoint":8549,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack":{"entryPoint":12075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack":{"entryPoint":9502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":11148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack":{"entryPoint":11661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack":{"entryPoint":11877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f_to_t_string_memory_ptr_fromStack":{"entryPoint":11769,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack":{"entryPoint":11002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack":{"entryPoint":11456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack":{"entryPoint":9077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":9756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":9185,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":9648,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9252,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1436__to_t_address__fromStack_reversed":{"entryPoint":8564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8853,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11912,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11804,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9112,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9683,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9382,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10176,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8709,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8720,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11568,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11328,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11215,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11944,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10453,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8167,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8655,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7994,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$1436":{"entryPoint":8929,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8135,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":9823,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10418,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_IERC20_$1436_to_t_address":{"entryPoint":8531,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":8513,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":8479,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":10308,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10594,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8737,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10197,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10127,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10566,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":8469,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10851,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10536,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10804,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11281,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10080,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":12189,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12142,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10033,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10342,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7989,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8779,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10213,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10523,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10394,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb":{"entryPoint":11996,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811":{"entryPoint":9423,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":11069,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a":{"entryPoint":11620,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862":{"entryPoint":11836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f":{"entryPoint":11728,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3":{"entryPoint":10923,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3":{"entryPoint":11377,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd":{"entryPoint":9036,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":9715,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":9144,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":9569,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10226,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10352,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8185,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8004,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$1436":{"entryPoint":8947,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":9845,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10389,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30587:14","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:14","statements":[{"nodeType":"YulAssignment","src":"62:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:14","type":""}],"src":"7:77:14"},{"body":{"nodeType":"YulBlock","src":"155:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:14"},"nodeType":"YulFunctionCall","src":"177:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:14"},"nodeType":"YulFunctionCall","src":"165:37:14"},"nodeType":"YulExpressionStatement","src":"165:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:14","type":""}],"src":"90:118:14"},{"body":{"nodeType":"YulBlock","src":"312:124:14","statements":[{"nodeType":"YulAssignment","src":"322:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:14"},"nodeType":"YulFunctionCall","src":"411:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:14"},"nodeType":"YulFunctionCall","src":"358:71:14"},"nodeType":"YulExpressionStatement","src":"358:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:14","type":""}],"src":"214:222:14"},{"body":{"nodeType":"YulBlock","src":"482:35:14","statements":[{"nodeType":"YulAssignment","src":"492:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:14"},"nodeType":"YulFunctionCall","src":"502:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:14","type":""}],"src":"442:75:14"},{"body":{"nodeType":"YulBlock","src":"612:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:14"},"nodeType":"YulFunctionCall","src":"622:12:14"},"nodeType":"YulExpressionStatement","src":"622:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:14"},{"body":{"nodeType":"YulBlock","src":"735:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:14"},"nodeType":"YulFunctionCall","src":"745:12:14"},"nodeType":"YulExpressionStatement","src":"745:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:14"},{"body":{"nodeType":"YulBlock","src":"814:32:14","statements":[{"nodeType":"YulAssignment","src":"824:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"835:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"824:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"796:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"806:7:14","type":""}],"src":"769:77:14"},{"body":{"nodeType":"YulBlock","src":"895:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"952:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"961:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"964:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"954:6:14"},"nodeType":"YulFunctionCall","src":"954:12:14"},"nodeType":"YulExpressionStatement","src":"954:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"918:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"943:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"925:17:14"},"nodeType":"YulFunctionCall","src":"925:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"915:2:14"},"nodeType":"YulFunctionCall","src":"915:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"908:6:14"},"nodeType":"YulFunctionCall","src":"908:43:14"},"nodeType":"YulIf","src":"905:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"888:5:14","type":""}],"src":"852:122:14"},{"body":{"nodeType":"YulBlock","src":"1032:87:14","statements":[{"nodeType":"YulAssignment","src":"1042:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1064:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1051:12:14"},"nodeType":"YulFunctionCall","src":"1051:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1042:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1107:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1080:26:14"},"nodeType":"YulFunctionCall","src":"1080:33:14"},"nodeType":"YulExpressionStatement","src":"1080:33:14"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1010:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1018:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1026:5:14","type":""}],"src":"980:139:14"},{"body":{"nodeType":"YulBlock","src":"1191:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"1237:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1239:77:14"},"nodeType":"YulFunctionCall","src":"1239:79:14"},"nodeType":"YulExpressionStatement","src":"1239:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1212:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1208:3:14"},"nodeType":"YulFunctionCall","src":"1208:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1233:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1204:3:14"},"nodeType":"YulFunctionCall","src":"1204:32:14"},"nodeType":"YulIf","src":"1201:119:14"},{"nodeType":"YulBlock","src":"1330:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1345:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1359:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1349:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1374:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1409:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1420:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1405:3:14"},"nodeType":"YulFunctionCall","src":"1405:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1429:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1384:20:14"},"nodeType":"YulFunctionCall","src":"1384:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1374:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1161:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1172:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1184:6:14","type":""}],"src":"1125:329:14"},{"body":{"nodeType":"YulBlock","src":"1525:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1542:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1565:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1547:17:14"},"nodeType":"YulFunctionCall","src":"1547:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1535:6:14"},"nodeType":"YulFunctionCall","src":"1535:37:14"},"nodeType":"YulExpressionStatement","src":"1535:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1513:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1520:3:14","type":""}],"src":"1460:118:14"},{"body":{"nodeType":"YulBlock","src":"1682:124:14","statements":[{"nodeType":"YulAssignment","src":"1692:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1704:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1700:3:14"},"nodeType":"YulFunctionCall","src":"1700:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1692:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1772:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1785:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1796:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1781:3:14"},"nodeType":"YulFunctionCall","src":"1781:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"1728:43:14"},"nodeType":"YulFunctionCall","src":"1728:71:14"},"nodeType":"YulExpressionStatement","src":"1728:71:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1654:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1666:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1677:4:14","type":""}],"src":"1584:222:14"},{"body":{"nodeType":"YulBlock","src":"1857:81:14","statements":[{"nodeType":"YulAssignment","src":"1867:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1889:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1878:3:14"},"nodeType":"YulFunctionCall","src":"1878:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1867:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1839:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1849:7:14","type":""}],"src":"1812:126:14"},{"body":{"nodeType":"YulBlock","src":"1989:51:14","statements":[{"nodeType":"YulAssignment","src":"1999:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2028:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2010:17:14"},"nodeType":"YulFunctionCall","src":"2010:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1999:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1971:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1981:7:14","type":""}],"src":"1944:96:14"},{"body":{"nodeType":"YulBlock","src":"2089:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2146:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2155:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2158:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2148:6:14"},"nodeType":"YulFunctionCall","src":"2148:12:14"},"nodeType":"YulExpressionStatement","src":"2148:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2112:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2137:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2119:17:14"},"nodeType":"YulFunctionCall","src":"2119:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2109:2:14"},"nodeType":"YulFunctionCall","src":"2109:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2102:6:14"},"nodeType":"YulFunctionCall","src":"2102:43:14"},"nodeType":"YulIf","src":"2099:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2082:5:14","type":""}],"src":"2046:122:14"},{"body":{"nodeType":"YulBlock","src":"2226:87:14","statements":[{"nodeType":"YulAssignment","src":"2236:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2258:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2245:12:14"},"nodeType":"YulFunctionCall","src":"2245:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2236:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2301:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2274:26:14"},"nodeType":"YulFunctionCall","src":"2274:33:14"},"nodeType":"YulExpressionStatement","src":"2274:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2204:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2212:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2220:5:14","type":""}],"src":"2174:139:14"},{"body":{"nodeType":"YulBlock","src":"2385:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"2431:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2433:77:14"},"nodeType":"YulFunctionCall","src":"2433:79:14"},"nodeType":"YulExpressionStatement","src":"2433:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2406:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2415:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2402:3:14"},"nodeType":"YulFunctionCall","src":"2402:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2427:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2398:3:14"},"nodeType":"YulFunctionCall","src":"2398:32:14"},"nodeType":"YulIf","src":"2395:119:14"},{"nodeType":"YulBlock","src":"2524:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2539:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2553:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2543:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2568:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2603:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2614:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2599:3:14"},"nodeType":"YulFunctionCall","src":"2599:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2623:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2578:20:14"},"nodeType":"YulFunctionCall","src":"2578:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2568:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2355:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2366:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2378:6:14","type":""}],"src":"2319:329:14"},{"body":{"nodeType":"YulBlock","src":"2697:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2754:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2763:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2766:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2756:6:14"},"nodeType":"YulFunctionCall","src":"2756:12:14"},"nodeType":"YulExpressionStatement","src":"2756:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2720:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2745:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2727:17:14"},"nodeType":"YulFunctionCall","src":"2727:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2717:2:14"},"nodeType":"YulFunctionCall","src":"2717:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2710:6:14"},"nodeType":"YulFunctionCall","src":"2710:43:14"},"nodeType":"YulIf","src":"2707:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2690:5:14","type":""}],"src":"2654:122:14"},{"body":{"nodeType":"YulBlock","src":"2834:87:14","statements":[{"nodeType":"YulAssignment","src":"2844:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2866:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2853:12:14"},"nodeType":"YulFunctionCall","src":"2853:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2844:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2909:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2882:26:14"},"nodeType":"YulFunctionCall","src":"2882:33:14"},"nodeType":"YulExpressionStatement","src":"2882:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2812:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2820:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2828:5:14","type":""}],"src":"2782:139:14"},{"body":{"nodeType":"YulBlock","src":"2993:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"3039:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3041:77:14"},"nodeType":"YulFunctionCall","src":"3041:79:14"},"nodeType":"YulExpressionStatement","src":"3041:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3014:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3010:3:14"},"nodeType":"YulFunctionCall","src":"3010:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3035:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3006:3:14"},"nodeType":"YulFunctionCall","src":"3006:32:14"},"nodeType":"YulIf","src":"3003:119:14"},{"nodeType":"YulBlock","src":"3132:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3147:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3161:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3151:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3176:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3211:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3222:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3207:3:14"},"nodeType":"YulFunctionCall","src":"3207:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3231:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3186:20:14"},"nodeType":"YulFunctionCall","src":"3186:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3176:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2963:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2974:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2986:6:14","type":""}],"src":"2927:329:14"},{"body":{"nodeType":"YulBlock","src":"3327:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3344:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3367:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3349:17:14"},"nodeType":"YulFunctionCall","src":"3349:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:14"},"nodeType":"YulFunctionCall","src":"3337:37:14"},"nodeType":"YulExpressionStatement","src":"3337:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3315:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3322:3:14","type":""}],"src":"3262:118:14"},{"body":{"nodeType":"YulBlock","src":"3484:124:14","statements":[{"nodeType":"YulAssignment","src":"3494:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3506:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3517:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3502:3:14"},"nodeType":"YulFunctionCall","src":"3502:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3494:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3574:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3598:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:14"},"nodeType":"YulFunctionCall","src":"3583:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3530:43:14"},"nodeType":"YulFunctionCall","src":"3530:71:14"},"nodeType":"YulExpressionStatement","src":"3530:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3456:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3468:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3479:4:14","type":""}],"src":"3386:222:14"},{"body":{"nodeType":"YulBlock","src":"3697:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"3743:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3745:77:14"},"nodeType":"YulFunctionCall","src":"3745:79:14"},"nodeType":"YulExpressionStatement","src":"3745:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3718:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3727:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3714:3:14"},"nodeType":"YulFunctionCall","src":"3714:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3739:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3710:3:14"},"nodeType":"YulFunctionCall","src":"3710:32:14"},"nodeType":"YulIf","src":"3707:119:14"},{"nodeType":"YulBlock","src":"3836:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3851:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3865:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3855:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3880:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3915:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3926:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3911:3:14"},"nodeType":"YulFunctionCall","src":"3911:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3935:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3890:20:14"},"nodeType":"YulFunctionCall","src":"3890:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3880:6:14"}]}]},{"nodeType":"YulBlock","src":"3963:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3978:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3992:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3982:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4008:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4054:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:14"},"nodeType":"YulFunctionCall","src":"4039:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4063:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4018:20:14"},"nodeType":"YulFunctionCall","src":"4018:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4008:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3659:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3670:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3682:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3690:6:14","type":""}],"src":"3614:474:14"},{"body":{"nodeType":"YulBlock","src":"4126:28:14","statements":[{"nodeType":"YulAssignment","src":"4136:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"4143:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4136:3:14"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4112:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4122:3:14","type":""}],"src":"4094:60:14"},{"body":{"nodeType":"YulBlock","src":"4220:82:14","statements":[{"nodeType":"YulAssignment","src":"4230:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4288:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4270:17:14"},"nodeType":"YulFunctionCall","src":"4270:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4261:8:14"},"nodeType":"YulFunctionCall","src":"4261:34:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4243:17:14"},"nodeType":"YulFunctionCall","src":"4243:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4230:9:14"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4200:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4210:9:14","type":""}],"src":"4160:142:14"},{"body":{"nodeType":"YulBlock","src":"4368:66:14","statements":[{"nodeType":"YulAssignment","src":"4378:50:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4422:5:14"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4391:30:14"},"nodeType":"YulFunctionCall","src":"4391:37:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4378:9:14"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4348:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4358:9:14","type":""}],"src":"4308:126:14"},{"body":{"nodeType":"YulBlock","src":"4515:66:14","statements":[{"nodeType":"YulAssignment","src":"4525:50:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4569:5:14"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4538:30:14"},"nodeType":"YulFunctionCall","src":"4538:37:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4525:9:14"}]}]},"name":"convert_t_contract$_IERC20_$1436_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4495:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4505:9:14","type":""}],"src":"4440:141:14"},{"body":{"nodeType":"YulBlock","src":"4667:81:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4684:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4735:5:14"}],"functionName":{"name":"convert_t_contract$_IERC20_$1436_to_t_address","nodeType":"YulIdentifier","src":"4689:45:14"},"nodeType":"YulFunctionCall","src":"4689:52:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4677:6:14"},"nodeType":"YulFunctionCall","src":"4677:65:14"},"nodeType":"YulExpressionStatement","src":"4677:65:14"}]},"name":"abi_encode_t_contract$_IERC20_$1436_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4655:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4662:3:14","type":""}],"src":"4587:161:14"},{"body":{"nodeType":"YulBlock","src":"4867:139:14","statements":[{"nodeType":"YulAssignment","src":"4877:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4900:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:14"},"nodeType":"YulFunctionCall","src":"4885:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4877:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4972:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4985:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4996:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4981:3:14"},"nodeType":"YulFunctionCall","src":"4981:17:14"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$1436_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4913:58:14"},"nodeType":"YulFunctionCall","src":"4913:86:14"},"nodeType":"YulExpressionStatement","src":"4913:86:14"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1436__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4839:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4851:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4862:4:14","type":""}],"src":"4754:252:14"},{"body":{"nodeType":"YulBlock","src":"5095:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"5141:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5143:77:14"},"nodeType":"YulFunctionCall","src":"5143:79:14"},"nodeType":"YulExpressionStatement","src":"5143:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5116:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5125:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5112:3:14"},"nodeType":"YulFunctionCall","src":"5112:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5137:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5108:3:14"},"nodeType":"YulFunctionCall","src":"5108:32:14"},"nodeType":"YulIf","src":"5105:119:14"},{"nodeType":"YulBlock","src":"5234:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5249:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5263:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5253:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5278:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5313:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5324:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5309:3:14"},"nodeType":"YulFunctionCall","src":"5309:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5333:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5288:20:14"},"nodeType":"YulFunctionCall","src":"5288:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5278:6:14"}]}]},{"nodeType":"YulBlock","src":"5361:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5376:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5390:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5380:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5406:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5441:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5452:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5437:3:14"},"nodeType":"YulFunctionCall","src":"5437:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5461:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5416:20:14"},"nodeType":"YulFunctionCall","src":"5416:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5406:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5057:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5068:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5080:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5088:6:14","type":""}],"src":"5012:474:14"},{"body":{"nodeType":"YulBlock","src":"5534:48:14","statements":[{"nodeType":"YulAssignment","src":"5544:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5569:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5562:6:14"},"nodeType":"YulFunctionCall","src":"5562:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5555:6:14"},"nodeType":"YulFunctionCall","src":"5555:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5544:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5516:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5526:7:14","type":""}],"src":"5492:90:14"},{"body":{"nodeType":"YulBlock","src":"5647:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5664:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5684:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5669:14:14"},"nodeType":"YulFunctionCall","src":"5669:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5657:6:14"},"nodeType":"YulFunctionCall","src":"5657:34:14"},"nodeType":"YulExpressionStatement","src":"5657:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5635:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5642:3:14","type":""}],"src":"5588:109:14"},{"body":{"nodeType":"YulBlock","src":"5795:118:14","statements":[{"nodeType":"YulAssignment","src":"5805:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:14"},"nodeType":"YulFunctionCall","src":"5813:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5805:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5879:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5892:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5903:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5888:3:14"},"nodeType":"YulFunctionCall","src":"5888:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5841:37:14"},"nodeType":"YulFunctionCall","src":"5841:65:14"},"nodeType":"YulExpressionStatement","src":"5841:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5767:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5779:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5790:4:14","type":""}],"src":"5703:210:14"},{"body":{"nodeType":"YulBlock","src":"5978:40:14","statements":[{"nodeType":"YulAssignment","src":"5989:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6005:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5999:5:14"},"nodeType":"YulFunctionCall","src":"5999:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5989:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5961:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5971:6:14","type":""}],"src":"5919:99:14"},{"body":{"nodeType":"YulBlock","src":"6120:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6137:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6142:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6130:6:14"},"nodeType":"YulFunctionCall","src":"6130:19:14"},"nodeType":"YulExpressionStatement","src":"6130:19:14"},{"nodeType":"YulAssignment","src":"6158:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6177:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6182:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6173:3:14"},"nodeType":"YulFunctionCall","src":"6173:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6158:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6092:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6097:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6108:11:14","type":""}],"src":"6024:169:14"},{"body":{"nodeType":"YulBlock","src":"6261:184:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6271:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6280:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6275:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6340:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6365:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"6370:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6361:3:14"},"nodeType":"YulFunctionCall","src":"6361:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6384:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"6389:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6380:3:14"},"nodeType":"YulFunctionCall","src":"6380:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6374:5:14"},"nodeType":"YulFunctionCall","src":"6374:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6354:6:14"},"nodeType":"YulFunctionCall","src":"6354:39:14"},"nodeType":"YulExpressionStatement","src":"6354:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6301:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"6304:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6298:2:14"},"nodeType":"YulFunctionCall","src":"6298:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6312:19:14","statements":[{"nodeType":"YulAssignment","src":"6314:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6323:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"6326:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:14"},"nodeType":"YulFunctionCall","src":"6319:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6314:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"6294:3:14","statements":[]},"src":"6290:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6423:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6428:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:14"},"nodeType":"YulFunctionCall","src":"6419:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"6437:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6412:6:14"},"nodeType":"YulFunctionCall","src":"6412:27:14"},"nodeType":"YulExpressionStatement","src":"6412:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6243:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6248:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6253:6:14","type":""}],"src":"6199:246:14"},{"body":{"nodeType":"YulBlock","src":"6499:54:14","statements":[{"nodeType":"YulAssignment","src":"6509:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6527:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6534:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6523:3:14"},"nodeType":"YulFunctionCall","src":"6523:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6543:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6539:3:14"},"nodeType":"YulFunctionCall","src":"6539:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6519:3:14"},"nodeType":"YulFunctionCall","src":"6519:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6509:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6482:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6492:6:14","type":""}],"src":"6451:102:14"},{"body":{"nodeType":"YulBlock","src":"6651:285:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6661:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6708:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6675:32:14"},"nodeType":"YulFunctionCall","src":"6675:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6665:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6723:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6789:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6794:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6730:58:14"},"nodeType":"YulFunctionCall","src":"6730:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6723:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6849:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6856:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6845:3:14"},"nodeType":"YulFunctionCall","src":"6845:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6863:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6868:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6810:34:14"},"nodeType":"YulFunctionCall","src":"6810:65:14"},"nodeType":"YulExpressionStatement","src":"6810:65:14"},{"nodeType":"YulAssignment","src":"6884:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6895:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6922:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6900:21:14"},"nodeType":"YulFunctionCall","src":"6900:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6891:3:14"},"nodeType":"YulFunctionCall","src":"6891:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6884:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6632:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6639:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6647:3:14","type":""}],"src":"6559:377:14"},{"body":{"nodeType":"YulBlock","src":"7144:442:14","statements":[{"nodeType":"YulAssignment","src":"7154:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7166:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7177:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7162:3:14"},"nodeType":"YulFunctionCall","src":"7162:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7154:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7202:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7213:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:14"},"nodeType":"YulFunctionCall","src":"7198:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7221:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7227:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7217:3:14"},"nodeType":"YulFunctionCall","src":"7217:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7191:6:14"},"nodeType":"YulFunctionCall","src":"7191:47:14"},"nodeType":"YulExpressionStatement","src":"7191:47:14"},{"nodeType":"YulAssignment","src":"7247:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7319:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"7328:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7255:63:14"},"nodeType":"YulFunctionCall","src":"7255:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7247:4:14"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7387:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7400:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7411:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7396:3:14"},"nodeType":"YulFunctionCall","src":"7396:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7343:43:14"},"nodeType":"YulFunctionCall","src":"7343:72:14"},"nodeType":"YulExpressionStatement","src":"7343:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7469:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7482:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7493:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7478:3:14"},"nodeType":"YulFunctionCall","src":"7478:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7425:43:14"},"nodeType":"YulFunctionCall","src":"7425:72:14"},"nodeType":"YulExpressionStatement","src":"7425:72:14"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7551:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7575:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:14"},"nodeType":"YulFunctionCall","src":"7560:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7507:43:14"},"nodeType":"YulFunctionCall","src":"7507:72:14"},"nodeType":"YulExpressionStatement","src":"7507:72:14"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7092:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7104:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7112:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7120:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7128:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7139:4:14","type":""}],"src":"6942:644:14"},{"body":{"nodeType":"YulBlock","src":"7652:51:14","statements":[{"nodeType":"YulAssignment","src":"7662:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7691:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7673:17:14"},"nodeType":"YulFunctionCall","src":"7673:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7662:7:14"}]}]},"name":"cleanup_t_contract$_IERC20_$1436","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7634:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7644:7:14","type":""}],"src":"7592:111:14"},{"body":{"nodeType":"YulBlock","src":"7767:94:14","statements":[{"body":{"nodeType":"YulBlock","src":"7839:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7848:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7851:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7841:6:14"},"nodeType":"YulFunctionCall","src":"7841:12:14"},"nodeType":"YulExpressionStatement","src":"7841:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7790:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7830:5:14"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$1436","nodeType":"YulIdentifier","src":"7797:32:14"},"nodeType":"YulFunctionCall","src":"7797:39:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7787:2:14"},"nodeType":"YulFunctionCall","src":"7787:50:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7780:6:14"},"nodeType":"YulFunctionCall","src":"7780:58:14"},"nodeType":"YulIf","src":"7777:78:14"}]},"name":"validator_revert_t_contract$_IERC20_$1436","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7760:5:14","type":""}],"src":"7709:152:14"},{"body":{"nodeType":"YulBlock","src":"7934:102:14","statements":[{"nodeType":"YulAssignment","src":"7944:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7966:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7953:12:14"},"nodeType":"YulFunctionCall","src":"7953:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7944:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8024:5:14"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$1436","nodeType":"YulIdentifier","src":"7982:41:14"},"nodeType":"YulFunctionCall","src":"7982:48:14"},"nodeType":"YulExpressionStatement","src":"7982:48:14"}]},"name":"abi_decode_t_contract$_IERC20_$1436","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7912:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"7920:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7928:5:14","type":""}],"src":"7867:169:14"},{"body":{"nodeType":"YulBlock","src":"8123:278:14","statements":[{"body":{"nodeType":"YulBlock","src":"8169:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8171:77:14"},"nodeType":"YulFunctionCall","src":"8171:79:14"},"nodeType":"YulExpressionStatement","src":"8171:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8144:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8153:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8140:3:14"},"nodeType":"YulFunctionCall","src":"8140:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"8165:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8136:3:14"},"nodeType":"YulFunctionCall","src":"8136:32:14"},"nodeType":"YulIf","src":"8133:119:14"},{"nodeType":"YulBlock","src":"8262:132:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8277:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8291:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8281:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8306:78:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8356:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8367:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8352:3:14"},"nodeType":"YulFunctionCall","src":"8352:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8376:7:14"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1436","nodeType":"YulIdentifier","src":"8316:35:14"},"nodeType":"YulFunctionCall","src":"8316:68:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8306:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1436","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8093:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8104:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8116:6:14","type":""}],"src":"8042:359:14"},{"body":{"nodeType":"YulBlock","src":"8513:55:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8535:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8543:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8531:3:14"},"nodeType":"YulFunctionCall","src":"8531:14:14"},{"hexValue":"4e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"8547:13:14","type":"","value":"Not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8524:6:14"},"nodeType":"YulFunctionCall","src":"8524:37:14"},"nodeType":"YulExpressionStatement","src":"8524:37:14"}]},"name":"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8505:6:14","type":""}],"src":"8407:161:14"},{"body":{"nodeType":"YulBlock","src":"8720:220:14","statements":[{"nodeType":"YulAssignment","src":"8730:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8796:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8801:2:14","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8737:58:14"},"nodeType":"YulFunctionCall","src":"8737:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8730:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8902:3:14"}],"functionName":{"name":"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd","nodeType":"YulIdentifier","src":"8813:88:14"},"nodeType":"YulFunctionCall","src":"8813:93:14"},"nodeType":"YulExpressionStatement","src":"8813:93:14"},{"nodeType":"YulAssignment","src":"8915:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8926:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8931:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8922:3:14"},"nodeType":"YulFunctionCall","src":"8922:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8915:3:14"}]}]},"name":"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8708:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8716:3:14","type":""}],"src":"8574:366:14"},{"body":{"nodeType":"YulBlock","src":"9117:248:14","statements":[{"nodeType":"YulAssignment","src":"9127:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9139:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9150:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:14"},"nodeType":"YulFunctionCall","src":"9135:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9127:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9174:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9185:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9170:3:14"},"nodeType":"YulFunctionCall","src":"9170:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9193:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9189:3:14"},"nodeType":"YulFunctionCall","src":"9189:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9163:6:14"},"nodeType":"YulFunctionCall","src":"9163:47:14"},"nodeType":"YulExpressionStatement","src":"9163:47:14"},{"nodeType":"YulAssignment","src":"9219:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9353:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9227:124:14"},"nodeType":"YulFunctionCall","src":"9227:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9219:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9097:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9112:4:14","type":""}],"src":"8946:419:14"},{"body":{"nodeType":"YulBlock","src":"9477:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9499:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9507:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9495:3:14"},"nodeType":"YulFunctionCall","src":"9495:14:14"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"9511:33:14","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9488:6:14"},"nodeType":"YulFunctionCall","src":"9488:57:14"},"nodeType":"YulExpressionStatement","src":"9488:57:14"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9469:6:14","type":""}],"src":"9371:181:14"},{"body":{"nodeType":"YulBlock","src":"9704:220:14","statements":[{"nodeType":"YulAssignment","src":"9714:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9780:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9785:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9721:58:14"},"nodeType":"YulFunctionCall","src":"9721:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9714:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9886:3:14"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"9797:88:14"},"nodeType":"YulFunctionCall","src":"9797:93:14"},"nodeType":"YulExpressionStatement","src":"9797:93:14"},{"nodeType":"YulAssignment","src":"9899:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9910:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9915:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9906:3:14"},"nodeType":"YulFunctionCall","src":"9906:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9899:3:14"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9692:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9700:3:14","type":""}],"src":"9558:366:14"},{"body":{"nodeType":"YulBlock","src":"10101:248:14","statements":[{"nodeType":"YulAssignment","src":"10111:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10123:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10134:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10119:3:14"},"nodeType":"YulFunctionCall","src":"10119:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10111:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10158:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10169:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10154:3:14"},"nodeType":"YulFunctionCall","src":"10154:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10177:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10183:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10173:3:14"},"nodeType":"YulFunctionCall","src":"10173:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10147:6:14"},"nodeType":"YulFunctionCall","src":"10147:47:14"},"nodeType":"YulExpressionStatement","src":"10147:47:14"},{"nodeType":"YulAssignment","src":"10203:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10337:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10211:124:14"},"nodeType":"YulFunctionCall","src":"10211:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10203:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10081:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10096:4:14","type":""}],"src":"9930:419:14"},{"body":{"nodeType":"YulBlock","src":"10481:206:14","statements":[{"nodeType":"YulAssignment","src":"10491:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10503:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10514:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10499:3:14"},"nodeType":"YulFunctionCall","src":"10499:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10491:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10571:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10584:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10595:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10580:3:14"},"nodeType":"YulFunctionCall","src":"10580:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10527:43:14"},"nodeType":"YulFunctionCall","src":"10527:71:14"},"nodeType":"YulExpressionStatement","src":"10527:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10652:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10665:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10676:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10661:3:14"},"nodeType":"YulFunctionCall","src":"10661:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10608:43:14"},"nodeType":"YulFunctionCall","src":"10608:72:14"},"nodeType":"YulExpressionStatement","src":"10608:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10445:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10457:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10465:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10476:4:14","type":""}],"src":"10355:332:14"},{"body":{"nodeType":"YulBlock","src":"10733:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"10787:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10796:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10799:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10789:6:14"},"nodeType":"YulFunctionCall","src":"10789:12:14"},"nodeType":"YulExpressionStatement","src":"10789:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10756:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10778:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10763:14:14"},"nodeType":"YulFunctionCall","src":"10763:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10753:2:14"},"nodeType":"YulFunctionCall","src":"10753:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10746:6:14"},"nodeType":"YulFunctionCall","src":"10746:40:14"},"nodeType":"YulIf","src":"10743:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10726:5:14","type":""}],"src":"10693:116:14"},{"body":{"nodeType":"YulBlock","src":"10875:77:14","statements":[{"nodeType":"YulAssignment","src":"10885:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10900:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10894:5:14"},"nodeType":"YulFunctionCall","src":"10894:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10885:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10940:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10916:23:14"},"nodeType":"YulFunctionCall","src":"10916:30:14"},"nodeType":"YulExpressionStatement","src":"10916:30:14"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10853:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"10861:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10869:5:14","type":""}],"src":"10815:137:14"},{"body":{"nodeType":"YulBlock","src":"11032:271:14","statements":[{"body":{"nodeType":"YulBlock","src":"11078:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11080:77:14"},"nodeType":"YulFunctionCall","src":"11080:79:14"},"nodeType":"YulExpressionStatement","src":"11080:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11053:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11062:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11049:3:14"},"nodeType":"YulFunctionCall","src":"11049:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"11074:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11045:3:14"},"nodeType":"YulFunctionCall","src":"11045:32:14"},"nodeType":"YulIf","src":"11042:119:14"},{"nodeType":"YulBlock","src":"11171:125:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11186:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11200:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11190:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11215:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11258:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11269:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11254:3:14"},"nodeType":"YulFunctionCall","src":"11254:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11278:7:14"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11225:28:14"},"nodeType":"YulFunctionCall","src":"11225:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11215:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11002:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11013:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11025:6:14","type":""}],"src":"10958:345:14"},{"body":{"nodeType":"YulBlock","src":"11435:206:14","statements":[{"nodeType":"YulAssignment","src":"11445:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11457:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11468:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:14"},"nodeType":"YulFunctionCall","src":"11453:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11445:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11525:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11538:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11549:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11534:3:14"},"nodeType":"YulFunctionCall","src":"11534:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11481:43:14"},"nodeType":"YulFunctionCall","src":"11481:71:14"},"nodeType":"YulExpressionStatement","src":"11481:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11606:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11619:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11630:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11615:3:14"},"nodeType":"YulFunctionCall","src":"11615:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11562:43:14"},"nodeType":"YulFunctionCall","src":"11562:72:14"},"nodeType":"YulExpressionStatement","src":"11562:72:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11399:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11411:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11419:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11430:4:14","type":""}],"src":"11309:332:14"},{"body":{"nodeType":"YulBlock","src":"11753:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11775:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11783:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11771:3:14"},"nodeType":"YulFunctionCall","src":"11771:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e","kind":"string","nodeType":"YulLiteral","src":"11787:34:14","type":"","value":"AccessControl: sender must be an"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11764:6:14"},"nodeType":"YulFunctionCall","src":"11764:58:14"},"nodeType":"YulExpressionStatement","src":"11764:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11843:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11851:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11839:3:14"},"nodeType":"YulFunctionCall","src":"11839:15:14"},{"hexValue":"2061646d696e20746f206772616e74","kind":"string","nodeType":"YulLiteral","src":"11856:17:14","type":"","value":" admin to grant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11832:6:14"},"nodeType":"YulFunctionCall","src":"11832:42:14"},"nodeType":"YulExpressionStatement","src":"11832:42:14"}]},"name":"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11745:6:14","type":""}],"src":"11647:234:14"},{"body":{"nodeType":"YulBlock","src":"12033:220:14","statements":[{"nodeType":"YulAssignment","src":"12043:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12109:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12114:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12050:58:14"},"nodeType":"YulFunctionCall","src":"12050:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12043:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12215:3:14"}],"functionName":{"name":"store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811","nodeType":"YulIdentifier","src":"12126:88:14"},"nodeType":"YulFunctionCall","src":"12126:93:14"},"nodeType":"YulExpressionStatement","src":"12126:93:14"},{"nodeType":"YulAssignment","src":"12228:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12239:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12244:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12235:3:14"},"nodeType":"YulFunctionCall","src":"12235:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12228:3:14"}]}]},"name":"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12021:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12029:3:14","type":""}],"src":"11887:366:14"},{"body":{"nodeType":"YulBlock","src":"12430:248:14","statements":[{"nodeType":"YulAssignment","src":"12440:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12452:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12463:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12448:3:14"},"nodeType":"YulFunctionCall","src":"12448:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12440:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12498:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:14"},"nodeType":"YulFunctionCall","src":"12483:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12506:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12512:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12502:3:14"},"nodeType":"YulFunctionCall","src":"12502:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12476:6:14"},"nodeType":"YulFunctionCall","src":"12476:47:14"},"nodeType":"YulExpressionStatement","src":"12476:47:14"},{"nodeType":"YulAssignment","src":"12532:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12666:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12540:124:14"},"nodeType":"YulFunctionCall","src":"12540:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12532:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12410:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12425:4:14","type":""}],"src":"12259:419:14"},{"body":{"nodeType":"YulBlock","src":"12790:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12812:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12820:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12808:3:14"},"nodeType":"YulFunctionCall","src":"12808:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"12824:34:14","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12801:6:14"},"nodeType":"YulFunctionCall","src":"12801:58:14"},"nodeType":"YulExpressionStatement","src":"12801:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12880:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12888:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12876:3:14"},"nodeType":"YulFunctionCall","src":"12876:15:14"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12893:17:14","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12869:6:14"},"nodeType":"YulFunctionCall","src":"12869:42:14"},"nodeType":"YulExpressionStatement","src":"12869:42:14"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12782:6:14","type":""}],"src":"12684:234:14"},{"body":{"nodeType":"YulBlock","src":"13070:220:14","statements":[{"nodeType":"YulAssignment","src":"13080:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13146:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13151:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13087:58:14"},"nodeType":"YulFunctionCall","src":"13087:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13080:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13252:3:14"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"13163:88:14"},"nodeType":"YulFunctionCall","src":"13163:93:14"},"nodeType":"YulExpressionStatement","src":"13163:93:14"},{"nodeType":"YulAssignment","src":"13265:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13276:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13281:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:14"},"nodeType":"YulFunctionCall","src":"13272:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13265:3:14"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13058:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13066:3:14","type":""}],"src":"12924:366:14"},{"body":{"nodeType":"YulBlock","src":"13467:248:14","statements":[{"nodeType":"YulAssignment","src":"13477:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13489:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13500:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13485:3:14"},"nodeType":"YulFunctionCall","src":"13485:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13477:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13524:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13535:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13520:3:14"},"nodeType":"YulFunctionCall","src":"13520:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13543:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13549:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13539:3:14"},"nodeType":"YulFunctionCall","src":"13539:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13513:6:14"},"nodeType":"YulFunctionCall","src":"13513:47:14"},"nodeType":"YulExpressionStatement","src":"13513:47:14"},{"nodeType":"YulAssignment","src":"13569:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13703:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13577:124:14"},"nodeType":"YulFunctionCall","src":"13577:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13569:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13447:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13462:4:14","type":""}],"src":"13296:419:14"},{"body":{"nodeType":"YulBlock","src":"13827:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13849:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13857:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13845:3:14"},"nodeType":"YulFunctionCall","src":"13845:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13861:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13838:6:14"},"nodeType":"YulFunctionCall","src":"13838:58:14"},"nodeType":"YulExpressionStatement","src":"13838:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13819:6:14","type":""}],"src":"13721:182:14"},{"body":{"nodeType":"YulBlock","src":"14055:220:14","statements":[{"nodeType":"YulAssignment","src":"14065:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14131:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14136:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14072:58:14"},"nodeType":"YulFunctionCall","src":"14072:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14065:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14237:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"14148:88:14"},"nodeType":"YulFunctionCall","src":"14148:93:14"},"nodeType":"YulExpressionStatement","src":"14148:93:14"},{"nodeType":"YulAssignment","src":"14250:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14261:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14266:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14257:3:14"},"nodeType":"YulFunctionCall","src":"14257:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14250:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14043:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14051:3:14","type":""}],"src":"13909:366:14"},{"body":{"nodeType":"YulBlock","src":"14452:248:14","statements":[{"nodeType":"YulAssignment","src":"14462:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14474:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14485:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14470:3:14"},"nodeType":"YulFunctionCall","src":"14470:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14462:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14509:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14520:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14505:3:14"},"nodeType":"YulFunctionCall","src":"14505:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14528:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14534:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14524:3:14"},"nodeType":"YulFunctionCall","src":"14524:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14498:6:14"},"nodeType":"YulFunctionCall","src":"14498:47:14"},"nodeType":"YulExpressionStatement","src":"14498:47:14"},{"nodeType":"YulAssignment","src":"14554:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14688:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14562:124:14"},"nodeType":"YulFunctionCall","src":"14562:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14554:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14432:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14447:4:14","type":""}],"src":"14281:419:14"},{"body":{"nodeType":"YulBlock","src":"14750:61:14","statements":[{"nodeType":"YulAssignment","src":"14760:45:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14775:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"14782:22:14","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14771:3:14"},"nodeType":"YulFunctionCall","src":"14771:34:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14760:7:14"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14732:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14742:7:14","type":""}],"src":"14706:105:14"},{"body":{"nodeType":"YulBlock","src":"14859:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"14915:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14924:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14927:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14917:6:14"},"nodeType":"YulFunctionCall","src":"14917:12:14"},"nodeType":"YulExpressionStatement","src":"14917:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14882:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14906:5:14"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14889:16:14"},"nodeType":"YulFunctionCall","src":"14889:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14879:2:14"},"nodeType":"YulFunctionCall","src":"14879:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14872:6:14"},"nodeType":"YulFunctionCall","src":"14872:42:14"},"nodeType":"YulIf","src":"14869:62:14"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14852:5:14","type":""}],"src":"14817:120:14"},{"body":{"nodeType":"YulBlock","src":"15005:79:14","statements":[{"nodeType":"YulAssignment","src":"15015:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15030:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15024:5:14"},"nodeType":"YulFunctionCall","src":"15024:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15015:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15072:5:14"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"15046:25:14"},"nodeType":"YulFunctionCall","src":"15046:32:14"},"nodeType":"YulExpressionStatement","src":"15046:32:14"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14983:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"14991:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14999:5:14","type":""}],"src":"14943:141:14"},{"body":{"nodeType":"YulBlock","src":"15153:80:14","statements":[{"nodeType":"YulAssignment","src":"15163:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15178:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15172:5:14"},"nodeType":"YulFunctionCall","src":"15172:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15163:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15221:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15194:26:14"},"nodeType":"YulFunctionCall","src":"15194:33:14"},"nodeType":"YulExpressionStatement","src":"15194:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15131:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"15139:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15147:5:14","type":""}],"src":"15090:143:14"},{"body":{"nodeType":"YulBlock","src":"15382:830:14","statements":[{"body":{"nodeType":"YulBlock","src":"15429:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15431:77:14"},"nodeType":"YulFunctionCall","src":"15431:79:14"},"nodeType":"YulExpressionStatement","src":"15431:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15403:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15412:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15399:3:14"},"nodeType":"YulFunctionCall","src":"15399:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"15424:3:14","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15395:3:14"},"nodeType":"YulFunctionCall","src":"15395:33:14"},"nodeType":"YulIf","src":"15392:120:14"},{"nodeType":"YulBlock","src":"15522:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15537:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15551:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15541:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15566:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15611:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15622:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15607:3:14"},"nodeType":"YulFunctionCall","src":"15607:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15631:7:14"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"15576:30:14"},"nodeType":"YulFunctionCall","src":"15576:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15566:6:14"}]}]},{"nodeType":"YulBlock","src":"15659:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15674:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15688:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15678:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15704:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15750:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15761:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15746:3:14"},"nodeType":"YulFunctionCall","src":"15746:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15770:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15714:31:14"},"nodeType":"YulFunctionCall","src":"15714:64:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15704:6:14"}]}]},{"nodeType":"YulBlock","src":"15798:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15813:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15827:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15817:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15843:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15889:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15900:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15885:3:14"},"nodeType":"YulFunctionCall","src":"15885:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15909:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15853:31:14"},"nodeType":"YulFunctionCall","src":"15853:64:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15843:6:14"}]}]},{"nodeType":"YulBlock","src":"15937:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15952:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15966:2:14","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15956:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15982:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16028:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"16039:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16024:3:14"},"nodeType":"YulFunctionCall","src":"16024:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16048:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15992:31:14"},"nodeType":"YulFunctionCall","src":"15992:64:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15982:6:14"}]}]},{"nodeType":"YulBlock","src":"16076:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"16091:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"16105:3:14","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16095:6:14","type":""}]},{"nodeType":"YulAssignment","src":"16122:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16167:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"16178:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16163:3:14"},"nodeType":"YulFunctionCall","src":"16163:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16187:7:14"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"16132:30:14"},"nodeType":"YulFunctionCall","src":"16132:63:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16122:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15320:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15331:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15343:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15351:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15359:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15367:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15375:6:14","type":""}],"src":"15239:973:14"},{"body":{"nodeType":"YulBlock","src":"16246:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16263:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16266:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16256:6:14"},"nodeType":"YulFunctionCall","src":"16256:88:14"},"nodeType":"YulExpressionStatement","src":"16256:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16360:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16363:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16353:6:14"},"nodeType":"YulFunctionCall","src":"16353:15:14"},"nodeType":"YulExpressionStatement","src":"16353:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16384:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16387:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16377:6:14"},"nodeType":"YulFunctionCall","src":"16377:15:14"},"nodeType":"YulExpressionStatement","src":"16377:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16218:180:14"},{"body":{"nodeType":"YulBlock","src":"16432:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16449:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16452:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16442:6:14"},"nodeType":"YulFunctionCall","src":"16442:88:14"},"nodeType":"YulExpressionStatement","src":"16442:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16546:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16549:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16539:6:14"},"nodeType":"YulFunctionCall","src":"16539:15:14"},"nodeType":"YulExpressionStatement","src":"16539:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16570:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16573:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16563:6:14"},"nodeType":"YulFunctionCall","src":"16563:15:14"},"nodeType":"YulExpressionStatement","src":"16563:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16404:180:14"},{"body":{"nodeType":"YulBlock","src":"16641:269:14","statements":[{"nodeType":"YulAssignment","src":"16651:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16665:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"16671:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16661:3:14"},"nodeType":"YulFunctionCall","src":"16661:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16651:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"16682:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16712:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"16718:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16708:3:14"},"nodeType":"YulFunctionCall","src":"16708:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16686:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"16759:51:14","statements":[{"nodeType":"YulAssignment","src":"16773:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16787:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16795:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16783:3:14"},"nodeType":"YulFunctionCall","src":"16783:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16773:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16739:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16732:6:14"},"nodeType":"YulFunctionCall","src":"16732:26:14"},"nodeType":"YulIf","src":"16729:81:14"},{"body":{"nodeType":"YulBlock","src":"16862:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16876:16:14"},"nodeType":"YulFunctionCall","src":"16876:18:14"},"nodeType":"YulExpressionStatement","src":"16876:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16826:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16849:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16857:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16846:2:14"},"nodeType":"YulFunctionCall","src":"16846:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16823:2:14"},"nodeType":"YulFunctionCall","src":"16823:38:14"},"nodeType":"YulIf","src":"16820:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16625:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16634:6:14","type":""}],"src":"16590:320:14"},{"body":{"nodeType":"YulBlock","src":"16970:87:14","statements":[{"nodeType":"YulAssignment","src":"16980:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16988:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16980:4:14"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17008:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17011:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17001:6:14"},"nodeType":"YulFunctionCall","src":"17001:14:14"},"nodeType":"YulExpressionStatement","src":"17001:14:14"},{"nodeType":"YulAssignment","src":"17024:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17042:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17045:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17032:9:14"},"nodeType":"YulFunctionCall","src":"17032:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17024:4:14"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16957:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16965:4:14","type":""}],"src":"16916:141:14"},{"body":{"nodeType":"YulBlock","src":"17107:49:14","statements":[{"nodeType":"YulAssignment","src":"17117:33:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17135:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"17142:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17131:3:14"},"nodeType":"YulFunctionCall","src":"17131:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"17147:2:14","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17127:3:14"},"nodeType":"YulFunctionCall","src":"17127:23:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17117:6:14"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17090:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17100:6:14","type":""}],"src":"17063:93:14"},{"body":{"nodeType":"YulBlock","src":"17215:54:14","statements":[{"nodeType":"YulAssignment","src":"17225:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"17250:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"17256:5:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17246:3:14"},"nodeType":"YulFunctionCall","src":"17246:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"17225:8:14"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"17190:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"17196:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"17206:8:14","type":""}],"src":"17162:107:14"},{"body":{"nodeType":"YulBlock","src":"17351:317:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17361:35:14","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"17382:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"17394:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17378:3:14"},"nodeType":"YulFunctionCall","src":"17378:18:14"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"17365:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17405:109:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"17436:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17447:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17417:18:14"},"nodeType":"YulFunctionCall","src":"17417:97:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"17409:4:14","type":""}]},{"nodeType":"YulAssignment","src":"17523:51:14","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"17554:9:14"},{"name":"toInsert","nodeType":"YulIdentifier","src":"17565:8:14"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"17535:18:14"},"nodeType":"YulFunctionCall","src":"17535:39:14"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17523:8:14"}]},{"nodeType":"YulAssignment","src":"17583:30:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17596:5:14"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"17607:4:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17603:3:14"},"nodeType":"YulFunctionCall","src":"17603:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17592:3:14"},"nodeType":"YulFunctionCall","src":"17592:21:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17583:5:14"}]},{"nodeType":"YulAssignment","src":"17622:40:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17635:5:14"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"17646:8:14"},{"name":"mask","nodeType":"YulIdentifier","src":"17656:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17642:3:14"},"nodeType":"YulFunctionCall","src":"17642:19:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17632:2:14"},"nodeType":"YulFunctionCall","src":"17632:30:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17622:6:14"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17312:5:14","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"17319:10:14","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"17331:8:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17344:6:14","type":""}],"src":"17275:393:14"},{"body":{"nodeType":"YulBlock","src":"17734:82:14","statements":[{"nodeType":"YulAssignment","src":"17744:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17802:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17784:17:14"},"nodeType":"YulFunctionCall","src":"17784:24:14"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"17775:8:14"},"nodeType":"YulFunctionCall","src":"17775:34:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17757:17:14"},"nodeType":"YulFunctionCall","src":"17757:53:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17744:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17714:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17724:9:14","type":""}],"src":"17674:142:14"},{"body":{"nodeType":"YulBlock","src":"17869:28:14","statements":[{"nodeType":"YulAssignment","src":"17879:12:14","value":{"name":"value","nodeType":"YulIdentifier","src":"17886:5:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17879:3:14"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17855:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17865:3:14","type":""}],"src":"17822:75:14"},{"body":{"nodeType":"YulBlock","src":"17979:193:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17989:63:14","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"18044:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18013:30:14"},"nodeType":"YulFunctionCall","src":"18013:39:14"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"17993:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18068:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18108:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18102:5:14"},"nodeType":"YulFunctionCall","src":"18102:11:14"},{"name":"offset","nodeType":"YulIdentifier","src":"18115:6:14"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"18147:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"18123:23:14"},"nodeType":"YulFunctionCall","src":"18123:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"18074:27:14"},"nodeType":"YulFunctionCall","src":"18074:91:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18061:6:14"},"nodeType":"YulFunctionCall","src":"18061:105:14"},"nodeType":"YulExpressionStatement","src":"18061:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17956:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"17962:6:14","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"17970:7:14","type":""}],"src":"17903:269:14"},{"body":{"nodeType":"YulBlock","src":"18227:24:14","statements":[{"nodeType":"YulAssignment","src":"18237:8:14","value":{"kind":"number","nodeType":"YulLiteral","src":"18244:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18237:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18223:3:14","type":""}],"src":"18178:73:14"},{"body":{"nodeType":"YulBlock","src":"18310:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18320:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"18334:30:14"},"nodeType":"YulFunctionCall","src":"18334:32:14"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"18324:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18419:4:14"},{"name":"offset","nodeType":"YulIdentifier","src":"18425:6:14"},{"name":"zero_0","nodeType":"YulIdentifier","src":"18433:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18375:43:14"},"nodeType":"YulFunctionCall","src":"18375:65:14"},"nodeType":"YulExpressionStatement","src":"18375:65:14"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18296:4:14","type":""},{"name":"offset","nodeType":"YulTypedName","src":"18302:6:14","type":""}],"src":"18257:189:14"},{"body":{"nodeType":"YulBlock","src":"18502:136:14","statements":[{"body":{"nodeType":"YulBlock","src":"18569:63:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18613:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18620:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"18583:29:14"},"nodeType":"YulFunctionCall","src":"18583:39:14"},"nodeType":"YulExpressionStatement","src":"18583:39:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18522:5:14"},{"name":"end","nodeType":"YulIdentifier","src":"18529:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18519:2:14"},"nodeType":"YulFunctionCall","src":"18519:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18534:26:14","statements":[{"nodeType":"YulAssignment","src":"18536:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18549:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18556:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18545:3:14"},"nodeType":"YulFunctionCall","src":"18545:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"18536:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"18516:2:14","statements":[]},"src":"18512:120:14"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"18490:5:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"18497:3:14","type":""}],"src":"18452:186:14"},{"body":{"nodeType":"YulBlock","src":"18723:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"18749:431:14","statements":[{"nodeType":"YulVariableDeclaration","src":"18763:54:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18811:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18779:31:14"},"nodeType":"YulFunctionCall","src":"18779:38:14"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"18767:8:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18830:63:14","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18853:8:14"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18881:10:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18863:17:14"},"nodeType":"YulFunctionCall","src":"18863:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18849:3:14"},"nodeType":"YulFunctionCall","src":"18849:44:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18834:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"19050:27:14","statements":[{"nodeType":"YulAssignment","src":"19052:23:14","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"19067:8:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19052:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19034:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"19046:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19031:2:14"},"nodeType":"YulFunctionCall","src":"19031:18:14"},"nodeType":"YulIf","src":"19028:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19119:11:14"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19136:8:14"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19164:3:14"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19146:17:14"},"nodeType":"YulFunctionCall","src":"19146:22:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19132:3:14"},"nodeType":"YulFunctionCall","src":"19132:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"19090:28:14"},"nodeType":"YulFunctionCall","src":"19090:80:14"},"nodeType":"YulExpressionStatement","src":"19090:80:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18740:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18745:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18737:2:14"},"nodeType":"YulFunctionCall","src":"18737:11:14"},"nodeType":"YulIf","src":"18734:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18699:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"18706:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18711:10:14","type":""}],"src":"18644:543:14"},{"body":{"nodeType":"YulBlock","src":"19256:54:14","statements":[{"nodeType":"YulAssignment","src":"19266:37:14","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"19291:4:14"},{"name":"value","nodeType":"YulIdentifier","src":"19297:5:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19287:3:14"},"nodeType":"YulFunctionCall","src":"19287:16:14"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"19266:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"19231:4:14","type":""},{"name":"value","nodeType":"YulTypedName","src":"19237:5:14","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"19247:8:14","type":""}],"src":"19193:117:14"},{"body":{"nodeType":"YulBlock","src":"19367:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19377:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19426:1:14","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"19429:5:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19422:3:14"},"nodeType":"YulFunctionCall","src":"19422:13:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19441:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19437:3:14"},"nodeType":"YulFunctionCall","src":"19437:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"19393:28:14"},"nodeType":"YulFunctionCall","src":"19393:51:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19389:3:14"},"nodeType":"YulFunctionCall","src":"19389:56:14"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"19381:4:14","type":""}]},{"nodeType":"YulAssignment","src":"19454:25:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19468:4:14"},{"name":"mask","nodeType":"YulIdentifier","src":"19474:4:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19464:3:14"},"nodeType":"YulFunctionCall","src":"19464:15:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19454:6:14"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19344:4:14","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"19350:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19360:6:14","type":""}],"src":"19316:169:14"},{"body":{"nodeType":"YulBlock","src":"19571:214:14","statements":[{"nodeType":"YulAssignment","src":"19704:37:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19731:4:14"},{"name":"len","nodeType":"YulIdentifier","src":"19737:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"19712:18:14"},"nodeType":"YulFunctionCall","src":"19712:29:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19704:4:14"}]},{"nodeType":"YulAssignment","src":"19750:29:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19761:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19771:1:14","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"19774:3:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19767:3:14"},"nodeType":"YulFunctionCall","src":"19767:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19758:2:14"},"nodeType":"YulFunctionCall","src":"19758:21:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19750:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19552:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"19558:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19566:4:14","type":""}],"src":"19490:295:14"},{"body":{"nodeType":"YulBlock","src":"19882:1303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19893:51:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19940:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19907:32:14"},"nodeType":"YulFunctionCall","src":"19907:37:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19897:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"20029:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20031:16:14"},"nodeType":"YulFunctionCall","src":"20031:18:14"},"nodeType":"YulExpressionStatement","src":"20031:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20001:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20009:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19998:2:14"},"nodeType":"YulFunctionCall","src":"19998:30:14"},"nodeType":"YulIf","src":"19995:56:14"},{"nodeType":"YulVariableDeclaration","src":"20061:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20107:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20101:5:14"},"nodeType":"YulFunctionCall","src":"20101:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20075:25:14"},"nodeType":"YulFunctionCall","src":"20075:38:14"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"20065:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20206:4:14"},{"name":"oldLen","nodeType":"YulIdentifier","src":"20212:6:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"20220:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"20160:45:14"},"nodeType":"YulFunctionCall","src":"20160:67:14"},"nodeType":"YulExpressionStatement","src":"20160:67:14"},{"nodeType":"YulVariableDeclaration","src":"20237:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20254:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"20241:9:14","type":""}]},{"nodeType":"YulAssignment","src":"20265:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20278:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20265:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20329:611:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20343:37:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20362:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20374:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20370:3:14"},"nodeType":"YulFunctionCall","src":"20370:9:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20358:3:14"},"nodeType":"YulFunctionCall","src":"20358:22:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"20347:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20394:51:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20440:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20408:31:14"},"nodeType":"YulFunctionCall","src":"20408:37:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"20398:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20458:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20467:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20462:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"20526:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20551:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20569:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20574:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20565:3:14"},"nodeType":"YulFunctionCall","src":"20565:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20559:5:14"},"nodeType":"YulFunctionCall","src":"20559:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20544:6:14"},"nodeType":"YulFunctionCall","src":"20544:42:14"},"nodeType":"YulExpressionStatement","src":"20544:42:14"},{"nodeType":"YulAssignment","src":"20603:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20617:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20625:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20613:3:14"},"nodeType":"YulFunctionCall","src":"20613:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20603:6:14"}]},{"nodeType":"YulAssignment","src":"20644:31:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20661:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20672:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20657:3:14"},"nodeType":"YulFunctionCall","src":"20657:18:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20644:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20492:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20495:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20489:2:14"},"nodeType":"YulFunctionCall","src":"20489:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20504:21:14","statements":[{"nodeType":"YulAssignment","src":"20506:17:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20515:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"20518:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20511:3:14"},"nodeType":"YulFunctionCall","src":"20511:12:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20506:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"20485:3:14","statements":[]},"src":"20481:208:14"},{"body":{"nodeType":"YulBlock","src":"20725:156:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20743:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20770:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20775:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20766:3:14"},"nodeType":"YulFunctionCall","src":"20766:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20760:5:14"},"nodeType":"YulFunctionCall","src":"20760:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20747:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20810:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20837:9:14"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20852:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20860:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20848:3:14"},"nodeType":"YulFunctionCall","src":"20848:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20818:18:14"},"nodeType":"YulFunctionCall","src":"20818:48:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20803:6:14"},"nodeType":"YulFunctionCall","src":"20803:64:14"},"nodeType":"YulExpressionStatement","src":"20803:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20708:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"20717:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20705:2:14"},"nodeType":"YulFunctionCall","src":"20705:19:14"},"nodeType":"YulIf","src":"20702:179:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20901:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20915:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20923:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20911:3:14"},"nodeType":"YulFunctionCall","src":"20911:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"20927:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20907:3:14"},"nodeType":"YulFunctionCall","src":"20907:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20894:6:14"},"nodeType":"YulFunctionCall","src":"20894:36:14"},"nodeType":"YulExpressionStatement","src":"20894:36:14"}]},"nodeType":"YulCase","src":"20322:618:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20327:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20957:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"20971:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"20984:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20975:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"21008:67:14","statements":[{"nodeType":"YulAssignment","src":"21026:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21045:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21050:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21041:3:14"},"nodeType":"YulFunctionCall","src":"21041:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21035:5:14"},"nodeType":"YulFunctionCall","src":"21035:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21026:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"21001:6:14"},"nodeType":"YulIf","src":"20998:77:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21095:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21154:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"21161:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"21101:52:14"},"nodeType":"YulFunctionCall","src":"21101:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21088:6:14"},"nodeType":"YulFunctionCall","src":"21088:81:14"},"nodeType":"YulExpressionStatement","src":"21088:81:14"}]},"nodeType":"YulCase","src":"20949:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20302:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20310:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20299:2:14"},"nodeType":"YulFunctionCall","src":"20299:14:14"},"nodeType":"YulSwitch","src":"20292:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19871:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"19877:3:14","type":""}],"src":"19790:1395:14"},{"body":{"nodeType":"YulBlock","src":"21219:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21236:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21239:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21229:6:14"},"nodeType":"YulFunctionCall","src":"21229:88:14"},"nodeType":"YulExpressionStatement","src":"21229:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21333:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21336:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21326:6:14"},"nodeType":"YulFunctionCall","src":"21326:15:14"},"nodeType":"YulExpressionStatement","src":"21326:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21357:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21360:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21350:6:14"},"nodeType":"YulFunctionCall","src":"21350:15:14"},"nodeType":"YulExpressionStatement","src":"21350:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21191:180:14"},{"body":{"nodeType":"YulBlock","src":"21420:190:14","statements":[{"nodeType":"YulAssignment","src":"21430:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21457:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21439:17:14"},"nodeType":"YulFunctionCall","src":"21439:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21430:5:14"}]},{"body":{"nodeType":"YulBlock","src":"21553:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21555:16:14"},"nodeType":"YulFunctionCall","src":"21555:18:14"},"nodeType":"YulExpressionStatement","src":"21555:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21478:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"21485:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21475:2:14"},"nodeType":"YulFunctionCall","src":"21475:77:14"},"nodeType":"YulIf","src":"21472:103:14"},{"nodeType":"YulAssignment","src":"21584:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21595:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"21602:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21591:3:14"},"nodeType":"YulFunctionCall","src":"21591:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21584:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21406:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21416:3:14","type":""}],"src":"21377:233:14"},{"body":{"nodeType":"YulBlock","src":"21722:129:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21744:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21752:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21740:3:14"},"nodeType":"YulFunctionCall","src":"21740:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e","kind":"string","nodeType":"YulLiteral","src":"21756:34:14","type":"","value":"AccessControl: sender must be an"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21733:6:14"},"nodeType":"YulFunctionCall","src":"21733:58:14"},"nodeType":"YulExpressionStatement","src":"21733:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21812:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21820:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21808:3:14"},"nodeType":"YulFunctionCall","src":"21808:15:14"},{"hexValue":"2061646d696e20746f207265766f6b65","kind":"string","nodeType":"YulLiteral","src":"21825:18:14","type":"","value":" admin to revoke"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21801:6:14"},"nodeType":"YulFunctionCall","src":"21801:43:14"},"nodeType":"YulExpressionStatement","src":"21801:43:14"}]},"name":"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21714:6:14","type":""}],"src":"21616:235:14"},{"body":{"nodeType":"YulBlock","src":"22003:220:14","statements":[{"nodeType":"YulAssignment","src":"22013:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22079:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22084:2:14","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22020:58:14"},"nodeType":"YulFunctionCall","src":"22020:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22013:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22185:3:14"}],"functionName":{"name":"store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3","nodeType":"YulIdentifier","src":"22096:88:14"},"nodeType":"YulFunctionCall","src":"22096:93:14"},"nodeType":"YulExpressionStatement","src":"22096:93:14"},{"nodeType":"YulAssignment","src":"22198:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22209:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22214:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22205:3:14"},"nodeType":"YulFunctionCall","src":"22205:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22198:3:14"}]}]},"name":"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21991:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21999:3:14","type":""}],"src":"21857:366:14"},{"body":{"nodeType":"YulBlock","src":"22400:248:14","statements":[{"nodeType":"YulAssignment","src":"22410:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22422:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22433:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22418:3:14"},"nodeType":"YulFunctionCall","src":"22418:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22410:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22457:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22468:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22453:3:14"},"nodeType":"YulFunctionCall","src":"22453:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22476:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"22482:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22472:3:14"},"nodeType":"YulFunctionCall","src":"22472:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22446:6:14"},"nodeType":"YulFunctionCall","src":"22446:47:14"},"nodeType":"YulExpressionStatement","src":"22446:47:14"},{"nodeType":"YulAssignment","src":"22502:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22636:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22510:124:14"},"nodeType":"YulFunctionCall","src":"22510:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22502:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22380:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22395:4:14","type":""}],"src":"22229:419:14"},{"body":{"nodeType":"YulBlock","src":"22760:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22782:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22790:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22778:3:14"},"nodeType":"YulFunctionCall","src":"22778:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"22794:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22771:6:14"},"nodeType":"YulFunctionCall","src":"22771:58:14"},"nodeType":"YulExpressionStatement","src":"22771:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22850:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"22858:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22846:3:14"},"nodeType":"YulFunctionCall","src":"22846:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"22863:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22839:6:14"},"nodeType":"YulFunctionCall","src":"22839:33:14"},"nodeType":"YulExpressionStatement","src":"22839:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22752:6:14","type":""}],"src":"22654:225:14"},{"body":{"nodeType":"YulBlock","src":"23031:220:14","statements":[{"nodeType":"YulAssignment","src":"23041:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23107:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23112:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23048:58:14"},"nodeType":"YulFunctionCall","src":"23048:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23041:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23213:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"23124:88:14"},"nodeType":"YulFunctionCall","src":"23124:93:14"},"nodeType":"YulExpressionStatement","src":"23124:93:14"},{"nodeType":"YulAssignment","src":"23226:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23237:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23242:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23233:3:14"},"nodeType":"YulFunctionCall","src":"23233:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23226:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23019:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23027:3:14","type":""}],"src":"22885:366:14"},{"body":{"nodeType":"YulBlock","src":"23428:248:14","statements":[{"nodeType":"YulAssignment","src":"23438:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23450:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23461:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23446:3:14"},"nodeType":"YulFunctionCall","src":"23446:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23438:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23485:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23496:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23481:3:14"},"nodeType":"YulFunctionCall","src":"23481:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23504:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"23510:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23500:3:14"},"nodeType":"YulFunctionCall","src":"23500:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23474:6:14"},"nodeType":"YulFunctionCall","src":"23474:47:14"},"nodeType":"YulExpressionStatement","src":"23474:47:14"},{"nodeType":"YulAssignment","src":"23530:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23664:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23538:124:14"},"nodeType":"YulFunctionCall","src":"23538:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23530:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23408:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23423:4:14","type":""}],"src":"23257:419:14"},{"body":{"nodeType":"YulBlock","src":"23730:362:14","statements":[{"nodeType":"YulAssignment","src":"23740:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23763:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23745:17:14"},"nodeType":"YulFunctionCall","src":"23745:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23740:1:14"}]},{"nodeType":"YulAssignment","src":"23774:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23797:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23779:17:14"},"nodeType":"YulFunctionCall","src":"23779:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23774:1:14"}]},{"nodeType":"YulVariableDeclaration","src":"23808:28:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23831:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"23834:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23827:3:14"},"nodeType":"YulFunctionCall","src":"23827:9:14"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"23812:11:14","type":""}]},{"nodeType":"YulAssignment","src":"23845:41:14","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"23874:11:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23856:17:14"},"nodeType":"YulFunctionCall","src":"23856:30:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23845:7:14"}]},{"body":{"nodeType":"YulBlock","src":"24063:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24065:16:14"},"nodeType":"YulFunctionCall","src":"24065:18:14"},"nodeType":"YulExpressionStatement","src":"24065:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23996:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23989:6:14"},"nodeType":"YulFunctionCall","src":"23989:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24019:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"24026:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"24035:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24022:3:14"},"nodeType":"YulFunctionCall","src":"24022:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24016:2:14"},"nodeType":"YulFunctionCall","src":"24016:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23969:2:14"},"nodeType":"YulFunctionCall","src":"23969:83:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23949:6:14"},"nodeType":"YulFunctionCall","src":"23949:113:14"},"nodeType":"YulIf","src":"23946:139:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23713:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23716:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23722:7:14","type":""}],"src":"23682:410:14"},{"body":{"nodeType":"YulBlock","src":"24126:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24143:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24146:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24136:6:14"},"nodeType":"YulFunctionCall","src":"24136:88:14"},"nodeType":"YulExpressionStatement","src":"24136:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24240:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24243:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24233:6:14"},"nodeType":"YulFunctionCall","src":"24233:15:14"},"nodeType":"YulExpressionStatement","src":"24233:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24264:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24267:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24257:6:14"},"nodeType":"YulFunctionCall","src":"24257:15:14"},"nodeType":"YulExpressionStatement","src":"24257:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"24098:180:14"},{"body":{"nodeType":"YulBlock","src":"24326:143:14","statements":[{"nodeType":"YulAssignment","src":"24336:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24359:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24341:17:14"},"nodeType":"YulFunctionCall","src":"24341:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24336:1:14"}]},{"nodeType":"YulAssignment","src":"24370:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24393:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24375:17:14"},"nodeType":"YulFunctionCall","src":"24375:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24370:1:14"}]},{"body":{"nodeType":"YulBlock","src":"24417:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24419:16:14"},"nodeType":"YulFunctionCall","src":"24419:18:14"},"nodeType":"YulExpressionStatement","src":"24419:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24414:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24407:6:14"},"nodeType":"YulFunctionCall","src":"24407:9:14"},"nodeType":"YulIf","src":"24404:35:14"},{"nodeType":"YulAssignment","src":"24449:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24458:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24461:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24454:3:14"},"nodeType":"YulFunctionCall","src":"24454:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24449:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24315:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"24318:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24324:1:14","type":""}],"src":"24284:185:14"},{"body":{"nodeType":"YulBlock","src":"24581:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24603:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"24611:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24599:3:14"},"nodeType":"YulFunctionCall","src":"24599:14:14"},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f","kind":"string","nodeType":"YulLiteral","src":"24615:34:14","type":"","value":"SafeMath: multiplication overflo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24592:6:14"},"nodeType":"YulFunctionCall","src":"24592:58:14"},"nodeType":"YulExpressionStatement","src":"24592:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24671:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"24679:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24667:3:14"},"nodeType":"YulFunctionCall","src":"24667:15:14"},{"hexValue":"77","kind":"string","nodeType":"YulLiteral","src":"24684:3:14","type":"","value":"w"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24660:6:14"},"nodeType":"YulFunctionCall","src":"24660:28:14"},"nodeType":"YulExpressionStatement","src":"24660:28:14"}]},"name":"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24573:6:14","type":""}],"src":"24475:220:14"},{"body":{"nodeType":"YulBlock","src":"24847:220:14","statements":[{"nodeType":"YulAssignment","src":"24857:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24923:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24928:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24864:58:14"},"nodeType":"YulFunctionCall","src":"24864:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24857:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25029:3:14"}],"functionName":{"name":"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","nodeType":"YulIdentifier","src":"24940:88:14"},"nodeType":"YulFunctionCall","src":"24940:93:14"},"nodeType":"YulExpressionStatement","src":"24940:93:14"},{"nodeType":"YulAssignment","src":"25042:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25053:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"25058:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25049:3:14"},"nodeType":"YulFunctionCall","src":"25049:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25042:3:14"}]}]},"name":"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24835:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24843:3:14","type":""}],"src":"24701:366:14"},{"body":{"nodeType":"YulBlock","src":"25244:248:14","statements":[{"nodeType":"YulAssignment","src":"25254:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25266:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25277:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25262:3:14"},"nodeType":"YulFunctionCall","src":"25262:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25254:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25301:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25312:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25297:3:14"},"nodeType":"YulFunctionCall","src":"25297:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25320:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"25326:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25316:3:14"},"nodeType":"YulFunctionCall","src":"25316:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25290:6:14"},"nodeType":"YulFunctionCall","src":"25290:47:14"},"nodeType":"YulExpressionStatement","src":"25290:47:14"},{"nodeType":"YulAssignment","src":"25346:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25480:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25354:124:14"},"nodeType":"YulFunctionCall","src":"25354:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25346:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25224:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25239:4:14","type":""}],"src":"25073:419:14"},{"body":{"nodeType":"YulBlock","src":"25575:274:14","statements":[{"body":{"nodeType":"YulBlock","src":"25621:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25623:77:14"},"nodeType":"YulFunctionCall","src":"25623:79:14"},"nodeType":"YulExpressionStatement","src":"25623:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25596:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"25605:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25592:3:14"},"nodeType":"YulFunctionCall","src":"25592:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"25617:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25588:3:14"},"nodeType":"YulFunctionCall","src":"25588:32:14"},"nodeType":"YulIf","src":"25585:119:14"},{"nodeType":"YulBlock","src":"25714:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"25729:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"25743:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25733:6:14","type":""}]},{"nodeType":"YulAssignment","src":"25758:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25804:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"25815:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25800:3:14"},"nodeType":"YulFunctionCall","src":"25800:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25824:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25768:31:14"},"nodeType":"YulFunctionCall","src":"25768:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25758:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25545:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25556:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25568:6:14","type":""}],"src":"25498:351:14"},{"body":{"nodeType":"YulBlock","src":"25899:147:14","statements":[{"nodeType":"YulAssignment","src":"25909:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25932:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25914:17:14"},"nodeType":"YulFunctionCall","src":"25914:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25909:1:14"}]},{"nodeType":"YulAssignment","src":"25943:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25966:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25948:17:14"},"nodeType":"YulFunctionCall","src":"25948:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25943:1:14"}]},{"nodeType":"YulAssignment","src":"25977:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25988:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"25991:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25984:3:14"},"nodeType":"YulFunctionCall","src":"25984:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"25977:3:14"}]},{"body":{"nodeType":"YulBlock","src":"26017:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26019:16:14"},"nodeType":"YulFunctionCall","src":"26019:18:14"},"nodeType":"YulExpressionStatement","src":"26019:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26009:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"26012:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26006:2:14"},"nodeType":"YulFunctionCall","src":"26006:10:14"},"nodeType":"YulIf","src":"26003:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25886:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"25889:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"25895:3:14","type":""}],"src":"25855:191:14"},{"body":{"nodeType":"YulBlock","src":"26158:71:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26180:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26188:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26176:3:14"},"nodeType":"YulFunctionCall","src":"26176:14:14"},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"26192:29:14","type":"","value":"SafeMath: addition overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26169:6:14"},"nodeType":"YulFunctionCall","src":"26169:53:14"},"nodeType":"YulExpressionStatement","src":"26169:53:14"}]},"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26150:6:14","type":""}],"src":"26052:177:14"},{"body":{"nodeType":"YulBlock","src":"26381:220:14","statements":[{"nodeType":"YulAssignment","src":"26391:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26457:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"26462:2:14","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26398:58:14"},"nodeType":"YulFunctionCall","src":"26398:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26391:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26563:3:14"}],"functionName":{"name":"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","nodeType":"YulIdentifier","src":"26474:88:14"},"nodeType":"YulFunctionCall","src":"26474:93:14"},"nodeType":"YulExpressionStatement","src":"26474:93:14"},{"nodeType":"YulAssignment","src":"26576:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26587:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"26592:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26583:3:14"},"nodeType":"YulFunctionCall","src":"26583:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26576:3:14"}]}]},"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26369:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26377:3:14","type":""}],"src":"26235:366:14"},{"body":{"nodeType":"YulBlock","src":"26778:248:14","statements":[{"nodeType":"YulAssignment","src":"26788:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26800:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26811:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26796:3:14"},"nodeType":"YulFunctionCall","src":"26796:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26788:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26835:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26846:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26831:3:14"},"nodeType":"YulFunctionCall","src":"26831:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26854:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"26860:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26850:3:14"},"nodeType":"YulFunctionCall","src":"26850:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26824:6:14"},"nodeType":"YulFunctionCall","src":"26824:47:14"},"nodeType":"YulExpressionStatement","src":"26824:47:14"},{"nodeType":"YulAssignment","src":"26880:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27014:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26888:124:14"},"nodeType":"YulFunctionCall","src":"26888:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26880:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26758:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26773:4:14","type":""}],"src":"26607:419:14"},{"body":{"nodeType":"YulBlock","src":"27138:70:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27160:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"27168:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27156:3:14"},"nodeType":"YulFunctionCall","src":"27156:14:14"},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","kind":"string","nodeType":"YulLiteral","src":"27172:28:14","type":"","value":"SafeMath: division by zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27149:6:14"},"nodeType":"YulFunctionCall","src":"27149:52:14"},"nodeType":"YulExpressionStatement","src":"27149:52:14"}]},"name":"store_literal_in_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27130:6:14","type":""}],"src":"27032:176:14"},{"body":{"nodeType":"YulBlock","src":"27360:220:14","statements":[{"nodeType":"YulAssignment","src":"27370:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27436:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"27441:2:14","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27377:58:14"},"nodeType":"YulFunctionCall","src":"27377:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27370:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27542:3:14"}],"functionName":{"name":"store_literal_in_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","nodeType":"YulIdentifier","src":"27453:88:14"},"nodeType":"YulFunctionCall","src":"27453:93:14"},"nodeType":"YulExpressionStatement","src":"27453:93:14"},{"nodeType":"YulAssignment","src":"27555:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27566:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"27571:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27562:3:14"},"nodeType":"YulFunctionCall","src":"27562:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27555:3:14"}]}]},"name":"abi_encode_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27348:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27356:3:14","type":""}],"src":"27214:366:14"},{"body":{"nodeType":"YulBlock","src":"27757:248:14","statements":[{"nodeType":"YulAssignment","src":"27767:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27779:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27790:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27775:3:14"},"nodeType":"YulFunctionCall","src":"27775:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27767:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27814:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27825:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27810:3:14"},"nodeType":"YulFunctionCall","src":"27810:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27833:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"27839:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27829:3:14"},"nodeType":"YulFunctionCall","src":"27829:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27803:6:14"},"nodeType":"YulFunctionCall","src":"27803:47:14"},"nodeType":"YulExpressionStatement","src":"27803:47:14"},{"nodeType":"YulAssignment","src":"27859:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27993:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27867:124:14"},"nodeType":"YulFunctionCall","src":"27867:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27859:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27737:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27752:4:14","type":""}],"src":"27586:419:14"},{"body":{"nodeType":"YulBlock","src":"28117:74:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28139:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28147:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28135:3:14"},"nodeType":"YulFunctionCall","src":"28135:14:14"},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"28151:32:14","type":"","value":"SafeMath: subtraction overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28128:6:14"},"nodeType":"YulFunctionCall","src":"28128:56:14"},"nodeType":"YulExpressionStatement","src":"28128:56:14"}]},"name":"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28109:6:14","type":""}],"src":"28011:180:14"},{"body":{"nodeType":"YulBlock","src":"28343:220:14","statements":[{"nodeType":"YulAssignment","src":"28353:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28419:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28424:2:14","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28360:58:14"},"nodeType":"YulFunctionCall","src":"28360:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28353:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28525:3:14"}],"functionName":{"name":"store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","nodeType":"YulIdentifier","src":"28436:88:14"},"nodeType":"YulFunctionCall","src":"28436:93:14"},"nodeType":"YulExpressionStatement","src":"28436:93:14"},{"nodeType":"YulAssignment","src":"28538:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28549:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28554:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28545:3:14"},"nodeType":"YulFunctionCall","src":"28545:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28538:3:14"}]}]},"name":"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28331:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28339:3:14","type":""}],"src":"28197:366:14"},{"body":{"nodeType":"YulBlock","src":"28740:248:14","statements":[{"nodeType":"YulAssignment","src":"28750:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28762:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28773:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28758:3:14"},"nodeType":"YulFunctionCall","src":"28758:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28750:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28797:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28808:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28793:3:14"},"nodeType":"YulFunctionCall","src":"28793:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28816:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"28822:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28812:3:14"},"nodeType":"YulFunctionCall","src":"28812:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28786:6:14"},"nodeType":"YulFunctionCall","src":"28786:47:14"},"nodeType":"YulExpressionStatement","src":"28786:47:14"},{"nodeType":"YulAssignment","src":"28842:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28976:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28850:124:14"},"nodeType":"YulFunctionCall","src":"28850:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28842:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28720:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28735:4:14","type":""}],"src":"28569:419:14"},{"body":{"nodeType":"YulBlock","src":"29039:149:14","statements":[{"nodeType":"YulAssignment","src":"29049:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29072:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29054:17:14"},"nodeType":"YulFunctionCall","src":"29054:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29049:1:14"}]},{"nodeType":"YulAssignment","src":"29083:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29106:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29088:17:14"},"nodeType":"YulFunctionCall","src":"29088:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29083:1:14"}]},{"nodeType":"YulAssignment","src":"29117:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29129:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"29132:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29125:3:14"},"nodeType":"YulFunctionCall","src":"29125:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"29117:4:14"}]},{"body":{"nodeType":"YulBlock","src":"29159:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29161:16:14"},"nodeType":"YulFunctionCall","src":"29161:18:14"},"nodeType":"YulExpressionStatement","src":"29161:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"29150:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"29156:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29147:2:14"},"nodeType":"YulFunctionCall","src":"29147:11:14"},"nodeType":"YulIf","src":"29144:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29025:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"29028:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"29034:4:14","type":""}],"src":"28994:194:14"},{"body":{"nodeType":"YulBlock","src":"29300:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29322:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29330:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29318:3:14"},"nodeType":"YulFunctionCall","src":"29318:14:14"},{"hexValue":"456e756d657261626c655365743a20696e646578206f7574206f6620626f756e","kind":"string","nodeType":"YulLiteral","src":"29334:34:14","type":"","value":"EnumerableSet: index out of boun"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29311:6:14"},"nodeType":"YulFunctionCall","src":"29311:58:14"},"nodeType":"YulExpressionStatement","src":"29311:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29390:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29398:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29386:3:14"},"nodeType":"YulFunctionCall","src":"29386:15:14"},{"hexValue":"6473","kind":"string","nodeType":"YulLiteral","src":"29403:4:14","type":"","value":"ds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29379:6:14"},"nodeType":"YulFunctionCall","src":"29379:29:14"},"nodeType":"YulExpressionStatement","src":"29379:29:14"}]},"name":"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29292:6:14","type":""}],"src":"29194:221:14"},{"body":{"nodeType":"YulBlock","src":"29567:220:14","statements":[{"nodeType":"YulAssignment","src":"29577:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29643:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"29648:2:14","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29584:58:14"},"nodeType":"YulFunctionCall","src":"29584:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29577:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29749:3:14"}],"functionName":{"name":"store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb","nodeType":"YulIdentifier","src":"29660:88:14"},"nodeType":"YulFunctionCall","src":"29660:93:14"},"nodeType":"YulExpressionStatement","src":"29660:93:14"},{"nodeType":"YulAssignment","src":"29762:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29773:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"29778:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29769:3:14"},"nodeType":"YulFunctionCall","src":"29769:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29762:3:14"}]}]},"name":"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29555:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29563:3:14","type":""}],"src":"29421:366:14"},{"body":{"nodeType":"YulBlock","src":"29964:248:14","statements":[{"nodeType":"YulAssignment","src":"29974:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29986:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29997:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29982:3:14"},"nodeType":"YulFunctionCall","src":"29982:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29974:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30021:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30032:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30017:3:14"},"nodeType":"YulFunctionCall","src":"30017:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30040:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"30046:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30036:3:14"},"nodeType":"YulFunctionCall","src":"30036:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30010:6:14"},"nodeType":"YulFunctionCall","src":"30010:47:14"},"nodeType":"YulExpressionStatement","src":"30010:47:14"},{"nodeType":"YulAssignment","src":"30066:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30200:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30074:124:14"},"nodeType":"YulFunctionCall","src":"30074:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30066:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29944:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29959:4:14","type":""}],"src":"29793:419:14"},{"body":{"nodeType":"YulBlock","src":"30246:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30263:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30266:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30256:6:14"},"nodeType":"YulFunctionCall","src":"30256:88:14"},"nodeType":"YulExpressionStatement","src":"30256:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30360:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30363:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30353:6:14"},"nodeType":"YulFunctionCall","src":"30353:15:14"},"nodeType":"YulExpressionStatement","src":"30353:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30384:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30387:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30377:6:14"},"nodeType":"YulFunctionCall","src":"30377:15:14"},"nodeType":"YulExpressionStatement","src":"30377:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"30218:180:14"},{"body":{"nodeType":"YulBlock","src":"30432:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30449:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30452:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30442:6:14"},"nodeType":"YulFunctionCall","src":"30442:88:14"},"nodeType":"YulExpressionStatement","src":"30442:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30546:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30549:4:14","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30539:6:14"},"nodeType":"YulFunctionCall","src":"30539:15:14"},"nodeType":"YulExpressionStatement","src":"30539:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30570:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30573:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30563:6:14"},"nodeType":"YulFunctionCall","src":"30563:15:14"},"nodeType":"YulExpressionStatement","src":"30563:15:14"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"30404:180:14"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1436_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1436_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1436_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1436__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1436_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1436(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1436(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1436(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1436(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1436(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1436(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1436(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: sender must be an\")\n\n        mstore(add(memPtr, 32), \" admin to grant\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: sender must be an\")\n\n        mstore(add(memPtr, 32), \" admin to revoke\")\n\n    }\n\n    function abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: division by zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: subtraction overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"EnumerableSet: index out of boun\")\n\n        mstore(add(memPtr, 32), \"ds\")\n\n    }\n\n    function abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063a217fddf116100a2578063d547741f11610071578063d547741f146104e9578063e0e9349b14610505578063eceab5c514610521578063f2fde38b1461053f576101cf565b8063a217fddf1461044a578063a6ef79b414610468578063bd7fe2171461049b578063ca15c873146104b9576101cf565b80638da5cb5b116100de5780638da5cb5b146103ae5780639010d07c146103cc57806391d14854146103fc5780639588e6141461042c576101cf565b8063715018a61461039057806381613f251461039a5780638a6e0169146103a4576101cf565b80632f2ff15d1161017157806338b7f4461161014b57806338b7f44614610308578063527a52c8146103265780635e6a4fb014610342578063669004f914610360576101cf565b80632f2ff15d146102b25780632f41ffd0146102ce57806336568abe146102ec576101cf565b806326ba7898116101ad57806326ba7898146102405780632d906e631461025c5780632dc47153146102785780632e1a7d4d14610296576101cf565b806316317c21146101d457806319cb170c146101f2578063248a9ca314610210575b600080fd5b6101dc61055b565b6040516101e99190611f1a565b60405180910390f35b6101fa610561565b6040516102079190611f1a565b60405180910390f35b61022a60048036038101906102259190611f70565b610567565b6040516102379190611fac565b60405180910390f35b61025a60048036038101906102559190612025565b610587565b005b6102766004803603810190610271919061207e565b61069e565b005b610280610718565b60405161028d91906120ba565b60405180910390f35b6102b060048036038101906102ab919061207e565b61073e565b005b6102cc60048036038101906102c791906120d5565b6108df565b005b6102d6610953565b6040516102e39190611f1a565b60405180910390f35b610306600480360381019061030191906120d5565b610959565b005b6103106109dc565b60405161031d9190611fac565b60405180910390f35b610340600480360381019061033b9190612025565b610a00565b005b61034a610b08565b6040516103579190611f1a565b60405180910390f35b61037a6004803603810190610375919061207e565b610b0e565b6040516103879190612174565b60405180910390f35b610398610b4c565b005b6103a2610c86565b005b6103ac610e0a565b005b6103b6611238565b6040516103c391906120ba565b60405180910390f35b6103e660048036038101906103e1919061218f565b611261565b6040516103f391906120ba565b60405180910390f35b610416600480360381019061041191906120d5565b611293565b60405161042391906121ea565b60405180910390f35b6104346112c5565b6040516104419190611f1a565b60405180910390f35b6104526112cb565b60405161045f9190611fac565b60405180910390f35b610482600480360381019061047d919061207e565b6112d2565b6040516104929493929190612295565b60405180910390f35b6104a361138a565b6040516104b09190611f1a565b60405180910390f35b6104d360048036038101906104ce9190611f70565b611390565b6040516104e09190611f1a565b60405180910390f35b61050360048036038101906104fe91906120d5565b6113b7565b005b61051f600480360381019061051a919061231f565b61142b565b005b610529611561565b6040516105369190611f1a565b60405180910390f35b61055960048036038101906105549190612025565b611567565b005b600f5481565b600b5481565b600060026000838152602001908152602001600020600201549050919050565b6105b87f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6105b361170f565b611293565b6105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90612398565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106cf7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6106ca61170f565b611293565b61070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612398565b60405180910390fd5b8060088190555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260015403610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90612404565b60405180910390fd5b60026001819055506107bc7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6107b761170f565b611293565b6107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f290612398565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610858929190612424565b6020604051808303816000875af1158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089b9190612479565b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c842826040516108cd9291906124a6565b60405180910390a16001808190555050565b610906600260008481526020019081526020016000206002015461090161170f565b611293565b610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c90612541565b60405180910390fd5b61094f8282611717565b5050565b600a5481565b61096161170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c5906125d3565b60405180910390fd5b6109d882826117ab565b5050565b7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e81565b600260015403610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c90612404565b60405180910390fd5b6002600181905550610a7e7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610a7961170f565b611293565b610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490612398565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808190555050565b600e5481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b610b5461170f565b73ffffffffffffffffffffffffffffffffffffffff16610b72611238565b73ffffffffffffffffffffffffffffffffffffffff1614610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf9061263f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260015403610ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc290612404565b60405180910390fd5b6002600181905550610d047f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610cff61170f565b611293565b610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90612398565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd691906126b6565b5050509150506000610df66402540be4008361183f90919063ffffffff16565b905080600e81905550505060018081905550565b600260015403610e4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4690612404565b60405180910390fd5b6002600181905550610e887f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e610e8361170f565b611293565b610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90612398565b60405180910390fd5b6000610ed16118b9565b905060019050801561122e576000610f24610ef9600e54600d5461183f90919063ffffffff16565b610f16670de0b6b3a7640000600c5461183f90919063ffffffff16565b611b0390919063ffffffff16565b90506000610f43670de0b6b3a764000083611b6190919063ffffffff16565b905060085481101561106f576000610f6682600854611bb990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b8152600401610fc39190611f1a565b600060405180830381600087803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b505050506040518060400160405280600481526020017f4275726e0000000000000000000000000000000000000000000000000000000081525060046000600a548152602001908152602001600020600001908161104f9190612962565b508060046000600a54815260200190815260200160002060010181905550505b60085481111561119957600061109060085483611bb990919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b81526004016110ed9190611f1a565b600060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505050506040518060400160405280600481526020017f4d696e740000000000000000000000000000000000000000000000000000000081525060046000600a54815260200190815260200160002060000190816111799190612962565b508060046000600a54815260200190815260200160002060010181905550505b806008819055504360046000600a548152602001908152602001600020600301819055504260046000600a54815260200190815260200160002060020181905550600a60008154809291906111ed90612a63565b91905055507f2a6a493f767ec856dcac2f52ecc7e244b432c2d615092ef532c22a94568ed99542826040516112239291906124a6565b60405180910390a150505b5060018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061128b8260026000868152602001908152602001600020600001611c1290919063ffffffff16565b905092915050565b60006112bd8260026000868152602001908152602001600020600001611c2c90919063ffffffff16565b905092915050565b600c5481565b6000801b81565b60046020528060005260406000206000915090508060000180546112f59061278f565b80601f01602080910402602001604051908101604052809291908181526020018280546113219061278f565b801561136e5780601f106113435761010080835404028352916020019161136e565b820191906000526020600020905b81548152906001019060200180831161135157829003601f168201915b5050505050908060010154908060020154908060030154905084565b60085481565b60006113b060026000848152602001908152602001600020600001611c5c565b9050919050565b6113de60026000848152602001908152602001600020600201546113d961170f565b611293565b61141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141490612b1d565b60405180910390fd5b61142782826117ab565b5050565b600260015403611470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146790612404565b60405180910390fd5b60026001819055506114a97f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6114a461170f565b611293565b6114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df90612398565b60405180910390fd5b8060036000600f54815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f600081548092919061155290612a63565b91905055506001808190555050565b600d5481565b61156f61170f565b73ffffffffffffffffffffffffffffffffffffffff1661158d611238565b73ffffffffffffffffffffffffffffffffffffffff16146115e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115da9061263f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164990612baf565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61173f8160026000858152602001908152602001600020600001611c7190919063ffffffff16565b156117a75761174c61170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6117d38160026000858152602001908152602001600020600001611ca190919063ffffffff16565b1561183b576117e061170f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080830361185157600090506118b3565b6000828461185f9190612bcf565b905082848261186e9190612c40565b146118ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a590612ce3565b60405180910390fd5b809150505b92915050565b60006118ec7f899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c03923e6118e761170f565b611293565b61192b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192290612398565b60405180910390fd5b60006003600080815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016119be91906120ba565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff9190612d03565b90506000600360006001815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611a9591906120ba565b602060405180830381865afa158015611ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad69190612d03565b9050600c548214611ae95781600c819055505b600c548114611afa5780600d819055505b60019250505090565b6000808284611b129190612d30565b905083811015611b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4e90612db0565b60405180910390fd5b8091505092915050565b6000808211611ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9c90612e1c565b60405180910390fd5b8183611bb19190612c40565b905092915050565b600082821115611bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf590612e88565b60405180910390fd5b8183611c0a9190612ea8565b905092915050565b6000611c218360000183611cd1565b60001c905092915050565b6000611c54836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d45565b905092915050565b6000611c6a82600001611d68565b9050919050565b6000611c99836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611d79565b905092915050565b6000611cc9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611de9565b905092915050565b600081836000018054905011611d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1390612f4e565b60405180910390fd5b826000018281548110611d3257611d31612f6e565b5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000611d858383611d45565b611dde578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611de3565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611ef5576000600182611e1b9190612ea8565b9050600060018660000180549050611e339190612ea8565b90506000866000018281548110611e4d57611e4c612f6e565b5b9060005260206000200154905080876000018481548110611e7157611e70612f6e565b5b9060005260206000200181905550600183611e8c9190612d30565b8760010160008381526020019081526020016000208190555086600001805480611eb957611eb8612f9d565b5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611efb565b60009150505b92915050565b6000819050919050565b611f1481611f01565b82525050565b6000602082019050611f2f6000830184611f0b565b92915050565b600080fd5b6000819050919050565b611f4d81611f3a565b8114611f5857600080fd5b50565b600081359050611f6a81611f44565b92915050565b600060208284031215611f8657611f85611f35565b5b6000611f9484828501611f5b565b91505092915050565b611fa681611f3a565b82525050565b6000602082019050611fc16000830184611f9d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ff282611fc7565b9050919050565b61200281611fe7565b811461200d57600080fd5b50565b60008135905061201f81611ff9565b92915050565b60006020828403121561203b5761203a611f35565b5b600061204984828501612010565b91505092915050565b61205b81611f01565b811461206657600080fd5b50565b60008135905061207881612052565b92915050565b60006020828403121561209457612093611f35565b5b60006120a284828501612069565b91505092915050565b6120b481611fe7565b82525050565b60006020820190506120cf60008301846120ab565b92915050565b600080604083850312156120ec576120eb611f35565b5b60006120fa85828601611f5b565b925050602061210b85828601612010565b9150509250929050565b6000819050919050565b600061213a61213561213084611fc7565b612115565b611fc7565b9050919050565b600061214c8261211f565b9050919050565b600061215e82612141565b9050919050565b61216e81612153565b82525050565b60006020820190506121896000830184612165565b92915050565b600080604083850312156121a6576121a5611f35565b5b60006121b485828601611f5b565b92505060206121c585828601612069565b9150509250929050565b60008115159050919050565b6121e4816121cf565b82525050565b60006020820190506121ff60008301846121db565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561223f578082015181840152602081019050612224565b60008484015250505050565b6000601f19601f8301169050919050565b600061226782612205565b6122718185612210565b9350612281818560208601612221565b61228a8161224b565b840191505092915050565b600060808201905081810360008301526122af818761225c565b90506122be6020830186611f0b565b6122cb6040830185611f0b565b6122d86060830184611f0b565b95945050505050565b60006122ec82611fe7565b9050919050565b6122fc816122e1565b811461230757600080fd5b50565b600081359050612319816122f3565b92915050565b60006020828403121561233557612334611f35565b5b60006123438482850161230a565b91505092915050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b6000612382600b83612210565b915061238d8261234c565b602082019050919050565b600060208201905081810360008301526123b181612375565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006123ee601f83612210565b91506123f9826123b8565b602082019050919050565b6000602082019050818103600083015261241d816123e1565b9050919050565b600060408201905061243960008301856120ab565b6124466020830184611f0b565b9392505050565b612456816121cf565b811461246157600080fd5b50565b6000815190506124738161244d565b92915050565b60006020828403121561248f5761248e611f35565b5b600061249d84828501612464565b91505092915050565b60006040820190506124bb6000830185611f0b565b6124c86020830184611f0b565b9392505050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f206772616e740000000000000000000000000000000000602082015250565b600061252b602f83612210565b9150612536826124cf565b604082019050919050565b6000602082019050818103600083015261255a8161251e565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006125bd602f83612210565b91506125c882612561565b604082019050919050565b600060208201905081810360008301526125ec816125b0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612629602083612210565b9150612634826125f3565b602082019050919050565b600060208201905081810360008301526126588161261c565b9050919050565b600069ffffffffffffffffffff82169050919050565b61267e8161265f565b811461268957600080fd5b50565b60008151905061269b81612675565b92915050565b6000815190506126b081612052565b92915050565b600080600080600060a086880312156126d2576126d1611f35565b5b60006126e08882890161268c565b95505060206126f1888289016126a1565b9450506040612702888289016126a1565b9350506060612713888289016126a1565b92505060806127248882890161268c565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127a757607f821691505b6020821081036127ba576127b9612760565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128227fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826127e5565b61282c86836127e5565b95508019841693508086168417925050509392505050565b600061285f61285a61285584611f01565b612115565b611f01565b9050919050565b6000819050919050565b61287983612844565b61288d61288582612866565b8484546127f2565b825550505050565b600090565b6128a2612895565b6128ad818484612870565b505050565b5b818110156128d1576128c660008261289a565b6001810190506128b3565b5050565b601f821115612916576128e7816127c0565b6128f0846127d5565b810160208510156128ff578190505b61291361290b856127d5565b8301826128b2565b50505b505050565b600082821c905092915050565b60006129396000198460080261291b565b1980831691505092915050565b60006129528383612928565b9150826002028217905092915050565b61296b82612205565b67ffffffffffffffff81111561298457612983612731565b5b61298e825461278f565b6129998282856128d5565b600060209050601f8311600181146129cc57600084156129ba578287015190505b6129c48582612946565b865550612a2c565b601f1984166129da866127c0565b60005b82811015612a02578489015182556001820191506020850194506020810190506129dd565b86831015612a1f5784890151612a1b601f891682612928565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a6e82611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612aa057612a9f612a34565b5b600182019050919050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000602082015250565b6000612b07603083612210565b9150612b1282612aab565b604082019050919050565b60006020820190508181036000830152612b3681612afa565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b99602683612210565b9150612ba482612b3d565b604082019050919050565b60006020820190508181036000830152612bc881612b8c565b9050919050565b6000612bda82611f01565b9150612be583611f01565b9250828202612bf381611f01565b91508282048414831517612c0a57612c09612a34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c4b82611f01565b9150612c5683611f01565b925082612c6657612c65612c11565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000612ccd602183612210565b9150612cd882612c71565b604082019050919050565b60006020820190508181036000830152612cfc81612cc0565b9050919050565b600060208284031215612d1957612d18611f35565b5b6000612d27848285016126a1565b91505092915050565b6000612d3b82611f01565b9150612d4683611f01565b9250828201905080821115612d5e57612d5d612a34565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000612d9a601b83612210565b9150612da582612d64565b602082019050919050565b60006020820190508181036000830152612dc981612d8d565b9050919050565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000600082015250565b6000612e06601a83612210565b9150612e1182612dd0565b602082019050919050565b60006020820190508181036000830152612e3581612df9565b9050919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b6000612e72601e83612210565b9150612e7d82612e3c565b602082019050919050565b60006020820190508181036000830152612ea181612e65565b9050919050565b6000612eb382611f01565b9150612ebe83611f01565b9250828203905081811115612ed657612ed5612a34565b5b92915050565b7f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008201527f6473000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f38602283612210565b9150612f4382612edc565b604082019050919050565b60006020820190508181036000830152612f6781612f2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220405e7bdecad9ffa002407a060a6b62670e3632a4618312d59b75ead84a8ca3ed64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xE0E9349B EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xECEAB5C5 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53F JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6EF79B4 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xBD7FE217 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x4B9 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x9588E614 EQ PUSH2 0x42C JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x81613F25 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x8A6E0169 EQ PUSH2 0x3A4 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x38B7F446 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x38B7F446 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x527A52C8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x5E6A4FB0 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x669004F9 EQ PUSH2 0x360 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x2F41FFD0 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EC JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x26BA7898 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x26BA7898 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x2D906E63 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x2DC47153 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x296 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x16317C21 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x19CB170C EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x210 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xB4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH2 0xC86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH2 0xE0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B6 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A3 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x142B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x529 PUSH2 0x1561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x2025 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B8 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x5B3 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6CF PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x6CA PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x70E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x7BC PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x7B7 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP3 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x2479 JUMP JUMPDEST POP PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 TIMESTAMP DUP3 PUSH1 0x40 MLOAD PUSH2 0x8CD SWAP3 SWAP2 SWAP1 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x906 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x901 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93C SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP3 DUP3 PUSH2 0x1717 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x961 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D8 DUP3 DUP3 PUSH2 0x17AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3C SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xA7E PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xA79 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB72 PUSH2 0x1238 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBF SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xD04 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xCFF PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH2 0xDF6 PUSH5 0x2540BE400 DUP4 PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xE88 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0xE83 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0xEC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBE SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xED1 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP1 POP DUP1 ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 PUSH2 0xF24 PUSH2 0xEF9 PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF16 PUSH8 0xDE0B6B3A7640000 PUSH1 0xC SLOAD PUSH2 0x183F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF43 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1B61 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1BB9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4275726E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x2962 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 PUSH2 0x1090 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1BB9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0712D68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x111B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D696E7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1179 SWAP2 SWAP1 PUSH2 0x2962 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x0 PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11ED SWAP1 PUSH2 0x2A63 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x2A6A493F767EC856DCAC2F52ECC7E244B432C2D615092EF532C22A94568ED995 TIMESTAMP DUP3 PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x24A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12BD DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x12F5 SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1321 SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x136E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1343 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x136E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1351 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DE PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x13D9 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x141D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP1 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1427 DUP3 DUP3 PUSH2 0x17AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x14A9 PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x14A4 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DF SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0xF SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1552 SWAP1 PUSH2 0x2A63 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156F PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x158D PUSH2 0x1238 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DA SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1649 SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1C71 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x17A7 JUMPI PUSH2 0x174C PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1CA1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x183B JUMPI PUSH2 0x17E0 PUSH2 0x170F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x1851 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x2BCF JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x186E SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST EQ PUSH2 0x18AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A5 SWAP1 PUSH2 0x2CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EC PUSH32 0x899BD46557473CB80307A9DABC297131CED39608330A2D29B2D52B660C03923E PUSH2 0x18E7 PUSH2 0x170F JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1922 SWAP1 PUSH2 0x2398 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A95 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x2D03 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP3 EQ PUSH2 0x1AE9 JUMPI DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xC SLOAD DUP2 EQ PUSH2 0x1AFA JUMPI DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4E SWAP1 PUSH2 0x2DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1BA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9C SWAP1 PUSH2 0x2E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x2C40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1BFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF5 SWAP1 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x1C0A SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C54 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6A DUP3 PUSH1 0x0 ADD PUSH2 0x1D68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1DE9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x1D1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D13 SWAP1 PUSH2 0x2F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D85 DUP4 DUP4 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x1DDE JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1E1B SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2EA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E4D JUMPI PUSH2 0x1E4C PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x2F6E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH2 0x1E8C SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x2F9D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4D DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6A DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F86 JUMPI PUSH2 0x1F85 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F94 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FA6 DUP2 PUSH2 0x1F3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF2 DUP3 PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2002 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP2 EQ PUSH2 0x200D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x201F DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203B JUMPI PUSH2 0x203A PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2049 DUP5 DUP3 DUP6 ADD PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2078 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH2 0x2093 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20A2 DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20B4 DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EC JUMPI PUSH2 0x20EB PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210B DUP6 DUP3 DUP7 ADD PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A PUSH2 0x2135 PUSH2 0x2130 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x1FC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214C DUP3 PUSH2 0x211F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E DUP3 PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216E DUP2 PUSH2 0x2153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2189 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21C5 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x21CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x223F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2267 DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH2 0x2271 DUP2 DUP6 PUSH2 0x2210 JUMP JUMPDEST SWAP4 POP PUSH2 0x2281 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x228A DUP2 PUSH2 0x224B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 DUP8 PUSH2 0x225C JUMP JUMPDEST SWAP1 POP PUSH2 0x22BE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x22CB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x22D8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EC DUP3 PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FC DUP2 PUSH2 0x22E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2319 DUP2 PUSH2 0x22F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2335 JUMPI PUSH2 0x2334 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2343 DUP5 DUP3 DUP6 ADD PUSH2 0x230A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2382 PUSH1 0xB DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x238D DUP3 PUSH2 0x234C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B1 DUP2 PUSH2 0x2375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE PUSH1 0x1F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP3 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241D DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2439 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2456 DUP2 PUSH2 0x21CF JUMP JUMPDEST DUP2 EQ PUSH2 0x2461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2473 DUP2 PUSH2 0x244D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248F JUMPI PUSH2 0x248E PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x249D DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x24C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252B PUSH1 0x2F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2536 DUP3 PUSH2 0x24CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255A DUP2 PUSH2 0x251E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25BD PUSH1 0x2F DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP3 PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EC DUP2 PUSH2 0x25B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2629 PUSH1 0x20 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2634 DUP3 PUSH2 0x25F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2658 DUP2 PUSH2 0x261C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267E DUP2 PUSH2 0x265F JUMP JUMPDEST DUP2 EQ PUSH2 0x2689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x269B DUP2 PUSH2 0x2675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B0 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x26D2 JUMPI PUSH2 0x26D1 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26E0 DUP9 DUP3 DUP10 ADD PUSH2 0x268C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x26F1 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2702 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2713 DUP9 DUP3 DUP10 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2724 DUP9 DUP3 DUP10 ADD PUSH2 0x268C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x2760 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2822 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x27E5 JUMP JUMPDEST PUSH2 0x282C DUP7 DUP4 PUSH2 0x27E5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285F PUSH2 0x285A PUSH2 0x2855 DUP5 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2879 DUP4 PUSH2 0x2844 JUMP JUMPDEST PUSH2 0x288D PUSH2 0x2885 DUP3 PUSH2 0x2866 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x27F2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x28A2 PUSH2 0x2895 JUMP JUMPDEST PUSH2 0x28AD DUP2 DUP5 DUP5 PUSH2 0x2870 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28D1 JUMPI PUSH2 0x28C6 PUSH1 0x0 DUP3 PUSH2 0x289A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x28E7 DUP2 PUSH2 0x27C0 JUMP JUMPDEST PUSH2 0x28F0 DUP5 PUSH2 0x27D5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x28FF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2913 PUSH2 0x290B DUP6 PUSH2 0x27D5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x28B2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2939 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x291B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2952 DUP4 DUP4 PUSH2 0x2928 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x296B DUP3 PUSH2 0x2205 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2984 JUMPI PUSH2 0x2983 PUSH2 0x2731 JUMP JUMPDEST JUMPDEST PUSH2 0x298E DUP3 SLOAD PUSH2 0x278F JUMP JUMPDEST PUSH2 0x2999 DUP3 DUP3 DUP6 PUSH2 0x28D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x29CC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x29BA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x29C4 DUP6 DUP3 PUSH2 0x2946 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A2C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x29DA DUP7 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A02 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A1F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A1B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2928 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A6E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2AA0 JUMPI PUSH2 0x2A9F PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B07 PUSH1 0x30 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B12 DUP3 PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B36 DUP2 PUSH2 0x2AFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B99 PUSH1 0x26 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA4 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BC8 DUP2 PUSH2 0x2B8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDA DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE5 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BF3 DUP2 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C0A JUMPI PUSH2 0x2C09 PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C56 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C66 JUMPI PUSH2 0x2C65 PUSH2 0x2C11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCD PUSH1 0x21 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFC DUP2 PUSH2 0x2CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D19 JUMPI PUSH2 0x2D18 PUSH2 0x1F35 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D27 DUP5 DUP3 DUP6 ADD PUSH2 0x26A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3B DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D46 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D5E JUMPI PUSH2 0x2D5D PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9A PUSH1 0x1B DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA5 DUP3 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC9 DUP2 PUSH2 0x2D8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E06 PUSH1 0x1A DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E11 DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E35 DUP2 PUSH2 0x2DF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E72 PUSH1 0x1E DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7D DUP3 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA1 DUP2 PUSH2 0x2E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB3 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EBE DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2ED6 JUMPI PUSH2 0x2ED5 PUSH2 0x2A34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F38 PUSH1 0x22 DUP4 PUSH2 0x2210 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F43 DUP3 PUSH2 0x2EDC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F67 DUP2 PUSH2 0x2F2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x5E PUSH28 0xDECAD9FFA002407A060A6B62670E3632A4618312D59B75EAD84A8CA3 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"526:4570:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1190:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4274:112:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1836:232:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3364:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1121:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4855:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4636:223:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1151:32:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5810:205:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1492:62:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2599:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1418:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;866:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:2;;;:::i;:::-;;2310:281:13;;;:::i;:::-;;3537:1310;;;:::i;:::-;;1068:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3957:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2942:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1235:32:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1719:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:51:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1089:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3247:125:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5093:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2076::13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1377:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1456:27:13;;;;:::o;1190:38::-;;;;:::o;4274:112:1:-;4331:7;4357:6;:12;4364:4;4357:12;;;;;;;;;;;:22;;;4350:29;;4274:112;;;:::o;1836:232:13:-;1917:34;1530:24;1938:12;:10;:12::i;:::-;1917:7;:34::i;:::-;1909:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1989:15;1978:8;;:26;;;;;;;;;;;;;;;;;;2051:8;;;;;;;;;;;2015:11;;:45;;;;;;;;;;;;;;;;;;1836:232;:::o;3364:165::-;3436:34;1530:24;3457:12;:10;:12::i;:::-;3436:7;:34::i;:::-;3428:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:11;3497:10;:24;;;;3364:165;:::o;1121:23::-;;;;;;;;;;;;;:::o;4855:238::-;1680:1:11;2260:7;;:19;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;4931:34:13::1;1530:24;4952:12;:10;:12::i;:::-;4931:7;:34::i;:::-;4923:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4992:4;;;;;;;;;;;:13;;;5014:10;5027:7;4992:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5051:34;5060:15;5077:7;5051:34;;;;;;;:::i;:::-;;;;;;;;1637:1:11::0;2563:7;:22;;;;4855:238:13;:::o;4636:223:1:-;4719:45;4727:6;:12;4734:4;4727:12;;;;;;;;;;;:22;;;4751:12;:10;:12::i;:::-;4719:7;:45::i;:::-;4711:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4827:25;4838:4;4844:7;4827:10;:25::i;:::-;4636:223;;:::o;1151:32:13:-;;;;:::o;5810:205:1:-;5907:12;:10;:12::i;:::-;5896:23;;:7;:23;;;5888:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5982:26;5994:4;6000:7;5982:11;:26::i;:::-;5810:205;;:::o;1492:62:13:-;1530:24;1492:62;:::o;2599:180::-;1680:1:11;2260:7;;:19;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;2685:34:13::1;1530:24;2706:12;:10;:12::i;:::-;2685:7;:34::i;:::-;2677:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2764:7;2746:15;;:25;;;;;;;;;;;;;;;;;;1637:1:11::0;2563:7;:22;;;;2599:180:13;:::o;1418:31::-;;;;:::o;866:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1700:145:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;2310:281:13:-;1680:1:11;2260:7;;:19;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;2376:34:13::1;1530:24;2397:12;:10;:12::i;:::-;2376:7;:34::i;:::-;2368:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2440:13;2463:11;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2437:55;;;;;;2503:13;2519:29;1318:4;2520:5;2519:11;;:29;;;;:::i;:::-;2503:45;;2578:5;2559:16;:24;;;;2357:234;;1637:1:11::0;2563:7;:22;;;;2310:281:13:o;3537:1310::-;1680:1:11;2260:7;;:19;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;3601:34:13::1;1530:24;3622:12;:10;:12::i;:::-;3601:7;:34::i;:::-;3593:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3662:11;3676:22;:20;:22::i;:::-;3662:36;;3722:4;3713:13;;;3709:1131;;;3743:19;3765:113;3822:41;3846:16;;3822:19;;:23;;:41;;;;:::i;:::-;3766:32;1366:4;3766:17;;:21;;:32;;;;:::i;:::-;3765:38;;:113;;;;:::i;:::-;3743:135;;3893:16;3912:26;1366:4;3912:11;:15;;:26;;;;:::i;:::-;3893:45;;3968:10;;3957:8;:21;3953:293;;;3999:20;4022:24;4037:8;4022:10;;:14;;:24;;;;:::i;:::-;3999:47;;4065:4;;;;;;;;;;;:9;;;4075:12;4065:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4107:49;;;;;;;;;;;;;;;;::::0;:14:::1;:33;4122:17;;4107:33;;;;;;;;;;;:40;;:49;;;;;;:::i;:::-;;4218:12;4175:14;:33;4190:17;;4175:33;;;;;;;;;;;:40;;:55;;;;3980:266;3953:293;4275:10;;4264:8;:21;4260:293;;;4306:20;4329:24;4342:10;;4329:8;:12;;:24;;;;:::i;:::-;4306:47;;4372:4;;;;;;;;;;;:9;;;4382:12;4372:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4414:49;;;;;;;;;;;;;;;;::::0;:14:::1;:33;4429:17;;4414:33;;;;;;;;;;;:40;;:49;;;;;;:::i;:::-;;4525:12;4482:14;:33;4497:17;;4482:33;;;;;;;;;;;:40;;:55;;;;4287:266;4260:293;4580:8;4567:10;:21;;;;4648:12;4603:14;:33;4618:17;;4603:33;;;;;;;;;;;:42;;:57;;;;4721:15;4675:14;:33;4690:17;;4675:33;;;;;;;;;;;:43;;:61;;;;4751:17;;:19;;;;;;;;;:::i;:::-;;;;;;4790:38;4802:15;4819:8;4790:38;;;;;;;:::i;:::-;;;;;;;;3728:1112;;3709:1131;3582:1265;1637:1:11::0;2563:7;:22;;;;3537:1310:13:o;1068:85:2:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;3957:136:1:-;4030:7;4056:30;4080:5;4056:6;:12;4063:4;4056:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4049:37;;3957:136;;;;:::o;2942:137::-;3011:4;3034:38;3064:7;3034:6;:12;3041:4;3034:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3027:45;;2942:137;;;;:::o;1235:32:13:-;;;;:::o;1719:49:1:-;1764:4;1719:49;;;:::o;919:51:13:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1089:25::-;;;;:::o;3247:125:1:-;3310:7;3336:29;:6;:12;3343:4;3336:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3329:36;;3247:125;;;:::o;5093:226::-;5177:45;5185:6;:12;5192:4;5185:12;;;;;;;;;;;:22;;;5209:12;:10;:12::i;:::-;5177:7;:45::i;:::-;5169:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;5286:26;5298:4;5304:7;5286:11;:26::i;:::-;5093:226;;:::o;2076::13:-;1680:1:11;2260:7;;:19;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1680:1;2390:7;:18;;;;2164:34:13::1;1530:24;2185:12;:10;:12::i;:::-;2164:7;:34::i;:::-;2156:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2258:11;2225:7;:21;2233:12;;2225:21;;;;;;;;;;;:30;;;:44;;;;;;;;;;;;;;;;;;2280:12;;:14;;;;;;;;;:::i;:::-;;;;;;1637:1:11::0;2563:7;:22;;;;2076:226:13;:::o;1377:34::-;;;;:::o;1994:240:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;::::0;2074:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;590:96:9:-;643:7;669:10;662:17;;590:96;:::o;7017:184:1:-;7090:33;7115:7;7090:6;:12;7097:4;7090:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7086:109;;;7171:12;:10;:12::i;:::-;7144:40;;7162:7;7144:40;;7156:4;7144:40;;;;;;;;;;7086:109;7017:184;;:::o;7207:188::-;7281:36;7309:7;7281:6;:12;7288:4;7281:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7277:112;;;7365:12;:10;:12::i;:::-;7338:40;;7356:7;7338:40;;7350:4;7338:40;;;;;;;;;;7277:112;7207:188;;:::o;3530:215:3:-;3588:7;3616:1;3611;:6;3607:20;;3626:1;3619:8;;;;3607:20;3637:9;3653:1;3649;:5;;;;:::i;:::-;3637:17;;3681:1;3676;3672;:5;;;;:::i;:::-;:10;3664:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3737:1;3730:8;;;3530:215;;;;;:::o;2787:569:13:-;2837:4;2862:34;1530:24;2883:12;:10;:12::i;:::-;2862:7;:34::i;:::-;2854:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:21;2947:7;:10;2955:1;2947:10;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;2977:15;;;;;;;;;;;2947:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2923:70;;3004:23;3030:7;:10;3038:1;3030:10;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;3074:15;;;;;;;;;;;3030:70;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3004:96;;3132:17;;3115:13;:34;3111:100;;3186:13;3166:17;:33;;;;3111:100;3244:17;;3225:15;:36;3221:106;;3300:15;3278:19;:37;;;;3221:106;3344:4;3337:11;;;;2787:569;:::o;2682:175:3:-;2740:7;2759:9;2775:1;2771;:5;;;;:::i;:::-;2759:17;;2799:1;2794;:6;;2786:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2849:1;2842:8;;;2682:175;;;;:::o;4209:150::-;4267:7;4298:1;4294;:5;4286:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4351:1;4347;:5;;;;:::i;:::-;4340:12;;4209:150;;;;:::o;3128:155::-;3186:7;3218:1;3213;:6;;3205:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3275:1;3271;:5;;;;:::i;:::-;3264:12;;3128:155;;;;:::o;7669:156:10:-;7743:7;7793:22;7797:3;:10;;7809:5;7793:3;:22::i;:::-;7785:31;;7762:56;;7669:156;;;;:::o;6976:165::-;7056:4;7079:55;7089:3;:10;;7125:5;7109:23;;7101:32;;7079:9;:55::i;:::-;7072:62;;6976:165;;;;:::o;7222:115::-;7285:7;7311:19;7319:3;:10;;7311:7;:19::i;:::-;7304:26;;7222:115;;;:::o;6421:150::-;6491:4;6514:50;6519:3;:10;;6555:5;6539:23;;6531:32;;6514:4;:50::i;:::-;6507:57;;6421:150;;;;:::o;6739:156::-;6812:4;6835:53;6843:3;:10;;6879:5;6863:23;;6855:32;;6835:7;:53::i;:::-;6828:60;;6739:156;;;;:::o;4444:201::-;4511:7;4559:5;4538:3;:11;;:18;;;;:26;4530:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4620:3;:11;;4632:5;4620:18;;;;;;;;:::i;:::-;;;;;;;;;;4613:25;;4444:201;;;;:::o;3797:127::-;3870:4;3916:1;3893:3;:12;;:19;3906:5;3893:19;;;;;;;;;;;;:24;;3886:31;;3797:127;;;;:::o;4005:107::-;4061:7;4087:3;:11;;:18;;;;4080:25;;4005:107;;;:::o;1632:404::-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;2204:1512::-;2270:4;2386:18;2407:3;:12;;:19;2420:5;2407:19;;;;;;;;;;;;2386:40;;2455:1;2441:10;:15;2437:1273;;2798:21;2835:1;2822:10;:14;;;;:::i;:::-;2798:38;;2850:17;2891:1;2870:3;:11;;:18;;;;:22;;;;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;;;:::i;:::-;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3412:1;3396:13;:17;;;;:::i;:::-;3370:3;:12;;:23;3383:9;3370:23;;;;;;;;;;;:43;;;;3519:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3611:3;:12;;:19;3624:5;3611:19;;;;;;;;;;;3604:26;;;3652:4;3645:11;;;;;;;;2437:1273;3694:5;3687:12;;;2204:1512;;;;;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:77;806:7;835:5;824:16;;769:77;;;:::o;852:122::-;925:24;943:5;925:24;:::i;:::-;918:5;915:35;905:63;;964:1;961;954:12;905:63;852:122;:::o;980:139::-;1026:5;1064:6;1051:20;1042:29;;1080:33;1107:5;1080:33;:::i;:::-;980:139;;;;:::o;1125:329::-;1184:6;1233:2;1221:9;1212:7;1208:23;1204:32;1201:119;;;1239:79;;:::i;:::-;1201:119;1359:1;1384:53;1429:7;1420:6;1409:9;1405:22;1384:53;:::i;:::-;1374:63;;1330:117;1125:329;;;;:::o;1460:118::-;1547:24;1565:5;1547:24;:::i;:::-;1542:3;1535:37;1460:118;;:::o;1584:222::-;1677:4;1715:2;1704:9;1700:18;1692:26;;1728:71;1796:1;1785:9;1781:17;1772:6;1728:71;:::i;:::-;1584:222;;;;:::o;1812:126::-;1849:7;1889:42;1882:5;1878:54;1867:65;;1812:126;;;:::o;1944:96::-;1981:7;2010:24;2028:5;2010:24;:::i;:::-;1999:35;;1944:96;;;:::o;2046:122::-;2119:24;2137:5;2119:24;:::i;:::-;2112:5;2109:35;2099:63;;2158:1;2155;2148:12;2099:63;2046:122;:::o;2174:139::-;2220:5;2258:6;2245:20;2236:29;;2274:33;2301:5;2274:33;:::i;:::-;2174:139;;;;:::o;2319:329::-;2378:6;2427:2;2415:9;2406:7;2402:23;2398:32;2395:119;;;2433:79;;:::i;:::-;2395:119;2553:1;2578:53;2623:7;2614:6;2603:9;2599:22;2578:53;:::i;:::-;2568:63;;2524:117;2319:329;;;;:::o;2654:122::-;2727:24;2745:5;2727:24;:::i;:::-;2720:5;2717:35;2707:63;;2766:1;2763;2756:12;2707:63;2654:122;:::o;2782:139::-;2828:5;2866:6;2853:20;2844:29;;2882:33;2909:5;2882:33;:::i;:::-;2782:139;;;;:::o;2927:329::-;2986:6;3035:2;3023:9;3014:7;3010:23;3006:32;3003:119;;;3041:79;;:::i;:::-;3003:119;3161:1;3186:53;3231:7;3222:6;3211:9;3207:22;3186:53;:::i;:::-;3176:63;;3132:117;2927:329;;;;:::o;3262:118::-;3349:24;3367:5;3349:24;:::i;:::-;3344:3;3337:37;3262:118;;:::o;3386:222::-;3479:4;3517:2;3506:9;3502:18;3494:26;;3530:71;3598:1;3587:9;3583:17;3574:6;3530:71;:::i;:::-;3386:222;;;;:::o;3614:474::-;3682:6;3690;3739:2;3727:9;3718:7;3714:23;3710:32;3707:119;;;3745:79;;:::i;:::-;3707:119;3865:1;3890:53;3935:7;3926:6;3915:9;3911:22;3890:53;:::i;:::-;3880:63;;3836:117;3992:2;4018:53;4063:7;4054:6;4043:9;4039:22;4018:53;:::i;:::-;4008:63;;3963:118;3614:474;;;;;:::o;4094:60::-;4122:3;4143:5;4136:12;;4094:60;;;:::o;4160:142::-;4210:9;4243:53;4261:34;4270:24;4288:5;4270:24;:::i;:::-;4261:34;:::i;:::-;4243:53;:::i;:::-;4230:66;;4160:142;;;:::o;4308:126::-;4358:9;4391:37;4422:5;4391:37;:::i;:::-;4378:50;;4308:126;;;:::o;4440:141::-;4505:9;4538:37;4569:5;4538:37;:::i;:::-;4525:50;;4440:141;;;:::o;4587:161::-;4689:52;4735:5;4689:52;:::i;:::-;4684:3;4677:65;4587:161;;:::o;4754:252::-;4862:4;4900:2;4889:9;4885:18;4877:26;;4913:86;4996:1;4985:9;4981:17;4972:6;4913:86;:::i;:::-;4754:252;;;;:::o;5012:474::-;5080:6;5088;5137:2;5125:9;5116:7;5112:23;5108:32;5105:119;;;5143:79;;:::i;:::-;5105:119;5263:1;5288:53;5333:7;5324:6;5313:9;5309:22;5288:53;:::i;:::-;5278:63;;5234:117;5390:2;5416:53;5461:7;5452:6;5441:9;5437:22;5416:53;:::i;:::-;5406:63;;5361:118;5012:474;;;;;:::o;5492:90::-;5526:7;5569:5;5562:13;5555:21;5544:32;;5492:90;;;:::o;5588:109::-;5669:21;5684:5;5669:21;:::i;:::-;5664:3;5657:34;5588:109;;:::o;5703:210::-;5790:4;5828:2;5817:9;5813:18;5805:26;;5841:65;5903:1;5892:9;5888:17;5879:6;5841:65;:::i;:::-;5703:210;;;;:::o;5919:99::-;5971:6;6005:5;5999:12;5989:22;;5919:99;;;:::o;6024:169::-;6108:11;6142:6;6137:3;6130:19;6182:4;6177:3;6173:14;6158:29;;6024:169;;;;:::o;6199:246::-;6280:1;6290:113;6304:6;6301:1;6298:13;6290:113;;;6389:1;6384:3;6380:11;6374:18;6370:1;6365:3;6361:11;6354:39;6326:2;6323:1;6319:10;6314:15;;6290:113;;;6437:1;6428:6;6423:3;6419:16;6412:27;6261:184;6199:246;;;:::o;6451:102::-;6492:6;6543:2;6539:7;6534:2;6527:5;6523:14;6519:28;6509:38;;6451:102;;;:::o;6559:377::-;6647:3;6675:39;6708:5;6675:39;:::i;:::-;6730:71;6794:6;6789:3;6730:71;:::i;:::-;6723:78;;6810:65;6868:6;6863:3;6856:4;6849:5;6845:16;6810:65;:::i;:::-;6900:29;6922:6;6900:29;:::i;:::-;6895:3;6891:39;6884:46;;6651:285;6559:377;;;;:::o;6942:644::-;7139:4;7177:3;7166:9;7162:19;7154:27;;7227:9;7221:4;7217:20;7213:1;7202:9;7198:17;7191:47;7255:78;7328:4;7319:6;7255:78;:::i;:::-;7247:86;;7343:72;7411:2;7400:9;7396:18;7387:6;7343:72;:::i;:::-;7425;7493:2;7482:9;7478:18;7469:6;7425:72;:::i;:::-;7507;7575:2;7564:9;7560:18;7551:6;7507:72;:::i;:::-;6942:644;;;;;;;:::o;7592:111::-;7644:7;7673:24;7691:5;7673:24;:::i;:::-;7662:35;;7592:111;;;:::o;7709:152::-;7797:39;7830:5;7797:39;:::i;:::-;7790:5;7787:50;7777:78;;7851:1;7848;7841:12;7777:78;7709:152;:::o;7867:169::-;7928:5;7966:6;7953:20;7944:29;;7982:48;8024:5;7982:48;:::i;:::-;7867:169;;;;:::o;8042:359::-;8116:6;8165:2;8153:9;8144:7;8140:23;8136:32;8133:119;;;8171:79;;:::i;:::-;8133:119;8291:1;8316:68;8376:7;8367:6;8356:9;8352:22;8316:68;:::i;:::-;8306:78;;8262:132;8042:359;;;;:::o;8407:161::-;8547:13;8543:1;8535:6;8531:14;8524:37;8407:161;:::o;8574:366::-;8716:3;8737:67;8801:2;8796:3;8737:67;:::i;:::-;8730:74;;8813:93;8902:3;8813:93;:::i;:::-;8931:2;8926:3;8922:12;8915:19;;8574:366;;;:::o;8946:419::-;9112:4;9150:2;9139:9;9135:18;9127:26;;9199:9;9193:4;9189:20;9185:1;9174:9;9170:17;9163:47;9227:131;9353:4;9227:131;:::i;:::-;9219:139;;8946:419;;;:::o;9371:181::-;9511:33;9507:1;9499:6;9495:14;9488:57;9371:181;:::o;9558:366::-;9700:3;9721:67;9785:2;9780:3;9721:67;:::i;:::-;9714:74;;9797:93;9886:3;9797:93;:::i;:::-;9915:2;9910:3;9906:12;9899:19;;9558:366;;;:::o;9930:419::-;10096:4;10134:2;10123:9;10119:18;10111:26;;10183:9;10177:4;10173:20;10169:1;10158:9;10154:17;10147:47;10211:131;10337:4;10211:131;:::i;:::-;10203:139;;9930:419;;;:::o;10355:332::-;10476:4;10514:2;10503:9;10499:18;10491:26;;10527:71;10595:1;10584:9;10580:17;10571:6;10527:71;:::i;:::-;10608:72;10676:2;10665:9;10661:18;10652:6;10608:72;:::i;:::-;10355:332;;;;;:::o;10693:116::-;10763:21;10778:5;10763:21;:::i;:::-;10756:5;10753:32;10743:60;;10799:1;10796;10789:12;10743:60;10693:116;:::o;10815:137::-;10869:5;10900:6;10894:13;10885:22;;10916:30;10940:5;10916:30;:::i;:::-;10815:137;;;;:::o;10958:345::-;11025:6;11074:2;11062:9;11053:7;11049:23;11045:32;11042:119;;;11080:79;;:::i;:::-;11042:119;11200:1;11225:61;11278:7;11269:6;11258:9;11254:22;11225:61;:::i;:::-;11215:71;;11171:125;10958:345;;;;:::o;11309:332::-;11430:4;11468:2;11457:9;11453:18;11445:26;;11481:71;11549:1;11538:9;11534:17;11525:6;11481:71;:::i;:::-;11562:72;11630:2;11619:9;11615:18;11606:6;11562:72;:::i;:::-;11309:332;;;;;:::o;11647:234::-;11787:34;11783:1;11775:6;11771:14;11764:58;11856:17;11851:2;11843:6;11839:15;11832:42;11647:234;:::o;11887:366::-;12029:3;12050:67;12114:2;12109:3;12050:67;:::i;:::-;12043:74;;12126:93;12215:3;12126:93;:::i;:::-;12244:2;12239:3;12235:12;12228:19;;11887:366;;;:::o;12259:419::-;12425:4;12463:2;12452:9;12448:18;12440:26;;12512:9;12506:4;12502:20;12498:1;12487:9;12483:17;12476:47;12540:131;12666:4;12540:131;:::i;:::-;12532:139;;12259:419;;;:::o;12684:234::-;12824:34;12820:1;12812:6;12808:14;12801:58;12893:17;12888:2;12880:6;12876:15;12869:42;12684:234;:::o;12924:366::-;13066:3;13087:67;13151:2;13146:3;13087:67;:::i;:::-;13080:74;;13163:93;13252:3;13163:93;:::i;:::-;13281:2;13276:3;13272:12;13265:19;;12924:366;;;:::o;13296:419::-;13462:4;13500:2;13489:9;13485:18;13477:26;;13549:9;13543:4;13539:20;13535:1;13524:9;13520:17;13513:47;13577:131;13703:4;13577:131;:::i;:::-;13569:139;;13296:419;;;:::o;13721:182::-;13861:34;13857:1;13849:6;13845:14;13838:58;13721:182;:::o;13909:366::-;14051:3;14072:67;14136:2;14131:3;14072:67;:::i;:::-;14065:74;;14148:93;14237:3;14148:93;:::i;:::-;14266:2;14261:3;14257:12;14250:19;;13909:366;;;:::o;14281:419::-;14447:4;14485:2;14474:9;14470:18;14462:26;;14534:9;14528:4;14524:20;14520:1;14509:9;14505:17;14498:47;14562:131;14688:4;14562:131;:::i;:::-;14554:139;;14281:419;;;:::o;14706:105::-;14742:7;14782:22;14775:5;14771:34;14760:45;;14706:105;;;:::o;14817:120::-;14889:23;14906:5;14889:23;:::i;:::-;14882:5;14879:34;14869:62;;14927:1;14924;14917:12;14869:62;14817:120;:::o;14943:141::-;14999:5;15030:6;15024:13;15015:22;;15046:32;15072:5;15046:32;:::i;:::-;14943:141;;;;:::o;15090:143::-;15147:5;15178:6;15172:13;15163:22;;15194:33;15221:5;15194:33;:::i;:::-;15090:143;;;;:::o;15239:973::-;15343:6;15351;15359;15367;15375;15424:3;15412:9;15403:7;15399:23;15395:33;15392:120;;;15431:79;;:::i;:::-;15392:120;15551:1;15576:63;15631:7;15622:6;15611:9;15607:22;15576:63;:::i;:::-;15566:73;;15522:127;15688:2;15714:64;15770:7;15761:6;15750:9;15746:22;15714:64;:::i;:::-;15704:74;;15659:129;15827:2;15853:64;15909:7;15900:6;15889:9;15885:22;15853:64;:::i;:::-;15843:74;;15798:129;15966:2;15992:64;16048:7;16039:6;16028:9;16024:22;15992:64;:::i;:::-;15982:74;;15937:129;16105:3;16132:63;16187:7;16178:6;16167:9;16163:22;16132:63;:::i;:::-;16122:73;;16076:129;15239:973;;;;;;;;:::o;16218:180::-;16266:77;16263:1;16256:88;16363:4;16360:1;16353:15;16387:4;16384:1;16377:15;16404:180;16452:77;16449:1;16442:88;16549:4;16546:1;16539:15;16573:4;16570:1;16563:15;16590:320;16634:6;16671:1;16665:4;16661:12;16651:22;;16718:1;16712:4;16708:12;16739:18;16729:81;;16795:4;16787:6;16783:17;16773:27;;16729:81;16857:2;16849:6;16846:14;16826:18;16823:38;16820:84;;16876:18;;:::i;:::-;16820:84;16641:269;16590:320;;;:::o;16916:141::-;16965:4;16988:3;16980:11;;17011:3;17008:1;17001:14;17045:4;17042:1;17032:18;17024:26;;16916:141;;;:::o;17063:93::-;17100:6;17147:2;17142;17135:5;17131:14;17127:23;17117:33;;17063:93;;;:::o;17162:107::-;17206:8;17256:5;17250:4;17246:16;17225:37;;17162:107;;;;:::o;17275:393::-;17344:6;17394:1;17382:10;17378:18;17417:97;17447:66;17436:9;17417:97;:::i;:::-;17535:39;17565:8;17554:9;17535:39;:::i;:::-;17523:51;;17607:4;17603:9;17596:5;17592:21;17583:30;;17656:4;17646:8;17642:19;17635:5;17632:30;17622:40;;17351:317;;17275:393;;;;;:::o;17674:142::-;17724:9;17757:53;17775:34;17784:24;17802:5;17784:24;:::i;:::-;17775:34;:::i;:::-;17757:53;:::i;:::-;17744:66;;17674:142;;;:::o;17822:75::-;17865:3;17886:5;17879:12;;17822:75;;;:::o;17903:269::-;18013:39;18044:7;18013:39;:::i;:::-;18074:91;18123:41;18147:16;18123:41;:::i;:::-;18115:6;18108:4;18102:11;18074:91;:::i;:::-;18068:4;18061:105;17979:193;17903:269;;;:::o;18178:73::-;18223:3;18178:73;:::o;18257:189::-;18334:32;;:::i;:::-;18375:65;18433:6;18425;18419:4;18375:65;:::i;:::-;18310:136;18257:189;;:::o;18452:186::-;18512:120;18529:3;18522:5;18519:14;18512:120;;;18583:39;18620:1;18613:5;18583:39;:::i;:::-;18556:1;18549:5;18545:13;18536:22;;18512:120;;;18452:186;;:::o;18644:543::-;18745:2;18740:3;18737:11;18734:446;;;18779:38;18811:5;18779:38;:::i;:::-;18863:29;18881:10;18863:29;:::i;:::-;18853:8;18849:44;19046:2;19034:10;19031:18;19028:49;;;19067:8;19052:23;;19028:49;19090:80;19146:22;19164:3;19146:22;:::i;:::-;19136:8;19132:37;19119:11;19090:80;:::i;:::-;18749:431;;18734:446;18644:543;;;:::o;19193:117::-;19247:8;19297:5;19291:4;19287:16;19266:37;;19193:117;;;;:::o;19316:169::-;19360:6;19393:51;19441:1;19437:6;19429:5;19426:1;19422:13;19393:51;:::i;:::-;19389:56;19474:4;19468;19464:15;19454:25;;19367:118;19316:169;;;;:::o;19490:295::-;19566:4;19712:29;19737:3;19731:4;19712:29;:::i;:::-;19704:37;;19774:3;19771:1;19767:11;19761:4;19758:21;19750:29;;19490:295;;;;:::o;19790:1395::-;19907:37;19940:3;19907:37;:::i;:::-;20009:18;20001:6;19998:30;19995:56;;;20031:18;;:::i;:::-;19995:56;20075:38;20107:4;20101:11;20075:38;:::i;:::-;20160:67;20220:6;20212;20206:4;20160:67;:::i;:::-;20254:1;20278:4;20265:17;;20310:2;20302:6;20299:14;20327:1;20322:618;;;;20984:1;21001:6;20998:77;;;21050:9;21045:3;21041:19;21035:26;21026:35;;20998:77;21101:67;21161:6;21154:5;21101:67;:::i;:::-;21095:4;21088:81;20957:222;20292:887;;20322:618;20374:4;20370:9;20362:6;20358:22;20408:37;20440:4;20408:37;:::i;:::-;20467:1;20481:208;20495:7;20492:1;20489:14;20481:208;;;20574:9;20569:3;20565:19;20559:26;20551:6;20544:42;20625:1;20617:6;20613:14;20603:24;;20672:2;20661:9;20657:18;20644:31;;20518:4;20515:1;20511:12;20506:17;;20481:208;;;20717:6;20708:7;20705:19;20702:179;;;20775:9;20770:3;20766:19;20760:26;20818:48;20860:4;20852:6;20848:17;20837:9;20818:48;:::i;:::-;20810:6;20803:64;20725:156;20702:179;20927:1;20923;20915:6;20911:14;20907:22;20901:4;20894:36;20329:611;;;20292:887;;19882:1303;;;19790:1395;;:::o;21191:180::-;21239:77;21236:1;21229:88;21336:4;21333:1;21326:15;21360:4;21357:1;21350:15;21377:233;21416:3;21439:24;21457:5;21439:24;:::i;:::-;21430:33;;21485:66;21478:5;21475:77;21472:103;;21555:18;;:::i;:::-;21472:103;21602:1;21595:5;21591:13;21584:20;;21377:233;;;:::o;21616:235::-;21756:34;21752:1;21744:6;21740:14;21733:58;21825:18;21820:2;21812:6;21808:15;21801:43;21616:235;:::o;21857:366::-;21999:3;22020:67;22084:2;22079:3;22020:67;:::i;:::-;22013:74;;22096:93;22185:3;22096:93;:::i;:::-;22214:2;22209:3;22205:12;22198:19;;21857:366;;;:::o;22229:419::-;22395:4;22433:2;22422:9;22418:18;22410:26;;22482:9;22476:4;22472:20;22468:1;22457:9;22453:17;22446:47;22510:131;22636:4;22510:131;:::i;:::-;22502:139;;22229:419;;;:::o;22654:225::-;22794:34;22790:1;22782:6;22778:14;22771:58;22863:8;22858:2;22850:6;22846:15;22839:33;22654:225;:::o;22885:366::-;23027:3;23048:67;23112:2;23107:3;23048:67;:::i;:::-;23041:74;;23124:93;23213:3;23124:93;:::i;:::-;23242:2;23237:3;23233:12;23226:19;;22885:366;;;:::o;23257:419::-;23423:4;23461:2;23450:9;23446:18;23438:26;;23510:9;23504:4;23500:20;23496:1;23485:9;23481:17;23474:47;23538:131;23664:4;23538:131;:::i;:::-;23530:139;;23257:419;;;:::o;23682:410::-;23722:7;23745:20;23763:1;23745:20;:::i;:::-;23740:25;;23779:20;23797:1;23779:20;:::i;:::-;23774:25;;23834:1;23831;23827:9;23856:30;23874:11;23856:30;:::i;:::-;23845:41;;24035:1;24026:7;24022:15;24019:1;24016:22;23996:1;23989:9;23969:83;23946:139;;24065:18;;:::i;:::-;23946:139;23730:362;23682:410;;;;:::o;24098:180::-;24146:77;24143:1;24136:88;24243:4;24240:1;24233:15;24267:4;24264:1;24257:15;24284:185;24324:1;24341:20;24359:1;24341:20;:::i;:::-;24336:25;;24375:20;24393:1;24375:20;:::i;:::-;24370:25;;24414:1;24404:35;;24419:18;;:::i;:::-;24404:35;24461:1;24458;24454:9;24449:14;;24284:185;;;;:::o;24475:220::-;24615:34;24611:1;24603:6;24599:14;24592:58;24684:3;24679:2;24671:6;24667:15;24660:28;24475:220;:::o;24701:366::-;24843:3;24864:67;24928:2;24923:3;24864:67;:::i;:::-;24857:74;;24940:93;25029:3;24940:93;:::i;:::-;25058:2;25053:3;25049:12;25042:19;;24701:366;;;:::o;25073:419::-;25239:4;25277:2;25266:9;25262:18;25254:26;;25326:9;25320:4;25316:20;25312:1;25301:9;25297:17;25290:47;25354:131;25480:4;25354:131;:::i;:::-;25346:139;;25073:419;;;:::o;25498:351::-;25568:6;25617:2;25605:9;25596:7;25592:23;25588:32;25585:119;;;25623:79;;:::i;:::-;25585:119;25743:1;25768:64;25824:7;25815:6;25804:9;25800:22;25768:64;:::i;:::-;25758:74;;25714:128;25498:351;;;;:::o;25855:191::-;25895:3;25914:20;25932:1;25914:20;:::i;:::-;25909:25;;25948:20;25966:1;25948:20;:::i;:::-;25943:25;;25991:1;25988;25984:9;25977:16;;26012:3;26009:1;26006:10;26003:36;;;26019:18;;:::i;:::-;26003:36;25855:191;;;;:::o;26052:177::-;26192:29;26188:1;26180:6;26176:14;26169:53;26052:177;:::o;26235:366::-;26377:3;26398:67;26462:2;26457:3;26398:67;:::i;:::-;26391:74;;26474:93;26563:3;26474:93;:::i;:::-;26592:2;26587:3;26583:12;26576:19;;26235:366;;;:::o;26607:419::-;26773:4;26811:2;26800:9;26796:18;26788:26;;26860:9;26854:4;26850:20;26846:1;26835:9;26831:17;26824:47;26888:131;27014:4;26888:131;:::i;:::-;26880:139;;26607:419;;;:::o;27032:176::-;27172:28;27168:1;27160:6;27156:14;27149:52;27032:176;:::o;27214:366::-;27356:3;27377:67;27441:2;27436:3;27377:67;:::i;:::-;27370:74;;27453:93;27542:3;27453:93;:::i;:::-;27571:2;27566:3;27562:12;27555:19;;27214:366;;;:::o;27586:419::-;27752:4;27790:2;27779:9;27775:18;27767:26;;27839:9;27833:4;27829:20;27825:1;27814:9;27810:17;27803:47;27867:131;27993:4;27867:131;:::i;:::-;27859:139;;27586:419;;;:::o;28011:180::-;28151:32;28147:1;28139:6;28135:14;28128:56;28011:180;:::o;28197:366::-;28339:3;28360:67;28424:2;28419:3;28360:67;:::i;:::-;28353:74;;28436:93;28525:3;28436:93;:::i;:::-;28554:2;28549:3;28545:12;28538:19;;28197:366;;;:::o;28569:419::-;28735:4;28773:2;28762:9;28758:18;28750:26;;28822:9;28816:4;28812:20;28808:1;28797:9;28793:17;28786:47;28850:131;28976:4;28850:131;:::i;:::-;28842:139;;28569:419;;;:::o;28994:194::-;29034:4;29054:20;29072:1;29054:20;:::i;:::-;29049:25;;29088:20;29106:1;29088:20;:::i;:::-;29083:25;;29132:1;29129;29125:9;29117:17;;29156:1;29150:4;29147:11;29144:37;;;29161:18;;:::i;:::-;29144:37;28994:194;;;;:::o;29194:221::-;29334:34;29330:1;29322:6;29318:14;29311:58;29403:4;29398:2;29390:6;29386:15;29379:29;29194:221;:::o;29421:366::-;29563:3;29584:67;29648:2;29643:3;29584:67;:::i;:::-;29577:74;;29660:93;29749:3;29660:93;:::i;:::-;29778:2;29773:3;29769:12;29762:19;;29421:366;;;:::o;29793:419::-;29959:4;29997:2;29986:9;29982:18;29974:26;;30046:9;30040:4;30036:20;30032:1;30021:9;30017:17;30010:47;30074:131;30200:4;30074:131;:::i;:::-;30066:139;;29793:419;;;:::o;30218:180::-;30266:77;30263:1;30256:88;30363:4;30360:1;30353:15;30387:4;30384:1;30377:15;30404:180;30452:77;30449:1;30442:88;30549:4;30546:1;30539:15;30573:4;30570:1;30563:15"},"gasEstimates":{"creation":{"codeDepositCost":"2458000","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_ADMIN_ROLE()":"380","GOVERN_ROLE()":"374","_supplyChanges(uint256)":"infinite","addColateralToken(address)":"infinite","ausdsupply()":"2518","datafeed()":"2604","fetchColPrice()":"infinite","getRoleAdmin(bytes32)":"infinite","getRoleMember(bytes32,uint256)":"infinite","getRoleMemberCount(bytes32)":"3003","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"infinite","owner()":"2567","renounceOwnership()":"30375","renounceRole(bytes32,address)":"infinite","reserveCount()":"2476","revokeRole(bytes32,address)":"infinite","rsvList(uint256)":"infinite","setAUSDSupply(uint256)":"infinite","setDataFeedAddress(address)":"infinite","setReserveContract(address)":"infinite","stableColatAmount()":"2540","stableColatPrice()":"2498","supplyChangeCount()":"2497","transferOwnership(address)":"30785","unstableColPrice()":"2518","unstableColatAmount()":"2517","validatePeg()":"infinite","withdraw(uint256)":"infinite"},"internal":{"colateralReBalancing()":"infinite"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","GOVERN_ROLE()":"38b7f446","_supplyChanges(uint256)":"a6ef79b4","addColateralToken(address)":"e0e9349b","ausdsupply()":"bd7fe217","datafeed()":"2dc47153","fetchColPrice()":"81613f25","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","reserveCount()":"16317c21","revokeRole(bytes32,address)":"d547741f","rsvList(uint256)":"669004f9","setAUSDSupply(uint256)":"2d906e63","setDataFeedAddress(address)":"26ba7898","setReserveContract(address)":"527a52c8","stableColatAmount()":"9588e614","stableColatPrice()":"19cb170c","supplyChangeCount()":"2f41ffd0","transferOwnership(address)":"f2fde38b","unstableColPrice()":"5e6a4fb0","unstableColatAmount()":"eceab5c5","validatePeg()":"8a6e0169","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AUSD\",\"name\":\"_ausd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RepegAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_supplyChanges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blocknum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"colcontract\",\"type\":\"address\"}],\"name\":\"addColateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ausdsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"datafeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchColPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rsvList\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"colToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"setAUSDSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractaddress\",\"type\":\"address\"}],\"name\":\"setDataFeedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"name\":\"setReserveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableColatAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableColatPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyChangeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstableColPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstableColatAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatePeg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AUSDGovernance.sol\":\"AUSDGovernance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            uint256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            uint256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x2ef2101ff8bb90e9d56a3e09def73b960e7df0bbb8e8960b080d7c0c3a29ebc5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e98c0d315f562a98d915414f948e041531138284dd633b4cdb0361a7172cd97\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xeeffca030e47ae166c981ca8726784781ea5fc5835aa27d7006783194a7ed18c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x5fc67ab74022e86c5b8a21762a3375a8ddeab5c249b1568805837eca718badbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n\\n        _approve(account, _msgSender(), decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa885fd668f62491c8eb5f888dc973862fdefc5f73ef540b4bb5d857b79a5c7bf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x171a9b614bed004394c8c004271abae184a961c0c3d4c345b5e24823e836c524\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x9c5342beaabc260ed2a9c31357dd1860d0957c8604fc1fdd638444d8f2d5e1fd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x71e0d1cc75b67306382e055b789b6d3ffe34a9e2e55380d3c9895a36a42229e1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1278c76b840063ff5e14a2d7c5707812c1eabc2342ed040bf862c2d7552102fe\",\"license\":\"MIT\"},\"contracts/AUSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT LICENSE\\r\\n\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\\\";\\r\\n\\r\\n\\r\\ncontract AUSD is IERC20, ERC20Burnable, Ownable, AccessControl {\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n    using SafeERC20 for ERC20;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    bytes32 public constant MANAGER_ROLE = keccak256(\\\"MANAGER_ROLE\\\");\\r\\n\\r\\n    constructor () ERC20(\\\"AUSD Stable\\\", \\\"AUSD\\\") {\\r\\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\\r\\n        _setupRole(MANAGER_ROLE, _msgSender());\\r\\n    }\\r\\n\\r\\n    function mint(uint256 amount) external {\\r\\n        require(hasRole(MANAGER_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\\r\\n        _mint(msg.sender, amount);\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x96821069a5a34481f0a7acf50119e7f42f0c07095bcb8336a42cfc0c58c88a04\",\"license\":\"MIT LICENSE\"},\"contracts/AUSDGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT LICENSE\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./AUSD.sol\\\";\\r\\n\\r\\ncontract AUSDGovernance is Ownable, ReentrancyGuard, AccessControl {\\r\\n    using SafeMath for uint256;\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    struct SupChange {\\r\\n        string method;\\r\\n        uint256 amount;\\r\\n        uint256 timestamp;\\r\\n        uint256 blocknum;\\r\\n    }\\r\\n\\r\\n    struct ReserveList {\\r\\n        IERC20 colToken;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => ReserveList) public rsvList;\\r\\n    mapping(uint256 => SupChange) public _supplyChanges;\\r\\n\\r\\n    AUSD private ausd;\\r\\n    AggregatorV3Interface private priceOracle;\\r\\n    address private reserveContract;\\r\\n    uint256 public ausdsupply;\\r\\n    address public datafeed;\\r\\n    uint256 public supplyChangeCount;\\r\\n    uint256 public stableColatPrice = 1e18;\\r\\n    uint256 public stableColatAmount;\\r\\n    uint256 private constant COL_PRICE_TO_WEI = 1e10;\\r\\n    uint256 private constant WEI_VALUE = 1e18;\\r\\n    uint256 public unstableColatAmount;\\r\\n    uint256 public unstableColPrice;\\r\\n    uint256 public reserveCount;\\r\\n\\r\\n    bytes32 public constant GOVERN_ROLE = keccak256(\\\"GOVERN_ROLE\\\");\\r\\n\\r\\n    event RepegAction(uint256 time, uint256 amount);\\r\\n    event Withdraw(uint256 time, uint256 amount);\\r\\n\\r\\n    constructor(AUSD _ausd) {\\r\\n        ausd = _ausd;\\r\\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\\r\\n        _setupRole(GOVERN_ROLE, _msgSender());\\r\\n    }\\r\\n\\r\\n    function setDataFeedAddress(address contractaddress) external {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        datafeed = contractaddress;\\r\\n        priceOracle = AggregatorV3Interface(datafeed);\\r\\n    }\\r\\n\\r\\n    function addColateralToken(IERC20 colcontract) external nonReentrant {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        rsvList[reserveCount].colToken = colcontract;\\r\\n        reserveCount++;\\r\\n    }\\r\\n\\r\\n    function fetchColPrice() external nonReentrant {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        (, uint256 price, , , ) = priceOracle.latestRoundData();\\r\\n        uint256 value = (price).mul(COL_PRICE_TO_WEI);\\r\\n        unstableColPrice = value;\\r\\n    }\\r\\n\\r\\n    function setReserveContract(address reserve) external nonReentrant {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        reserveContract = reserve;\\r\\n    }\\r\\n\\r\\n    function colateralReBalancing() internal returns (bool) {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        uint256 stableBalance = rsvList[0].colToken.balanceOf(reserveContract);\\r\\n        uint256 unstableBalance = rsvList[1].colToken.balanceOf(\\r\\n            reserveContract\\r\\n        );\\r\\n        if (stableBalance != stableColatAmount) {\\r\\n            stableColatAmount = stableBalance;\\r\\n        }\\r\\n        if (unstableBalance != stableColatAmount) {\\r\\n            unstableColatAmount = unstableBalance;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setAUSDSupply(uint256 totalSupply) external {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        ausdsupply = totalSupply;\\r\\n    }\\r\\n\\r\\n    function validatePeg() external nonReentrant {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        bool result = colateralReBalancing();\\r\\n        if (result = true) {\\r\\n            uint256 rawcolvalue = (stableColatAmount.mul(WEI_VALUE)).add(\\r\\n                unstableColatAmount.mul(unstableColPrice)\\r\\n            );\\r\\n            uint256 colvalue = rawcolvalue.div(WEI_VALUE);\\r\\n            if (colvalue < ausdsupply) {\\r\\n                uint256 supplyChange = ausdsupply.sub(colvalue);\\r\\n                ausd.burn(supplyChange);\\r\\n                _supplyChanges[supplyChangeCount].method = \\\"Burn\\\";\\r\\n                _supplyChanges[supplyChangeCount].amount = supplyChange;\\r\\n            }\\r\\n            if (colvalue > ausdsupply) {\\r\\n                uint256 supplyChange = colvalue.sub(ausdsupply);\\r\\n                ausd.mint(supplyChange);\\r\\n                _supplyChanges[supplyChangeCount].method = \\\"Mint\\\";\\r\\n                _supplyChanges[supplyChangeCount].amount = supplyChange;\\r\\n            }\\r\\n            ausdsupply = colvalue;\\r\\n            _supplyChanges[supplyChangeCount].blocknum = block.number;\\r\\n            _supplyChanges[supplyChangeCount].timestamp = block.timestamp;\\r\\n            supplyChangeCount++;\\r\\n            emit RepegAction(block.timestamp, colvalue);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 _amount) external nonReentrant {\\r\\n        require(hasRole(GOVERN_ROLE, _msgSender()), \\\"Not allowed\\\");\\r\\n        ausd.transfer(address(msg.sender), _amount);\\r\\n        emit Withdraw(block.timestamp, _amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf9eb7c285f3102b9bbf46857cff248ac01d00f7aac90c2935df2d8dbcde54a76\",\"license\":\"MIT LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":339,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2500,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":71,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_roles","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_struct(RoleData)66_storage)"},{"astId":2667,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"rsvList","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(ReserveList)2662_storage)"},{"astId":2672,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_supplyChanges","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(SupChange)2658_storage)"},{"astId":2675,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"ausd","offset":0,"slot":"5","type":"t_contract(AUSD)2626"},{"astId":2678,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"priceOracle","offset":0,"slot":"6","type":"t_contract(AggregatorV3Interface)45"},{"astId":2680,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"reserveContract","offset":0,"slot":"7","type":"t_address"},{"astId":2682,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"ausdsupply","offset":0,"slot":"8","type":"t_uint256"},{"astId":2684,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"datafeed","offset":0,"slot":"9","type":"t_address"},{"astId":2686,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"supplyChangeCount","offset":0,"slot":"10","type":"t_uint256"},{"astId":2689,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"stableColatPrice","offset":0,"slot":"11","type":"t_uint256"},{"astId":2691,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"stableColatAmount","offset":0,"slot":"12","type":"t_uint256"},{"astId":2699,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"unstableColatAmount","offset":0,"slot":"13","type":"t_uint256"},{"astId":2701,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"unstableColPrice","offset":0,"slot":"14","type":"t_uint256"},{"astId":2703,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"reserveCount","offset":0,"slot":"15","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(AUSD)2626":{"encoding":"inplace","label":"contract AUSD","numberOfBytes":"20"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_contract(IERC20)1436":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_bytes32,t_struct(RoleData)66_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)66_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(ReserveList)2662_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct AUSDGovernance.ReserveList)","numberOfBytes":"32","value":"t_struct(ReserveList)2662_storage"},"t_mapping(t_uint256,t_struct(SupChange)2658_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct AUSDGovernance.SupChange)","numberOfBytes":"32","value":"t_struct(SupChange)2658_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)2262_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":2261,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1985_storage"}],"numberOfBytes":"64"},"t_struct(ReserveList)2662_storage":{"encoding":"inplace","label":"struct AUSDGovernance.ReserveList","members":[{"astId":2661,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"colToken","offset":0,"slot":"0","type":"t_contract(IERC20)1436"}],"numberOfBytes":"32"},"t_struct(RoleData)66_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":63,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"members","offset":0,"slot":"0","type":"t_struct(AddressSet)2262_storage"},{"astId":65,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"adminRole","offset":0,"slot":"2","type":"t_bytes32"}],"numberOfBytes":"96"},"t_struct(Set)1985_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1980,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1984,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(SupChange)2658_storage":{"encoding":"inplace","label":"struct AUSDGovernance.SupChange","members":[{"astId":2651,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"method","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2653,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2655,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"timestamp","offset":0,"slot":"2","type":"t_uint256"},{"astId":2657,"contract":"contracts/AUSDGovernance.sol:AUSDGovernance","label":"blocknum","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}